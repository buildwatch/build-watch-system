---
// TopBar.astro: Reusable navigation bar for all public pages
const { pathname } = Astro.url;
const navLinks = [
  { href: '/home', label: 'Home' },
  { href: '/about', label: 'About' },
  { href: '/projects', label: 'Projects' },
  { href: '/contact-us', label: 'Contact Us' },
  { href: '/news', label: 'News & Articles' },
];
const rightLinks = [
  { href: '/faqs', label: 'FAQs' },
  { href: '/open-data', label: 'Open Data' },
  { href: '/getting-started', label: 'Getting Started' },
];
---
<nav class="fixed top-0 left-0 w-full bg-gradient-to-r from-[#EB3C3C] via-[#e53e3e] to-[#dc2626] text-white shadow-2xl border-b border-white/20 backdrop-blur-md z-50">
  <!-- Background Pattern -->
  <div class="absolute inset-0 bg-gradient-to-r from-white/5 via-transparent to-white/5 opacity-30"></div>
  <div class="absolute top-0 left-1/4 w-32 h-32 bg-white/5 rounded-full -translate-y-16"></div>
  <div class="absolute top-0 right-1/4 w-24 h-24 bg-white/5 rounded-full -translate-y-12 translate-x-12"></div>
  
  <div class="relative px-4 md:px-10 py-4 flex items-center justify-between">
    <!-- Left Navigation Links -->
    <div class="flex items-center gap-6">
      {navLinks.map(link => (
        <a
          href={link.href}
          class={`nav-link group relative font-bold text-base tracking-wider px-4 py-2.5 rounded-xl transition-all duration-300 overflow-hidden ${
            pathname === link.href
              ? 'bg-white/20 text-white shadow-lg backdrop-blur-sm scale-105'
              : 'text-white/90 hover:text-white hover:bg-white/15 hover:shadow-lg hover:scale-105 backdrop-blur-sm'
          }`}
        >
          <!-- Hover background effect -->
          <div class="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          
          <!-- Active indicator -->
          {pathname === link.href && (
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-white rounded-full"></div>
          )}
          
          <span class="relative z-10">{link.label}</span>
        </a>
      ))}
    </div>

    <!-- Center Logo -->
    <a href="/" class="flex items-center justify-center mx-4 select-none group relative">
      <!-- Logo glow effect -->
      <div class="absolute inset-0 bg-white/10 rounded-2xl blur-xl group-hover:bg-white/20 transition-all duration-300 opacity-0 group-hover:opacity-100"></div>
      
      <img 
        src="/top-logo.png" 
        alt="Build Watch Logo" 
        class="w-60 h-24 object-contain relative z-10 transition-transform duration-300 group-hover:scale-105" 
        draggable="false" 
      />
    </a>

    <!-- Right Navigation Links and Actions -->
    <div class="flex items-center gap-6">
      {rightLinks.map(link => (
        <a
          href={link.href}
          class={`nav-link group relative font-bold text-base tracking-wider px-4 py-2.5 rounded-xl transition-all duration-300 overflow-hidden ${
            pathname === link.href
              ? 'bg-white/20 text-white shadow-lg backdrop-blur-sm scale-105'
              : 'text-white/90 hover:text-white hover:bg-white/15 hover:shadow-lg hover:scale-105 backdrop-blur-sm'
          }`}
        >
          <!-- Hover background effect -->
          <div class="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          
          <!-- Active indicator -->
          {pathname === link.href && (
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-white rounded-full"></div>
          )}
          
          <span class="relative z-10">{link.label}</span>
        </a>
      ))}
      
      <!-- Login Button -->
      <a 
        href="/login/lgu-pmt" 
        class="login-btn group relative ml-4 px-6 py-2.5 border-2 border-white/80 text-white font-bold text-base rounded-xl bg-transparent hover:bg-white hover:text-[#EB3C3C] transition-all duration-300 overflow-hidden backdrop-blur-sm"
      >
        <!-- Button glow effect -->
        <div class="absolute inset-0 bg-white/10 rounded-xl blur-md opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        
        <!-- Hover sweep effect -->
        <div class="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300 transform -skew-x-12 -translate-x-full group-hover:translate-x-full"></div>
        
        <span class="relative z-10">Login</span>
      </a>
      
      <!-- Version Control -->
      <div class="version-control group relative ml-2 px-4 py-2.5 border border-white/60 text-white/80 font-medium text-sm rounded-lg bg-white/10 backdrop-blur-sm">
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <span class="relative z-10">v0.1.0</span>
        </div>
      </div>
    </div>
  </div>
</nav>

<style>
  /* Navigation link animations */
  .nav-link {
    position: relative;
    transform-origin: center;
  }

  .nav-link::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 0;
    background: linear-gradient(90deg, rgba(255,255,255,0.3), transparent);
    transition: width 0.4s ease;
  }

  .nav-link:hover::before {
    width: 100%;
  }

  /* Button hover effects */
  .login-btn {
    position: relative;
    transform-origin: center;
  }

  .login-btn:hover {
    transform: translateY(-2px);
  }

  /* Version control styles */
  .version-control {
    position: relative;
    transform-origin: center;
    transition: all 0.3s ease;
  }

  .version-control:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.8);
    color: white;
  }

  /* Active state enhancements */
  .nav-link.active {
    background: rgba(255, 255, 255, 0.25);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(10px);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .nav-link {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
    
    .login-btn {
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
    }

    .version-control {
      padding: 0.5rem 0.75rem;
      font-size: 0.75rem;
    }
  }

  /* Smooth scrolling for anchor links */
  html {
    scroll-behavior: smooth;
  }

  /* Custom focus styles for accessibility */
  .nav-link:focus, .login-btn:focus {
    outline: 2px solid rgba(255, 255, 255, 0.5);
    outline-offset: 2px;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Add scroll effect to navbar
    const navbar = document.querySelector('nav');
    let lastScrollTop = 0;
    
    window.addEventListener('scroll', function() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (scrollTop > lastScrollTop && scrollTop > 100) {
        // Scrolling down - hide navbar slightly
        navbar.style.transform = 'translateY(-100%)';
        navbar.style.transition = 'transform 0.3s ease-in-out';
      } else {
        // Scrolling up - show navbar
        navbar.style.transform = 'translateY(0)';
        navbar.style.transition = 'transform 0.3s ease-in-out';
      }
      
      lastScrollTop = scrollTop;
    });

    // Add active state management for better UX
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      const href = link.getAttribute('href');
      if (href === currentPath) {
        link.classList.add('active');
      }
    });

    // Add hover sound effect (optional - for enhanced UX)
    const buttons = document.querySelectorAll('.nav-link, .login-btn, .signup-btn');
    
    buttons.forEach(button => {
      button.addEventListener('mouseenter', function() {
        // Add subtle vibration effect for mobile
        if ('vibrate' in navigator) {
          navigator.vibrate(10);
        }
      });
    });
  });
</script> 