---
// EIU Sidebar Component
// Theme Color: #10B981
---

<aside class="w-64 bg-gradient-to-br from-[#10B981] via-[#059669] to-[#047857] text-white shadow-2xl h-screen flex flex-col relative overflow-hidden">
  <!-- Background Pattern -->
  <div class="absolute inset-0 bg-gradient-to-br from-white/5 to-transparent opacity-30"></div>
  <div class="absolute top-0 right-0 w-32 h-32 bg-white/5 rounded-full -translate-y-16 translate-x-16"></div>
  <div class="absolute bottom-0 left-0 w-24 h-24 bg-white/5 rounded-full translate-y-12 -translate-x-12"></div>
  
  <!-- Header Section -->
  <div class="relative p-6 border-b border-white/10 backdrop-blur-sm flex items-center">
    <div class="flex items-center gap-4 w-full">
      <div class="w-14 h-14 rounded-2xl overflow-hidden shadow-lg ring-2 ring-white/10 flex-shrink-0">
        <img 
          id="eiu-sidebar-profile-picture"
          src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Crect width='100' height='100' fill='%2310B981'/%3E%3Ctext x='50' y='50' font-family='Arial' font-size='40' font-weight='bold' text-anchor='middle' dy='.3em' fill='white'%3EFE%3C/text%3E%3C/svg%3E"
          alt="EIU Personnel"
          class="w-full h-full object-cover"
          onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
        />
        <div class="w-full h-full bg-gradient-to-br from-green-500 to-green-600 rounded-2xl flex items-center justify-center shadow-lg" style="display: none;">
          <span class="text-white font-bold text-lg">FE</span>
        </div>
      </div>
      <div class="nav-text overflow-hidden transition-opacity duration-300">
        <div class="flex flex-col gap-1">
          <p id="eiu-sidebar-abbreviated-name" class="text-xl font-bold tracking-tight text-white drop-shadow-sm whitespace-nowrap">Loading...</p>
          <p id="eiu-sidebar-role" class="text-sm text-white/80 font-medium whitespace-nowrap">Loading...</p>
          <div class="flex items-center gap-2">
            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse flex-shrink-0"></div>
            <span class="text-xs text-white/70 font-medium">Active</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Navigation Section -->
  <div class="relative flex-1 overflow-y-auto py-4 custom-scrollbar">
    <nav class="space-y-2 px-3">
      <!-- Dashboard Overview -->
      <a href="/dashboard/eiu/EIUDashboard" 
         class="nav-item nav-link group flex items-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 hover:bg-white/15 hover:shadow-xl hover:scale-[1.02] backdrop-blur-sm"
         data-tooltip="Dashboard Overview">
        <div class="nav-icon flex-shrink-0">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z"></path>
          </svg>
        </div>
        <span class="nav-text font-medium text-white/90 group-hover:text-white">Dashboard Overview</span>
      </a>

      <!-- My Projects -->
      <a href="/dashboard/eiu/modules/projects" 
         class="nav-item nav-link group flex items-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 hover:bg-white/15 hover:shadow-xl hover:scale-[1.02] backdrop-blur-sm"
         data-tooltip="My Projects">
        <div class="nav-icon flex-shrink-0">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
        </div>
        <span class="nav-text font-medium text-white/90 group-hover:text-white">My Projects</span>
      </a>

      <!-- Submit Update -->
      <a href="/dashboard/eiu/modules/submit-update" 
         class="nav-item nav-link group flex items-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 hover:bg-white/15 hover:shadow-xl hover:scale-[1.02] backdrop-blur-sm"
         data-tooltip="Submit Update">
        <div class="nav-icon flex-shrink-0">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
          </svg>
        </div>
        <span class="nav-text font-medium text-white/90 group-hover:text-white">Submit Update</span>
      </a>

      <!-- Create Activity -->
      <a href="/dashboard/eiu/modules/create-activity" 
         class="nav-item nav-link group flex items-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 hover:bg-white/15 hover:shadow-xl hover:scale-[1.02] backdrop-blur-sm"
         data-tooltip="Create Activity">
        <div class="nav-icon flex-shrink-0">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
        </div>
        <span class="nav-text font-medium text-white/90 group-hover:text-white">Create Activity</span>
      </a>



    </nav>
  </div>



  <!-- Logout Section -->
  <div class="relative p-6 border-t border-white/20 backdrop-blur-sm">
    <button id="eiu-logout-btn" 
       class="flex items-center gap-3 px-4 py-3 rounded-2xl transition-all duration-300 hover:bg-white/15 hover:shadow-xl hover:scale-[1.02] backdrop-blur-sm text-white group w-full text-left">
      <div class="nav-icon">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
        </svg>
      </div>
      <span class="font-medium text-white/90 group-hover:text-white">Logout</span>
    </button>
  </div>
</aside>

<style>
  .nav-link {
    position: relative;
    overflow: hidden;
  }

  .nav-link::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 0;
    background: linear-gradient(90deg, rgba(255,255,255,0.2), transparent);
    transition: width 0.4s ease;
  }

  .nav-link:hover::before {
    width: 100%;
  }

  .nav-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    transition: all 0.3s ease;
  }

  .nav-link:hover .nav-icon {
    transform: scale(1.1) rotate(5deg);
  }

  /* Enhanced Sidebar Icon Hover Effects - Matching Topbar Style */
  .nav-link::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, rgba(156, 163, 175, 0.2) 100%);
    border-radius: 1rem;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .nav-link:hover::after {
    opacity: 1;
  }

  /* Enhanced icon hover effects with neutral theme */
  .nav-link:hover .nav-icon {
    transform: scale(1.1) rotate(5deg);
    filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.3));
  }

  /* Specific rotation effects for different icons */
  .nav-link:nth-child(1):hover .nav-icon { transform: scale(1.1) rotate(12deg); }
  .nav-link:nth-child(2):hover .nav-icon { transform: scale(1.1) rotate(-6deg); }
  .nav-link:nth-child(3):hover .nav-icon { transform: scale(1.1) rotate(8deg); }
  .nav-link:nth-child(4):hover .nav-icon { transform: scale(1.1) rotate(-4deg); }
  .nav-link:nth-child(5):hover .nav-icon { transform: scale(1.1) rotate(10deg); }
  .nav-link:nth-child(6):hover .nav-icon { transform: scale(1.1) rotate(-8deg); }
  .nav-link:nth-child(7):hover .nav-icon { transform: scale(1.1) rotate(6deg); }
  .nav-link:nth-child(8):hover .nav-icon { transform: scale(1.1) rotate(-12deg); }

  /* Active state styling */
  .nav-link.active {
    background: rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(10px);
  }

  .nav-link.active::before {
    width: 100%;
  }

  .nav-link.active .nav-icon {
    transform: scale(1.1);
  }

  /* Custom scrollbar */
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 10px;
    transition: background 0.3s ease;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }

  /* Firefox scrollbar */
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1);
  }

  /* EIU Sidebar Collapse Styles - ULTRA SMOOTH */
  :global(aside) {
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    width: 256px; /* w-64 default width */
    min-width: 256px;
    flex-shrink: 0;
  }

  :global(aside.collapsed) {
    width: 80px; /* w-20 collapsed width */
    min-width: 80px;
    overflow-y: hidden; /* Prevent scrollbar */
  }

  /* Override the scrollable area in collapsed state */
  :global(aside.collapsed .relative.flex-1.overflow-y-auto) {
    overflow-y: visible; /* Remove scroll in collapsed state */
  }

  /* Hide text in collapsed sidebar - SMOOTH FADE */
  :global(aside.collapsed .nav-text) {
    opacity: 0;
    pointer-events: none;
    width: 0;
    overflow: hidden;
    transition: opacity 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), width 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  /* USE PROFILE PICTURE IN COLLAPSED STATE - CENTERED */
  :global(aside.collapsed .w-14.h-14) {
    display: block !important; /* Show profile photo */
    margin: 0 auto !important; /* Center it perfectly */
  }

  :global(aside.collapsed .flex.items-center.gap-4) {
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    padding: 0.75rem 0 !important; /* Standard padding */
    margin: 0 !important; /* No margin */
    position: relative !important;
    height: auto !important; /* Auto height for profile picture */
  }

  /* Navigation section - remove container padding */
  :global(aside.collapsed .relative.flex-1.overflow-y-auto.py-4) {
    padding: 0.5rem 0 !important; /* Only vertical padding */
  }

  /* Remove nav container padding in collapsed state */
  :global(aside.collapsed nav.space-y-2.px-3) {
    padding: 0 !important; /* Remove all nav padding */
    margin: 0 !important;
  }

  /* Navigation items - position to match expanded sidebar exactly */
  :global(aside.collapsed .nav-item) {
    padding: 0.75rem 0 0.75rem 1.75rem !important; /* Match expanded position */
    margin: 0.75rem 0 !important; /* Increased vertical spacing */
    justify-content: flex-start !important; /* Align to left to match expanded state */
    position: relative;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  /* Logout section - make it visible and properly positioned */
  :global(aside.collapsed .relative.p-6:last-child) {
    padding: 0.5rem 0 1rem 0 !important; /* Vertical padding only */
    border-top: 1px solid rgba(255, 255, 255, 0.1) !important;
    margin-top: auto !important;
    display: block !important;
  }

  :global(aside.collapsed .relative.p-6:last-child button) {
    padding: 0.75rem 0 0.75rem 1.75rem !important; /* Match nav items positioning */
    margin: 0.75rem 0 !important;
    justify-content: flex-start !important; /* Align to left to match nav items */
    width: 100%;
    display: flex !important;
  }

  /* Hide logout text in collapsed state */
  :global(aside.collapsed .relative.p-6:last-child button span) {
    display: none !important;
  }

  :global(aside.collapsed .space-y-2) {
    gap: 0.75rem !important; /* Increased gap for better icon spacing */
  }

  /* Override space-y-2 utility in collapsed state with increased spacing */
  :global(aside.collapsed nav .space-y-2 > * + *) {
    margin-top: 0.75rem !important; /* Increased spacing for better visual separation */
  }

  /* Icons - position them to match expanded state */
  :global(aside.collapsed .nav-icon) {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    margin: 0; /* No margin - let padding handle positioning */
  }

  /* Ensure all nav text is hidden in collapsed state */
  :global(aside.collapsed .nav-text) {
    display: none !important;
    opacity: 0 !important;
    width: 0 !important;
    overflow: hidden !important;
  }

  /* Add smooth transitions to all navigation items */
  :global(.nav-item) {
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  :global(.nav-text) {
    transition: opacity 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94), width 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  :global(.nav-icon) {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  /* Tooltip animations and styling */
  :global(aside.collapsed .nav-item:hover::after) {
    content: attr(data-tooltip);
    position: absolute;
    left: calc(100% + 12px);
    top: 50%;
    transform: translateY(-50%);
    background: rgba(0, 0, 0, 0.9);
    color: white;
    padding: 8px 12px;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    white-space: nowrap;
    z-index: 1000;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    opacity: 0;
    animation: tooltipFadeIn 0.2s ease forwards;
  }

  @keyframes tooltipFadeIn {
    from {
      opacity: 0;
      transform: translateY(-50%) translateX(-8px);
    }
    to {
      opacity: 1;
      transform: translateY(-50%) translateX(0);
    }
  }

  /* Tooltip arrow */
  :global(aside.collapsed .nav-item:hover::before) {
    content: '';
    position: absolute;
    left: calc(100% + 6px);
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
    border-right: 6px solid rgba(0, 0, 0, 0.9);
    z-index: 999;
    opacity: 0;
    animation: tooltipFadeIn 0.2s ease forwards;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('🚀 EIU Sidebar loaded!');
    
    // Load profile picture from server or localStorage for sidebar
    async function loadSidebarProfilePicture() {
      try {
        // Get actual user ID from localStorage
        const userData = localStorage.getItem('user');
        let userId = 'EIU-0001'; // Default fallback
        if (userData) {
          try {
            const user = JSON.parse(userData);
            userId = user.employeeId || user.username || user.id || user.userId || 'EIU-0001';
          } catch (error) {
            console.warn('⚠️ Error parsing user data in sidebar, using default userId');
          }
        }
        
        // First try to get from server
        console.log('EIU Sidebar: Fetching profile picture from server for userId:', userId);
        const response = await fetch(`http://localhost:3000/api/profile/picture/${userId}`);
        
        if (response.ok) {
          const result = await response.json();
          if (result.success && result.profilePictureUrl) {
            console.log('EIU Sidebar: Profile picture loaded from server:', result.profilePictureUrl);
            
            // Update the sidebar profile picture
            const sidebarProfilePic = document.getElementById('eiu-sidebar-profile-picture');
            if (sidebarProfilePic) {
              sidebarProfilePic.src = result.profilePictureUrl;
              // Hide fallback div if it exists
              const fallbackDiv = sidebarProfilePic.nextElementSibling;
              if (fallbackDiv) {
                fallbackDiv.style.display = 'none';
                sidebarProfilePic.style.display = 'block';
              }
            }
            
            // Store in localStorage for future use
            localStorage.setItem('eiu_profile_picture', result.profilePictureUrl);
            return;
          }
        }
      } catch (error) {
        console.log('EIU Sidebar: Server fetch failed, trying localStorage:', error);
      }
      
      // Fallback to localStorage if server fails
      const storedUrl = localStorage.getItem('eiu_profile_picture');
      if (storedUrl) {
        const sidebarProfilePic = document.getElementById('eiu-sidebar-profile-picture');
        if (sidebarProfilePic) {
          sidebarProfilePic.src = storedUrl;
          // Hide fallback div if it exists
          const fallbackDiv = sidebarProfilePic.nextElementSibling;
          if (fallbackDiv) {
            fallbackDiv.style.display = 'none';
            sidebarProfilePic.style.display = 'block';
          }
        }
      }
    }
    
    // Load profile picture on page load
    loadSidebarProfilePicture();

    // Listen for storage changes to update profile picture in real-time
    window.addEventListener('storage', function(e) {
      if (e.key === 'eiu_profile_picture') {
        console.log('EIU Sidebar received storage event for profile picture');
        loadSidebarProfilePicture();
      }
    });

    // Also listen for custom event from EIU Profile module
    window.addEventListener('eiuProfilePictureUpdated', function(e) {
      console.log('🎯 EIU Sidebar received eiuProfilePictureUpdated event:', e.detail);
      console.log('🎯 EIU Sidebar: Updating profile picture immediately with:', e.detail.profilePictureUrl);
      
      // Update immediately without calling loadSidebarProfilePicture
      const sidebarProfilePic = document.getElementById('eiu-sidebar-profile-picture');
      if (sidebarProfilePic && e.detail.profilePictureUrl) {
        console.log('🎯 EIU Sidebar: Setting profile picture src to:', e.detail.profilePictureUrl);
        sidebarProfilePic.src = e.detail.profilePictureUrl;
        
        // Hide fallback div if it exists
        const fallbackDiv = sidebarProfilePic.nextElementSibling;
        if (fallbackDiv) {
          fallbackDiv.style.display = 'none';
          sidebarProfilePic.style.display = 'block';
        }
        
        // Store in localStorage for future use
        localStorage.setItem('eiu_profile_picture', e.detail.profilePictureUrl);
        console.log('🎯 EIU Sidebar: Profile picture updated and stored in localStorage');
        
        // Visual feedback
        sidebarProfilePic.style.transform = 'scale(1.1)';
        setTimeout(() => {
          sidebarProfilePic.style.transform = 'scale(1)';
        }, 200);
      }
    });

    // Register with global manager if available
    if (window.eiuProfilePictureManager) {
      console.log('🎯 EIU Sidebar registering with global manager');
      window.eiuProfilePictureManager.addListener((url) => {
        console.log('🎯 EIU Sidebar received update from global manager:', url);
        const sidebarProfilePic = document.getElementById('eiu-sidebar-profile-picture');
        if (sidebarProfilePic && url) {
          sidebarProfilePic.src = url;
          const fallbackDiv = sidebarProfilePic.nextElementSibling;
          if (fallbackDiv) {
            fallbackDiv.style.display = 'none';
            sidebarProfilePic.style.display = 'block';
          }
        }
      });
    }
  });
</script>

<script>
  import authService from '../services/auth.js';
  
  // Make authService available globally
  window.authService = authService;
  
  document.addEventListener('DOMContentLoaded', function() {
    // Get current path
    const currentPath = window.location.pathname;
    
    // Find all nav links
    const navLinks = document.querySelectorAll('.nav-link');
    
    // Remove active class from all links
    navLinks.forEach(link => {
      link.classList.remove('active');
    });
    
    // Add active class to current page
    navLinks.forEach(link => {
      if (link.getAttribute('href') === currentPath) {
        link.classList.add('active');
      }
    });
    
    // Handle logout button
    const logoutBtn = document.getElementById('eiu-logout-btn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', function() {
        authService.logout();
      });
    }
    
    // Load user data for sidebar
    loadUserData();
  });
  
  // Function to load and display user data
  async function loadUserData() {
    try {
      // Get current user data
      const currentUser = authService.getCurrentUser();
      
      if (currentUser) {
        updateSidebarUserData(currentUser);
      } else {
        // If no user data, try to fetch from API
        try {
          const response = await fetch('http://localhost:3000/api/auth/profile', {
            headers: {
              'Authorization': `Bearer ${localStorage.getItem('token')}`
            }
          });
          
          if (response.ok) {
            const userData = await response.json();
            if (userData.success && userData.user) {
              updateSidebarUserData(userData.user);
            } else {
              // Fallback values if API fails
              setFallbackValues();
            }
          } else {
            setFallbackValues();
          }
        } catch (error) {
          console.error('Failed to fetch user profile for sidebar:', error);
          setFallbackValues();
        }
      }
    } catch (error) {
      console.error('Error loading user data for sidebar:', error);
      setFallbackValues();
    }
  }
  
  // Convert full name to abbreviation (e.g., "First External Partner MEO" -> "F.E.P.MEO")
  function convertToAbbreviation(fullName) {
    if (!fullName) return 'F.E.P.MEO';
    
    const words = fullName.trim().split(/\s+/);
    if (words.length === 1) return words[0].toUpperCase();
    
    const abbreviated = words.slice(0, -1).map(word => word.charAt(0).toUpperCase()).join('.') + 
                       '.' + words[words.length - 1].toUpperCase();
    return abbreviated;
  }

  // Function to update sidebar user data
  function updateSidebarUserData(userData) {
    try {
      // Get full name from various possible fields
      const fullName = userData.fullName || userData.name || 
                      (userData.firstName && userData.lastName ? `${userData.firstName} ${userData.lastName}` : null) ||
                      'First External Partner MEO';
      
      // Update abbreviated name
      const abbreviatedNameElement = document.getElementById('eiu-sidebar-abbreviated-name');
      if (abbreviatedNameElement) {
        const abbreviatedName = convertToAbbreviation(fullName);
        abbreviatedNameElement.textContent = abbreviatedName;
      }
      
      // Update role (always show "EIU" for EIU users)
      const roleElement = document.getElementById('eiu-sidebar-role');
      if (roleElement) {
        roleElement.textContent = 'EIU';
      }
      
      console.log('✅ EIU sidebar user data updated:', { fullName, abbreviatedName: convertToAbbreviation(fullName), role: 'EIU' });
    } catch (error) {
      console.error('❌ Error updating EIU sidebar user data:', error);
      setFallbackValues();
    }
  }
  
  // Set fallback values if everything fails
  function setFallbackValues() {
    const abbreviatedNameElement = document.getElementById('eiu-sidebar-abbreviated-name');
    if (abbreviatedNameElement) {
      abbreviatedNameElement.textContent = 'F.E.P.MEO';
    }
    
    const roleElement = document.getElementById('eiu-sidebar-role');
    if (roleElement) {
      roleElement.textContent = 'EIU';
    }
  }
</script> 