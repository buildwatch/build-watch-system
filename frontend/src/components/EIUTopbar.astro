---
// EIUTopbar.astro
// Initial timestamp for SSR; client script keeps it live
const currentTime = new Date().toLocaleString('en-PH', {
  weekday: 'long',
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  hour: '2-digit',
  minute: '2-digit'
});
---

<header class="relative z-50 flex items-center justify-between px-8 py-4 bg-gradient-to-r from-[#10B981] via-[#059669] to-[#047857] text-white shadow-lg border-b border-white/10 backdrop-blur-sm">
  <!-- Subtle overlay for depth -->
  <div class="pointer-events-none absolute inset-0 bg-gradient-to-r from-white/5 via-transparent to-white/5 opacity-10"></div>
  <div class="pointer-events-none absolute -top-6 left-24 w-40 h-40 bg-white/10 rounded-full blur-3xl opacity-20"></div>
  <div class="pointer-events-none absolute -bottom-10 right-24 w-32 h-32 bg-white/10 rounded-full blur-2xl opacity-20"></div>
  
  <!-- Left Section: Sidebar Toggle and Logo -->
  <div class="flex items-center space-x-6">
    <!-- Sidebar Toggle Button -->
    <button id="eiu-sidebar-toggle" class="group p-2.5 rounded-xl bg-white/10 hover:bg-white/20 active:scale-95 transition-all duration-300 backdrop-blur-sm border border-white/20 shadow-lg hover:shadow-xl">
      <svg id="eiu-sidebar-toggle-icon" class="w-6 h-6 text-white transition-all duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
      </svg>
    </button>

    <!-- Logo -->
    <div class="flex items-center space-x-3">
      <div class="w-10 h-10 rounded-xl flex items-center justify-center shadow-lg overflow-hidden ring-1 ring-white/10">
        <img src="/build-watch-logo.png" alt="Build Watch Logo" class="w-full h-full object-contain" />
      </div>
      <div>
        <h1 class="text-lg font-bold text-white">Build Watch</h1>
        <p class="text-xs text-white/70">External Implementing Unit</p>
      </div>
    </div>
  </div>

  <!-- Center Section: Search Bar, Date/Time and Status -->
  <div class="hidden md:flex items-center gap-6">
    <!-- Search Bar - Moved slightly left for better centering -->
    <div class="relative -ml-8" id="eiu-search-wrapper">
      <input 
        id="eiu-global-search"
        type="text" 
        placeholder="Search projects, reports, submissions..." 
        class="w-80 pl-10 pr-4 py-2.5 bg-white/10 border border-white/20 rounded-xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-white/30 focus:border-transparent backdrop-blur-sm transition-all duration-300" 
        autocomplete="off"
      />
      <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
        <svg class="h-6 w-6 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
        </svg>
      </div>
    </div>
    
    <div class="text-center">
      <p id="eiu-clock" class="text-sm text-white">Loading...</p>
      <p class="text-xs text-white/60">Philippine Standard Time</p>
    </div>
    <div class="flex items-center gap-2 px-3 py-1 rounded-full bg-green-500/10 text-green-300 ring-1 ring-green-400/20">
      <span class="w-2 h-2 rounded-full bg-green-400 animate-pulse"></span>
      <span class="text-sm font-medium">System Operational</span>
    </div>
  </div>

  <!-- Right Section: Actions and User -->
  <div class="flex items-center space-x-4">
    <!-- System Management Actions -->
    <div class="flex items-center space-x-2">
      <!-- System Announcement Button -->
      <a href="/dashboard/eiu/modules/announcements" title="System Announcements" aria-label="System Announcements" class="group relative p-2.5 text-white/80 hover:text-white hover:bg-gradient-to-r hover:from-white/20 hover:to-gray-300/20 rounded-xl transition-all duration-300 ease-out focus:outline-none focus:ring-2 focus:ring-white/30 hover:scale-110 hover:shadow-lg hover:shadow-white/25 transform-gpu">
        <svg class="w-5 h-5 transition-all duration-300 group-hover:scale-110 group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"></path>
        </svg>
        <!-- Enhanced hover glow effect -->
        <div class="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-gray-300/0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm"></div>
      </a>
      
      <!-- Messaging Center Button -->
      <a href="/dashboard/eiu/modules/messaging" title="Messaging Center" aria-label="Messaging Center" class="group relative p-2.5 text-white/80 hover:text-white hover:bg-gradient-to-r hover:from-white/20 hover:to-gray-300/20 rounded-xl transition-all duration-300 ease-out focus:outline-none focus:ring-2 focus:ring-white/30 hover:scale-110 hover:shadow-lg hover:shadow-white/25 transform-gpu">
        <svg class="w-5 h-5 transition-all duration-300 group-hover:scale-110 group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
        </svg>
        <!-- Enhanced hover glow effect -->
        <div class="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-gray-300/0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm"></div>
      </a>
      
      <!-- System Health Button -->
      <a href="/dashboard/eiu/modules/system-health" title="System Health" aria-label="System Health" class="group relative p-2.5 text-white/80 hover:text-white hover:bg-gradient-to-r hover:from-white/20 hover:to-gray-300/20 rounded-xl transition-all duration-300 ease-out focus:outline-none focus:ring-2 focus:ring-white/30 hover:scale-110 hover:shadow-lg hover:shadow-white/25 transform-gpu">
        <svg class="w-5 h-5 transition-all duration-300 group-hover:scale-110 group-hover:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
        </svg>
        <!-- Enhanced hover glow effect -->
        <div class="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-gray-300/0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm"></div>
      </a>
    </div>

    <!-- Notifications -->
    <div class="relative z-[1001]" id="eiu-notification-container">
      <button class="group relative p-2.5 text-white/80 hover:text-white hover:bg-gradient-to-r hover:from-white/20 hover:to-gray-300/20 rounded-xl transition-all duration-300 ease-out focus:outline-none focus:ring-2 focus:ring-white/30 hover:scale-110 hover:shadow-lg hover:shadow-white/25 transform-gpu" id="eiu-notification-btn" title="Notifications" aria-label="Notifications">
        <svg class="w-5 h-5 transition-all duration-300 group-hover:scale-110 group-hover:rotate-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
        </svg>
        <!-- Enhanced hover glow effect -->
        <div class="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-gray-300/0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm"></div>
        <span class="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full text-xs flex items-center justify-center font-medium hidden text-white group-hover:scale-110 transition-transform duration-200" id="eiu-notification-badge">0</span>
      </button>
    </div>

    <!-- User Profile -->
    <div class="relative group" id="eiu-user-dropdown-container">
      <button id="eiu-profile-dropdown-btn" class="flex items-center space-x-3 p-2 rounded-xl hover:bg-white/10 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-white/20" title="Open profile menu" aria-haspopup="true" aria-expanded="false">
        <div class="w-10 h-10 rounded-xl overflow-hidden shadow-lg ring-1 ring-white/10">
          <img 
            id="eiu-profile-picture"
            src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Crect width='100' height='100' fill='%2310B981'/%3E%3Ctext x='50' y='50' font-family='Arial' font-size='40' font-weight='bold' text-anchor='middle' dy='.3em' fill='white'%3EFE%3C/text%3E%3C/svg%3E"
            alt="EIU Personnel"
            class="w-full h-full object-cover"
            onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
          />
          <div class="w-full h-full bg-gradient-to-br from-green-500 to-green-600 flex items-center justify-center" style="display: none;">
            <span id="eiu-profile-initials" class="text-white font-bold text-sm">FE</span>
          </div>
        </div>
        <div id="eiu-user-name" class="text-left hidden md:block max-w-[200px]">
          <p class="text-sm font-semibold text-white truncate" title="First External Partner MEO">First External Partner MEO</p>
          <div class="flex items-center gap-1">
            <p class="text-xs text-green-200/80">EIU</p>
            <div class="flex items-center gap-1">
              <div class="w-1.5 h-1.5 bg-green-400 rounded-full animate-pulse"></div>
              <span class="text-xs text-green-300 font-medium">Active</span>
            </div>
          </div>
        </div>
        <svg class="w-4 h-4 text-white/60 group-hover:text-white transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
      </button>

      <!-- Enhanced EIU Profile Dropdown Menu -->
      <div id="eiu-profile-dropdown" class="absolute right-0 mt-3 w-72 bg-gradient-to-br from-[#10B981] via-[#059669] to-[#047857] rounded-2xl shadow-2xl border border-white/10 opacity-0 invisible scale-95 transform transition-all duration-500 ease-out z-[9999] backdrop-blur-xl hidden">
        <!-- Header Section -->
        <div class="p-4 border-b border-white/10" style="background: linear-gradient(135deg, rgba(16, 185, 129, 0.15) 0%, rgba(5, 150, 105, 0.1) 100%);">
          <div class="flex items-center space-x-3">
            <div class="w-12 h-12 rounded-xl overflow-hidden ring-2 ring-white/10 shadow-lg">
              <img 
                id="eiu-dropdown-photo"
                src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Crect width='100' height='100' fill='%2310B981'/%3E%3Ctext x='50' y='50' font-family='Arial' font-size='40' font-weight='bold' text-anchor='middle' dy='.3em' fill='white'%3EFE%3C/text%3E%3C/svg%3E"
                alt="EIU Personnel"
                class="w-full h-full object-cover"
                onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
              />
              <div class="w-full h-full bg-gradient-to-br from-[#10B981] to-[#059669] flex items-center justify-center" style="display: none;">
                <span id="eiu-dropdown-initials" class="text-white font-bold text-lg">FE</span>
              </div>
            </div>
            <div class="flex-1 min-w-0">
              <p id="eiu-dropdown-name" class="text-sm font-semibold text-white truncate">First External Partner MEO</p>
              <p class="text-xs text-white/80 truncate">External Implementing Unit</p>
              <div class="flex items-center gap-2 mt-1">
                <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                <span class="text-xs text-green-300 font-medium">Active</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Menu Items -->
        <div class="py-2">
          <!-- Profile Section -->
          <div class="px-3 py-2">
            <a href="/dashboard/eiu/modules/profile" class="group flex items-center px-3 py-3 text-sm text-white hover:bg-blue-500/10 hover:text-blue-300 rounded-xl transition-all duration-200 hover:scale-[1.02]">
              <div class="w-8 h-8 rounded-lg bg-blue-500/20 flex items-center justify-center mr-3 group-hover:bg-blue-500/30 transition-colors">
                <svg class="w-4 h-4 text-blue-400 group-hover:text-blue-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
              </div>
              <div>
                <span class="font-medium">My Profile</span>
                <p class="text-xs text-white/70 group-hover:text-blue-300">View & edit profile</p>
              </div>
            </a>
          </div>

          <!-- Project Management Section -->
          <div class="px-3 py-2">
            <a href="/dashboard/eiu/modules/projects" class="group flex items-center px-3 py-3 text-sm text-white hover:bg-emerald-500/10 hover:text-emerald-300 rounded-xl transition-all duration-200 hover:scale-[1.02]">
              <div class="w-8 h-8 rounded-lg bg-emerald-500/20 flex items-center justify-center mr-3 group-hover:bg-emerald-500/30 transition-colors">
                <svg class="w-4 h-4 text-emerald-400 group-hover:text-emerald-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
              </div>
              <div>
                <span class="font-medium">My Projects</span>
                <p class="text-xs text-white/70 group-hover:text-emerald-300">Track project progress</p>
              </div>
            </a>
          </div>

          <!-- Submit Update Section -->
          <div class="px-3 py-2">
            <a href="/dashboard/eiu/modules/submit-update" class="group flex items-center px-3 py-3 text-sm text-white hover:bg-amber-500/10 hover:text-amber-300 rounded-xl transition-all duration-200 hover:scale-[1.02]">
              <div class="w-8 h-8 rounded-lg bg-amber-500/20 flex items-center justify-center mr-3 group-hover:bg-amber-500/30 transition-colors">
                <svg class="w-4 h-4 text-amber-400 group-hover:text-amber-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                </svg>
              </div>
              <div>
                <span class="font-medium">Submit Update</span>
                <p class="text-xs text-white/70 group-hover:text-amber-300">Report project progress</p>
              </div>
            </a>
          </div>

          <!-- Activity Management Section -->
          <div class="px-3 py-2">
            <a href="/dashboard/eiu/modules/create-activity" class="group flex items-center px-3 py-3 text-sm text-white hover:bg-indigo-500/10 hover:text-indigo-300 rounded-xl transition-all duration-200 hover:scale-[1.02]">
              <div class="w-8 h-8 rounded-lg bg-indigo-500/20 flex items-center justify-center mr-3 group-hover:bg-indigo-500/30 transition-colors">
                <svg class="w-4 h-4 text-indigo-400 group-hover:text-indigo-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </div>
              <div>
                <span class="font-medium">Create Activity</span>
                <p class="text-xs text-white/70 group-hover:text-indigo-300">Log new activities</p>
              </div>
            </a>
          </div>

          <!-- Divider -->
          <div class="mx-3 my-2 border-t border-white/10"></div>

          <!-- Logout Section -->
          <div class="px-3 py-2">
            <button id="eiu-dropdown-logout-btn" class="group flex items-center w-full px-3 py-3 text-sm text-red-400 hover:bg-red-500/20 hover:text-red-300 rounded-xl transition-all duration-200 hover:scale-[1.02] text-left">
              <div class="w-8 h-8 rounded-lg bg-red-500/20 flex items-center justify-center mr-3 group-hover:bg-red-500/30 transition-colors">
                <svg class="w-4 h-4 text-red-400 group-hover:text-red-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                </svg>
              </div>
              <div>
                <span class="font-medium">Sign Out</span>
                <p class="text-xs text-white/70 group-hover:text-red-300">Secure logout</p>
              </div>
            </button>
          </div>
        </div>

        <!-- Footer -->
        <div class="px-4 py-3 border-t border-white/10" style="background: linear-gradient(135deg, rgba(16, 185, 129, 0.15) 0%, rgba(5, 150, 105, 0.1) 100%);">
          <div class="flex items-center justify-between text-xs text-white/70">
            <span>Session: Active</span>
            <span class="text-green-400">●</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<!-- Overlay for notification sidebar -->
<div class="fixed inset-0 bg-black/50 z-[1050] hidden transition-opacity duration-300" id="eiu-notification-overlay"></div>

<!-- Enhanced EIU Notification Panel -->
<div class="fixed top-0 right-0 h-full w-[420px] bg-gradient-to-br from-emerald-700 via-emerald-600 to-emerald-700 shadow-2xl border-l border-emerald-400/30 z-[1200] backdrop-blur-xl transform translate-x-full transition-all duration-500 ease-out hidden" id="eiu-notification-dropdown">
  <!-- Enhanced Header with EIU Theme -->
  <div class="p-5 border-b border-emerald-400/15 bg-gradient-to-r from-emerald-600/50 via-emerald-500/70 to-emerald-600/50 backdrop-blur-md shadow-lg">
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center gap-3">
        <div class="w-10 h-10 rounded-xl bg-gradient-to-br from-emerald-500 to-emerald-600 flex items-center justify-center shadow-xl">
          <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
          </svg>
        </div>
        <div>
          <h3 class="text-xl font-bold text-white mb-1">EIU Notifications</h3>
          <p class="text-xs text-emerald-200 font-medium">Monitor project updates & infrastructure alerts</p>
        </div>
      </div>
      <button class="text-emerald-200 hover:text-white transition-all duration-200 hover:scale-110 p-2.5 rounded-lg hover:bg-white/10 hover:shadow-lg" id="eiu-close-notifications" title="Close notifications">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    
    <!-- Enhanced Action Buttons with Better Hover Behavior -->
    <div class="flex items-center gap-3 mb-6">
      <button class="group flex items-center gap-3 text-sm font-semibold text-white bg-gradient-to-r from-emerald-600 to-emerald-700 hover:from-emerald-700 hover:to-emerald-800 transition-all duration-300 ease-out px-4 py-3 rounded-xl border-2 border-emerald-400/50 hover:border-emerald-400/70 hover:shadow-2xl shadow-lg hover:-translate-y-1 transform" id="eiu-mark-all-read">
        <svg class="w-5 h-5 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        Mark all read
      </button>
      <button class="group flex items-center gap-3 text-sm font-semibold text-white bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 transition-all duration-300 ease-out px-4 py-3 rounded-xl border-2 border-red-400/50 hover:border-red-400/70 hover:shadow-2xl shadow-lg hover:-translate-y-1 transform" id="eiu-delete-all-read">
        <svg class="w-5 h-5 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
        </svg>
        Delete read
      </button>
      <button class="group flex items-center gap-3 text-sm font-semibold text-white bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 transition-all duration-300 ease-out px-4 py-3 rounded-xl border-2 border-red-500/50 hover:border-red-500/70 hover:shadow-2xl shadow-lg hover:-translate-y-1 transform" id="eiu-delete-all-notifications">
        <svg class="w-5 h-5 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
        </svg>
        Delete all
      </button>
    </div>
    
    <!-- Enhanced Minimalist Notification Stats Bar -->
    <div class="p-4 bg-gradient-to-r from-emerald-500/15 to-emerald-600/15 rounded-xl border border-emerald-400/25 shadow-md">
      <div class="flex items-center justify-between text-xs">
        <div class="flex items-center gap-2">
          <span class="text-emerald-200 font-medium">Total:</span>
          <span id="eiu-notification-total" class="text-white font-bold text-base">0</span>
        </div>
        <div class="w-px h-5 bg-emerald-400/30"></div>
        <div class="flex items-center gap-2">
          <span class="text-emerald-200 font-medium">Unread:</span>
          <span id="eiu-notification-unread" class="text-white font-bold text-base">0</span>
        </div>
        <div class="w-px h-5 bg-emerald-400/30"></div>
        <div class="flex items-center gap-2">
          <span class="text-emerald-200 font-medium">Read:</span>
          <span id="eiu-notification-read" class="text-white font-bold text-base">0</span>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Enhanced Notification List with Categories -->
  <div class="flex-1 overflow-y-auto custom-scrollbar" id="eiu-notification-list">
    <!-- Loading State -->
    <div class="p-6 text-center text-emerald-200" id="eiu-notification-loading">
      <div class="animate-pulse flex flex-col items-center justify-center">
        <div class="w-16 h-16 rounded-full bg-gradient-to-br from-emerald-500/20 to-emerald-600/20 flex items-center justify-center mb-4">
          <svg class="w-8 h-8 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
          </svg>
        </div>
        <span class="text-sm font-medium">Loading EIU notifications...</span>
        <p class="text-xs text-emerald-300 mt-1">Monitoring project updates & infrastructure alerts</p>
      </div>
    </div>
  </div>
  
  <!-- Enhanced Footer with EIU Monitor Active - Maximized Space and Enhanced UI -->
  <div class="mt-auto p-4 border-t-2 border-emerald-400/20 bg-gradient-to-r from-emerald-600/80 via-emerald-500/90 to-emerald-600/80 backdrop-blur-md shadow-2xl">
    <div class="flex items-center justify-between text-sm text-white font-semibold">
      <div class="flex items-center gap-3">
        <div class="w-3 h-3 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full animate-pulse shadow-lg"></div>
        <span class="tracking-wide">EIU Monitor Active</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="text-emerald-300 text-lg">●</span>
        <span class="text-xs text-emerald-200 opacity-75">Live</span>
      </div>
    </div>
  </div>
</div>

<script>
  import authService from '../services/auth.js';
  import notificationService from '../services/notifications.js';
  
  // Make services available globally
  window.authService = authService;
  window.notificationService = notificationService;
  
  document.addEventListener('DOMContentLoaded', async function() {
    try {
      // Initialize live clock
      initializeLiveClock();
      
      // Initialize notifications
      initializeNotifications();
      
      // Initialize user dropdown
      initializeUserDropdown();
      
      // Initialize search functionality
      initializeEIUSearch();
      
      // Load user data
      await loadUserData();
      
      // Initialize logout button
      initializeLogoutButton();
      
      // Load profile pictures
      loadTopbarProfilePictures();
      
    } catch (error) {
      console.error('Error initializing EIU topbar:', error);
    }
  });

  // Load profile pictures from server or localStorage for topbar
  async function loadTopbarProfilePictures() {
    try {
      // Get actual user ID from localStorage
      const userData = localStorage.getItem('user');
      let userId = 'EIU-0001'; // Default fallback
      if (userData) {
        try {
          const user = JSON.parse(userData);
          userId = user.employeeId || user.username || user.id || user.userId || 'EIU-0001';
        } catch (error) {
          console.warn('⚠️ Error parsing user data in topbar, using default userId');
        }
      }
      
      // First try to get from server
      console.log('EIU Topbar: Fetching profile picture from server for userId:', userId);
      const response = await fetch(`http://localhost:3000/api/profile/picture/${userId}`);
      
      if (response.ok) {
        const result = await response.json();
        if (result.success && result.profilePictureUrl) {
          console.log('EIU Topbar: Profile picture loaded from server:', result.profilePictureUrl);
          
          // Update main topbar profile picture
          const topbarProfilePic = document.getElementById('eiu-profile-picture');
          if (topbarProfilePic) {
            topbarProfilePic.src = result.profilePictureUrl;
            // Hide fallback div if it exists
            const fallbackDiv = topbarProfilePic.nextElementSibling;
            if (fallbackDiv) {
              fallbackDiv.style.display = 'none';
              topbarProfilePic.style.display = 'block';
            }
          }
          
          // Update dropdown profile picture
          const dropdownProfilePic = document.getElementById('eiu-dropdown-photo');
          if (dropdownProfilePic) {
            dropdownProfilePic.src = result.profilePictureUrl;
            // Hide fallback div if it exists
            const fallbackDiv = dropdownProfilePic.nextElementSibling;
            if (fallbackDiv) {
              fallbackDiv.style.display = 'none';
              dropdownProfilePic.style.display = 'block';
            }
          }
          
          // Store in localStorage for future use
          localStorage.setItem('eiu_profile_picture', result.profilePictureUrl);
          return;
        }
      }
    } catch (error) {
      console.log('EIU Topbar: Server fetch failed, trying localStorage:', error);
    }
    
    // Fallback to localStorage if server fails
    const storedUrl = localStorage.getItem('eiu_profile_picture');
    if (storedUrl) {
      const topbarProfilePic = document.getElementById('eiu-profile-picture');
      if (topbarProfilePic) {
        topbarProfilePic.src = storedUrl;
        // Hide fallback div if it exists
        const fallbackDiv = topbarProfilePic.nextElementSibling;
        if (fallbackDiv) {
          fallbackDiv.style.display = 'none';
          topbarProfilePic.style.display = 'block';
        }
      }
      
      const dropdownProfilePic = document.getElementById('eiu-dropdown-photo');
      if (dropdownProfilePic) {
        dropdownProfilePic.src = storedUrl;
        // Hide fallback div if it exists
        const fallbackDiv = dropdownProfilePic.nextElementSibling;
        if (fallbackDiv) {
          fallbackDiv.style.display = 'none';
          dropdownProfilePic.style.display = 'block';
        }
      }
    }
  }

  // Listen for profile picture updates
  window.addEventListener('eiuProfilePictureUpdated', function(e) {
    console.log('EIU Topbar received eiuProfilePictureUpdated event:', e.detail);
    console.log('EIU Topbar: Updating profile pictures immediately with:', e.detail.profilePictureUrl);
    
    // Update immediately without calling loadTopbarProfilePictures
    if (e.detail.profilePictureUrl) {
      // Update main topbar profile picture
      const topbarProfilePic = document.getElementById('eiu-profile-picture');
      if (topbarProfilePic) {
        console.log('EIU Topbar: Setting main profile picture src to:', e.detail.profilePictureUrl);
        
        // Preload the image to prevent blinking
        const img = new Image();
        img.onload = function() {
          topbarProfilePic.src = e.detail.profilePictureUrl;
          topbarProfilePic.style.display = 'block';
          
          // Hide fallback div if it exists
          const fallbackDiv = topbarProfilePic.nextElementSibling;
          if (fallbackDiv) {
            fallbackDiv.style.display = 'none';
          }
        };
        img.src = e.detail.profilePictureUrl;
      }

      // Update dropdown profile picture
      const dropdownProfilePic = document.getElementById('eiu-dropdown-photo');
      if (dropdownProfilePic) {
        console.log('EIU Topbar: Setting dropdown profile picture src to:', e.detail.profilePictureUrl);
        
        // Preload the image to prevent blinking
        const img = new Image();
        img.onload = function() {
          dropdownProfilePic.src = e.detail.profilePictureUrl;
          dropdownProfilePic.style.display = 'block';
          
          // Hide fallback div if it exists
          const fallbackDiv = dropdownProfilePic.nextElementSibling;
          if (fallbackDiv) {
            fallbackDiv.style.display = 'none';
          }
        };
        img.src = e.detail.profilePictureUrl;
      }
      
      // Store in localStorage for future use
      localStorage.setItem('eiu_profile_picture', e.detail.profilePictureUrl);
      console.log('🎯 EIU Topbar: Profile pictures updated and stored in localStorage');
      
      // Visual feedback for both profile pictures
      if (topbarProfilePic) {
        topbarProfilePic.style.transform = 'scale(1.1)';
        setTimeout(() => {
          topbarProfilePic.style.transform = 'scale(1)';
        }, 200);
      }
      
      if (dropdownProfilePic) {
        dropdownProfilePic.style.transform = 'scale(1.1)';
        setTimeout(() => {
          dropdownProfilePic.style.transform = 'scale(1)';
        }, 200);
      }
    }
  });

  // Listen for storage changes
  window.addEventListener('storage', function(e) {
    if (e.key === 'eiu_profile_picture') {
      console.log('EIU Topbar received storage event for profile picture');
      loadTopbarProfilePictures();
    }
  });

  // Live clock functionality
  function initializeLiveClock() {
    const clockElement = document.getElementById('eiu-clock');
    if (!clockElement) return;
    
    function updateClock() {
      const now = new Date();
      const options = {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        timeZone: 'Asia/Manila'
      };
      const timeString = now.toLocaleString('en-US', options);
      clockElement.textContent = timeString;
    }
    
    // Update immediately and then every minute
    updateClock();
    setInterval(updateClock, 60000);
  }

  // Notification functionality
  function initializeNotifications() {
    const notificationBtn = document.getElementById('eiu-notification-btn');
    const notificationDropdown = document.getElementById('eiu-notification-dropdown');
    const notificationOverlay = document.getElementById('eiu-notification-overlay');
    const closeNotifications = document.getElementById('eiu-close-notifications');
    const markAllRead = document.getElementById('eiu-mark-all-read');
    const deleteAllRead = document.getElementById('eiu-delete-all-read');
    const deleteAllNotifications = document.getElementById('eiu-delete-all-notifications');
    const notificationBadge = document.getElementById('eiu-notification-badge');

    if (!notificationBtn || !notificationDropdown) return;

    // Toggle notification sidebar
    notificationBtn.addEventListener('click', () => {
      console.log('🔔 Notification button clicked');
      const isHidden = notificationDropdown.classList.contains('hidden');
      console.log('📊 Current visibility state:', isHidden ? 'hidden' : 'visible');
      
      if (!isHidden) {
        // Hide notifications
        console.log('🙈 Hiding notification panel');
        notificationDropdown.classList.add('hidden');
        notificationOverlay.classList.add('hidden');
      } else {
        // Show notifications
        console.log('👁️ Showing notification panel');
        notificationDropdown.classList.remove('hidden');
        notificationOverlay.classList.remove('hidden');
        loadNotifications();
      }
      
      console.log('🎯 Notification panel classes:', notificationDropdown.className);
    });

    // Close notifications
    closeNotifications.addEventListener('click', () => {
      notificationDropdown.classList.add('hidden');
      notificationOverlay.classList.add('hidden');
    });

    // Close on overlay click
    notificationOverlay.addEventListener('click', () => {
      notificationDropdown.classList.add('hidden');
      notificationOverlay.classList.add('hidden');
    });

    // Mark all as read
    markAllRead.addEventListener('click', async () => {
      try {
        await notificationService.markAllAsRead();
        updateNotificationBadge();
        loadNotifications();
      } catch (error) {
        console.error('Error marking all as read:', error);
      }
    });

    // Delete all read
    deleteAllRead.addEventListener('click', async () => {
      if (confirm('Are you sure you want to delete all read notifications?')) {
        try {
          await notificationService.deleteAllRead();
          updateNotificationBadge();
          loadNotifications();
        } catch (error) {
          console.error('Error deleting read notifications:', error);
        }
      }
    });

    // Delete all notifications (both read and unread)
    deleteAllNotifications.addEventListener('click', async () => {
      if (confirm('Are you sure you want to delete ALL notifications? This action cannot be undone and will clear both read and unread notifications.')) {
        try {
          const data = await notificationService.getNotifications();
          const allNotifications = data.notifications || [];
          
          let deletedCount = 0;
          for (const notification of allNotifications) {
            const success = await notificationService.deleteNotification(notification.id);
            if (success) deletedCount++;
          }
          
          if (deletedCount > 0) {
            updateNotificationBadge();
            loadNotifications();
            console.log(`🗑️ Successfully deleted ${deletedCount} notifications`);
          }
        } catch (error) {
          console.error('Error deleting all notifications:', error);
          alert('Failed to delete all notifications. Please try again.');
        }
      }
    });

    // Load initial notification count
    updateNotificationBadge();
  }

  // Enhanced EIU Profile Dropdown functionality
  function initializeUserDropdown() {
    const profileBtn = document.getElementById('eiu-profile-dropdown-btn');
    const profileDropdown = document.getElementById('eiu-profile-dropdown');
    
    if (!profileBtn || !profileDropdown) return;
    
    // Click to toggle dropdown
    profileBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      const isVisible = !profileDropdown.classList.contains('hidden');
      
      if (isVisible) {
        hideEIUProfileDropdown();
      } else {
        showEIUProfileDropdown();
      }
    });
    
    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!e.target.closest('#eiu-user-dropdown-container')) {
        hideEIUProfileDropdown();
      }
    });
    
    // Close dropdown on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        hideEIUProfileDropdown();
      }
    });
  }

  // Show EIU profile dropdown with smooth fade-in
  function showEIUProfileDropdown() {
    const profileDropdown = document.getElementById('eiu-profile-dropdown');
    const profileBtn = document.getElementById('eiu-profile-dropdown-btn');
    
    if (!profileDropdown || !profileBtn) return;
    
    // First remove hidden class to make element visible
    profileDropdown.classList.remove('hidden');
    
    // Force a reflow to ensure the element is rendered
    profileDropdown.offsetHeight;
    
    // Add showing class for smooth entrance animation
    profileDropdown.classList.add('showing');
    
    profileBtn.setAttribute('aria-expanded', 'true');
    
    console.log('👤 EIU profile dropdown shown with smooth animation');
  }

  // Hide EIU profile dropdown with smooth fade-out
  function hideEIUProfileDropdown() {
    const profileDropdown = document.getElementById('eiu-profile-dropdown');
    const profileBtn = document.getElementById('eiu-profile-dropdown-btn');
    
    if (!profileDropdown || !profileBtn) return;
    
    // Remove showing class and add hiding class for smooth exit animation
    profileDropdown.classList.remove('showing');
    profileDropdown.classList.add('hiding');
    
    profileBtn.setAttribute('aria-expanded', 'false');
    
    // Use setTimeout to ensure smooth animation before hiding
    setTimeout(() => {
      profileDropdown.classList.add('hidden');
      profileDropdown.classList.remove('hiding');
    }, 300);
    
    console.log('🙈 EIU profile dropdown hidden with smooth animation');
  }

  // Load user data
  async function loadUserData() {
    try {
      const currentUser = authService.getCurrentUser();
      
      if (currentUser) {
        updateUserData(currentUser);
      } else {
        // Try to fetch from API
        const response = await fetch('http://localhost:3000/api/auth/profile', {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('token')}`
          }
        });
        
        if (response.ok) {
          const userData = await response.json();
          if (userData.success && userData.user) {
            updateUserData(userData.user);
          }
        }
      }
    } catch (error) {
      console.error('Error loading user data:', error);
    }
  }

  // Update user data in topbar
  function updateUserData(userData) {
    const userNameElement = document.getElementById('eiu-user-name');
    const profileInitialsElement = document.getElementById('eiu-profile-initials');
    const dropdownNameElement = document.getElementById('eiu-dropdown-name');
    const dropdownInitialsElement = document.getElementById('eiu-dropdown-initials');
    
    if (userNameElement) {
      const fullName = userData.fullName || userData.name || 'First External Partner MEO';
      
      // Create smart abbreviation for long names
      let displayName = fullName;
      if (fullName.length > 25) {
        if (fullName.includes('External Partner')) {
          displayName = fullName.replace('External Partner', 'Ext. Partner');
        } else if (fullName.includes('Management Office')) {
          displayName = fullName.replace('Management Office', 'Mgmt. Office');
        } else {
          displayName = fullName.substring(0, 22) + '...';
        }
      }
      
      userNameElement.innerHTML = `
        <p class="text-sm font-semibold text-white truncate" title="${fullName}">${displayName}</p>
        <div class="flex items-center gap-1">
          <p class="text-xs text-green-200/80">EIU</p>
          <span class="text-xs text-green-300">•</span>
          <div class="flex items-center gap-1">
            <div class="w-1.5 h-1.5 bg-green-400 rounded-full animate-pulse"></div>
            <span class="text-xs text-green-300 font-medium">Active</span>
          </div>
        </div>
      `;
    }
    
    // Update dropdown name
    if (dropdownNameElement) {
      const fullName = userData.fullName || userData.name || 'First External Partner MEO';
      dropdownNameElement.textContent = fullName;
    }
    
    if (profileInitialsElement) {
      const fullName = userData.fullName || userData.name || '';
      const initials = fullName.split(' ')
        .map(name => name.charAt(0))
        .join('')
        .toUpperCase()
        .slice(0, 2);
      profileInitialsElement.textContent = initials || 'FE';
    }
    
    // Update dropdown initials
    if (dropdownInitialsElement) {
      const fullName = userData.fullName || userData.name || '';
      const initials = fullName.split(' ')
        .map(name => name.charAt(0))
        .join('')
        .toUpperCase()
        .slice(0, 2);
      dropdownInitialsElement.textContent = initials || 'FE';
    }
  }

  // Initialize logout button functionality
  function initializeLogoutButton() {
    const logoutBtn = document.getElementById('eiu-dropdown-logout-btn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', function() {
        if (window.authService) {
          window.authService.logout();
        } else {
          console.error('Auth service not available');
        }
      });
    }
  }

  // Update notification badge
  async function updateNotificationBadge() {
    const badge = document.getElementById('eiu-notification-badge');
    const totalEl = document.getElementById('eiu-notification-total');
    const unreadEl = document.getElementById('eiu-notification-unread');
    const readEl = document.getElementById('eiu-notification-read');
    
    if (!badge) return;
    
    try {
      const count = await notificationService.getNotificationCount();
      const notifications = await notificationService.getNotifications();
      const allNotifications = notifications.notifications || [];
      const readCount = allNotifications.filter(n => n.isRead).length;
      const unreadCount = allNotifications.length - readCount;
      
      // Update badge
      if (count > 0) {
        badge.textContent = count > 99 ? '99+' : count;
        badge.classList.remove('hidden');
      } else {
        badge.classList.add('hidden');
      }
      
      // Update stats
      if (totalEl) totalEl.textContent = allNotifications.length;
      if (unreadEl) unreadEl.textContent = unreadCount;
      if (readEl) readEl.textContent = readCount;
      
    } catch (error) {
      console.error('Error updating EIU notification badge:', error);
      badge.classList.add('hidden');
    }
  }

  // Load notifications
  async function loadNotifications() {
    const notificationList = document.getElementById('eiu-notification-list');
    const loadingEl = document.getElementById('eiu-notification-loading');
    if (!notificationList) return;
    
    try {
      // Hide loading state
      if (loadingEl) loadingEl.style.display = 'none';
      
      const data = await notificationService.getNotifications();
      const notifications = data.notifications || [];

      if (notifications.length === 0) {
        notificationList.innerHTML = `
          <div class="p-8 text-center text-emerald-200">
            <div class="w-20 h-20 rounded-full bg-gradient-to-br from-emerald-500/10 to-emerald-600/10 flex items-center justify-center mx-auto mb-4">
              <svg class="w-10 h-10 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <h4 class="text-lg font-semibold text-white mb-2">All Caught Up!</h4>
            <p class="text-sm text-emerald-200">No EIU notifications at the moment</p>
            <p class="text-xs text-emerald-300 mt-1">All infrastructure projects are running smoothly</p>
          </div>
        `;
        return;
      }

      const notificationsHtml = notifications.map(notification => {
        const priorityColors = {
          high: 'from-red-500/20 to-red-600/20 border-red-500/30',
          medium: 'from-yellow-500/20 to-orange-500/20 border-yellow-500/30',
          low: 'from-emerald-500/20 to-emerald-600/20 border-emerald-500/30',
          info: 'from-emerald-500/20 to-emerald-600/20 border-emerald-500/30'
        };
        
        const priorityColor = priorityColors[notification.priority] || priorityColors.info;
        const isUnread = !notification.isRead;
        
        return `
          <div class="p-4 hover:bg-white/5 transition-all duration-200 ${isUnread ? 'bg-gradient-to-r from-emerald-500/5 to-emerald-600/5' : ''}" 
               data-notification-id="${notification.id}">
            <div class="flex items-start gap-4">
              <!-- Priority Indicator -->
              <div class="flex-shrink-0">
                <div class="w-3 h-3 rounded-full ${isUnread ? 'bg-gradient-to-r from-green-400 to-green-500 animate-pulse' : 'bg-gray-500'}"></div>
              </div>
              
              <!-- Notification Icon -->
              <div class="flex-shrink-0">
                <div class="w-10 h-10 rounded-lg bg-gradient-to-br ${priorityColor} flex items-center justify-center">
                  ${notificationService.getNotificationIcon(notification.type, notification.category, notification.metadata)}
                </div>
              </div>
              
              <!-- Notification Content -->
              <div class="flex-1 min-w-0">
                <div class="flex items-start justify-between gap-2">
                  <div class="flex-1">
                    <h4 class="text-sm font-semibold text-white mb-1">${notification.title || 'EIU Notification'}</h4>
                    <p class="text-sm text-emerald-200 leading-relaxed">${notification.message || 'No message content'}</p>
                    
                    <!-- Action Buttons -->
                    ${notification.actionUrl ? `
                      <div class="flex items-center gap-2 mt-3">
                        <a href="${notification.actionUrl}" class="inline-flex items-center gap-2 text-xs text-emerald-300 hover:text-emerald-200 transition-colors px-3 py-1.5 rounded-lg border border-emerald-400/30 hover:bg-emerald-400/10 hover:border-emerald-400/50">
                          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                          </svg>
                          ${notification.actionText || 'View Details'}
                        </a>
                      </div>
                    ` : ''}
                  </div>
                  
                  <!-- Time and Actions -->
                  <div class="flex flex-col items-end gap-2">
                    <span class="text-xs text-emerald-300 whitespace-nowrap">${notificationService.formatTime(notification.createdAt)}</span>
                    <div class="flex items-center gap-1">
                      ${!notification.isRead ? `
                        <button class="group flex items-center gap-2 text-sm font-semibold text-white bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 transition-all duration-300 ease-out px-3 py-2 rounded-xl border-2 border-green-400/50 hover:border-green-400/70 hover:shadow-2xl shadow-lg hover:-translate-y-1 transform" 
                                onclick="markEIUNotificationAsRead('${notification.id}')" 
                                title="Mark as read">
                          <svg class="w-4 h-4 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                          </svg>
                        </button>
                      ` : ''}
                      <button class="group flex items-center gap-2 text-sm font-semibold text-white bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 transition-all duration-300 ease-out px-3 py-2 rounded-xl border-2 border-red-400/50 hover:border-red-400/70 hover:shadow-2xl shadow-lg hover:-translate-y-1 transform" 
                              onclick="deleteEIUNotification('${notification.id}')" 
                              title="Delete notification">
                        <svg class="w-4 h-4 transition-transform duration-300 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                        </svg>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        `;
      }).join('');

      notificationList.innerHTML = notificationsHtml;
      
      // Add dividers between notifications
      const notificationItems = notificationList.querySelectorAll('[data-notification-id]');
      notificationItems.forEach((item, index) => {
        if (index < notificationItems.length - 1) {
          const divider = document.createElement('div');
          divider.className = 'mx-4 border-t border-emerald-400/10';
          item.after(divider);
        }
      });
      
    } catch (error) {
      console.error('Error loading EIU notifications:', error);
      notificationList.innerHTML = `
        <div class="p-6 text-center text-red-400">
          <div class="w-16 h-16 rounded-full bg-red-500/10 flex items-center justify-center mx-auto mb-4">
            <svg class="w-8 h-8 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.500c-.77.833.192 2.5 1.732 2.5z"></path>
            </svg>
          </div>
          <h4 class="text-sm font-semibold text-red-300 mb-2">Connection Error</h4>
          <p class="text-sm text-red-200">Failed to load EIU notifications</p>
          <p class="text-xs text-red-300 mt-1">Check your connection and try again</p>
        </div>
      `;
    }
  }

  // Global logout function
  window.logout = function() {
    authService.logout();
  };

  // EIU Sidebar Toggle Functionality
  const eiuSidebarToggleBtn = document.getElementById('eiu-sidebar-toggle');
  const eiuSidebar = document.querySelector('aside'); // Target the sidebar element
  const eiuToggleIcon = document.getElementById('eiu-sidebar-toggle-icon');
  
  if (eiuSidebarToggleBtn && eiuSidebar && eiuToggleIcon) {
    console.log('🔧 Initializing EIU sidebar toggle functionality');
    
    // Icon paths
    const hamburgerIcon = "M4 6h16M4 12h16M4 18h16";
    const arrowRightIcon = "M9 5l7 7-7 7";
    
    function updateEIUIcon(isCollapsed) {
      // Add smooth rotation animation
      eiuToggleIcon.style.transform = 'rotate(180deg)';
      eiuToggleIcon.style.transition = 'all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
      
      setTimeout(() => {
        const iconPath = eiuToggleIcon.querySelector('path');
        if (iconPath) {
          iconPath.setAttribute('d', isCollapsed ? arrowRightIcon : hamburgerIcon);
        }
        eiuToggleIcon.style.transform = 'rotate(0deg)';
      }, 200);
    }
    
    // Check if sidebar is collapsed from localStorage
    const isCollapsed = localStorage.getItem('eiu-sidebar-collapsed') === 'true';
    if (isCollapsed) {
      eiuSidebar.classList.add('collapsed');
      updateEIUIcon(true);
    }
    
    eiuSidebarToggleBtn.addEventListener('click', () => {
      console.log('🔄 Toggling EIU sidebar');
      
      const isCurrentlyCollapsed = eiuSidebar.classList.contains('collapsed');
      
      if (isCurrentlyCollapsed) {
        // Expand sidebar
        eiuSidebar.classList.remove('collapsed');
        localStorage.setItem('eiu-sidebar-collapsed', 'false');
        updateEIUIcon(false);
        console.log('📖 EIU Sidebar expanded');
      } else {
        // Collapse sidebar
        eiuSidebar.classList.add('collapsed');
        localStorage.setItem('eiu-sidebar-collapsed', 'true');
        updateEIUIcon(true);
        console.log('📕 EIU Sidebar collapsed');
      }
    });
  } else {
    console.warn('❌ EIU sidebar toggle elements not found');
  }

  // Search functionality
  function initializeEIUSearch() {
    const searchInput = document.getElementById('eiu-global-search');
    if (!searchInput) return;

    searchInput.addEventListener('input', (e) => {
      const query = e.target.value.trim();
      if (query.length > 0) {
        console.log('🔍 EIU Search query:', query);
        // Implement search functionality here
        // For now, just log the query
      }
    });

    searchInput.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        const query = e.target.value.trim();
        if (query.length > 0) {
          console.log('🔍 EIU Search submitted:', query);
          // Implement search submission here
        }
      }
    });
  }

  // Global function for marking notification as read
  window.markEIUNotificationAsRead = async function(notificationId) {
    await notificationService.markAsRead(notificationId);
    updateNotificationBadge();
    loadNotifications();
  };

  // Global function for handling notification click (marks as read and redirects)
  window.handleNotificationClick = async function(notificationId, actionUrl) {
    try {
      // Mark as read first
      await notificationService.markAsRead(notificationId);
      updateNotificationBadge();
      
      // Close notification panel
      const notificationDropdown = document.getElementById('eiu-notification-dropdown');
      const notificationOverlay = document.getElementById('eiu-notification-overlay');
      if (notificationDropdown) notificationDropdown.classList.add('hidden');
      if (notificationOverlay) notificationOverlay.classList.add('hidden');
      
      // Redirect to the action URL
      window.location.href = actionUrl;
    } catch (error) {
      console.error('Error handling notification click:', error);
      // Still redirect even if marking as read fails
      window.location.href = actionUrl;
    }
  };

  // Global function for deleting notification
  window.deleteEIUNotification = async function(notificationId) {
    if (confirm('Are you sure you want to delete this notification?')) {
      const success = await notificationService.deleteNotification(notificationId);
      if (success) {
        updateNotificationBadge();
        loadNotifications();
      } else {
        alert('Failed to delete notification. Please try again.');
      }
    }
  };
</script>

<style>
  /* Custom scrollbar for notification sidebar */
  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 3px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }

  /* Firefox scrollbar */
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.3) rgba(255, 255, 255, 0.1);
  }

  /* Notification panel styles */
  #eiu-notification-dropdown {
    transform: translateX(100%);
    transition: all 0.5s ease-out;
    background: linear-gradient(135deg, #10B981 0%, #059669 50%, #047857 100%);
  }

  #eiu-notification-dropdown:not(.hidden) {
    transform: translateX(0);
  }

  /* Ensure notification panel is above other elements */
  #eiu-notification-dropdown {
    z-index: 9999 !important;
    visibility: hidden;
    opacity: 0;
  }

  #eiu-notification-dropdown:not(.hidden) {
    visibility: visible;
    opacity: 1;
  }

  /* Overlay styles */
  #eiu-notification-overlay {
    z-index: 9998 !important;
  }

  /* Enhanced Custom Scrollbar for EIU Notifications */
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: rgba(16, 185, 129, 0.5) transparent;
  }
  
  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-track {
    background: linear-gradient(to bottom, rgba(16, 185, 129, 0.1), rgba(16, 185, 129, 0.2));
    border-radius: 4px;
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: linear-gradient(to bottom, rgba(16, 185, 129, 0.6), rgba(16, 185, 129, 0.7));
    border-radius: 4px;
    border: 1px solid rgba(16, 185, 129, 0.3);
  }
  
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(to bottom, rgba(16, 185, 129, 0.8), rgba(16, 185, 129, 0.9));
    box-shadow: 0 0 10px rgba(16, 185, 129, 0.4);
  }
  
  /* Enhanced Notification Panel Layout and Scrolling */
  #eiu-notification-dropdown {
    display: flex;
    flex-direction: column;
    height: 100vh;
  }

  #eiu-notification-dropdown:not(.hidden) {
    animation: slideInRight 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  #eiu-notification-list {
    flex: 1;
    overflow-y: auto;
    min-height: 0;
    padding-bottom: 1rem;
  }

  /* Enhanced Footer Styling */
  #eiu-notification-dropdown > div:last-child {
    flex-shrink: 0;
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.8) 0%, rgba(5, 150, 105, 0.7) 100%);
    border-top: 2px solid rgba(16, 185, 129, 0.2);
    box-shadow: 0 -4px 20px rgba(16, 185, 129, 0.2);
  }
  
  @keyframes slideInRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  /* Enhanced Action Button Hover Effects */
  #eiu-mark-all-read,
  #eiu-delete-all-read {
    position: relative;
    overflow: hidden;
  }

  #eiu-mark-all-read::before,
  #eiu-delete-all-read::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  #eiu-mark-all-read:hover::before,
  #eiu-delete-all-read:hover::before {
    left: 100%;
  }

  /* Enhanced Notification Item Hover Effects */
  #eiu-notification-list [data-notification-id] {
    border-bottom: 2px solid rgba(16, 185, 129, 0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  #eiu-notification-list [data-notification-id]:hover {
    transform: translateX(6px);
    box-shadow: 0 6px 25px rgba(16, 185, 129, 0.1);
    background: rgba(16, 185, 129, 0.02);
    border-left: 4px solid #10b981;
  }

  #eiu-notification-list [data-notification-id]:last-child {
    border-bottom: none;
  }

  /* Enhanced notification card styling */
  #eiu-notification-list [data-notification-id] {
    margin: 0 8px;
    border-radius: 8px;
    padding: 16px;
  }

  #eiu-notification-list [data-notification-id]:hover {
    margin-left: 4px;
    margin-right: 4px;
  }
  
  /* Priority Indicator Animations */
  .animate-pulse {
    animation: priorityPulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes priorityPulse {
    0%, 100% {
      opacity: 0.8;
      transform: scale(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.1);
    }
  }

  /* Enhanced EIU Profile Dropdown Styles */
  #eiu-profile-dropdown {
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    box-shadow: 0 25px 50px -12px rgba(16, 185, 129, 0.25), 0 0 0 1px rgba(16, 185, 129, 0.1);
  }

  /* Subtle inner glow effect */
  #eiu-profile-dropdown::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1) 0%, rgba(5, 150, 105, 0.05) 100%);
    border-radius: 1rem;
    pointer-events: none;
    z-index: -1;
  }

  /* Enhanced header and footer gradients */
  #eiu-profile-dropdown .p-4.border-b {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.15) 0%, rgba(5, 150, 105, 0.1) 100%);
  }

  #eiu-profile-dropdown .px-4.py-3.border-t {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.15) 0%, rgba(5, 150, 105, 0.1) 100%);
  }

  /* Menu item hover effects */
  #eiu-profile-dropdown .group:hover {
    transform: translateX(4px);
    transition: transform 0.2s ease;
  }

  /* Smooth transitions for all elements */
  #eiu-profile-dropdown * {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  /* Enhanced Topbar Button Hover Effects */
  .group:hover .group-hover\:scale-110 {
    transform: scale(1.1);
  }
  
  .group:hover .group-hover\:rotate-12 {
    transform: rotate(12deg);
  }
  
  .group:hover .group-hover\:rotate-6 {
    transform: rotate(6deg);
  }
  
  .group:hover .group-hover\:rotate-3 {
    transform: rotate(3deg);
  }
  
  /* Enhanced Profile Dropdown Animations */
  #eiu-profile-dropdown {
    transform-origin: top right;
    will-change: opacity, transform, visibility;
  }

  /* Smooth entrance animation */
  #eiu-profile-dropdown.showing {
    animation: dropdownFadeIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  /* Smooth exit animation */
  #eiu-profile-dropdown.hiding {
    animation: dropdownFadeOut 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  @keyframes dropdownFadeIn {
    from {
      opacity: 0;
      transform: scale(0.95) translateY(-10px);
      visibility: hidden;
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
      visibility: visible;
    }
  }

  @keyframes dropdownFadeOut {
    from {
      opacity: 1;
      transform: scale(1) translateY(0);
      visibility: visible;
    }
    to {
      opacity: 0;
      transform: scale(0.95) translateY(-10px);
      visibility: hidden;
    }
  }
</style> 