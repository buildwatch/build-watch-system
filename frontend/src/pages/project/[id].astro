---
export const prerender = false;
import Layout from "../../layouts/Layout.astro";
import TopBar from "../../components/TopBar.astro";
import LGUFooter from "../../components/LGUFooter.astro";

const API_URL = 'http://localhost:3000/api';
const { id } = Astro.params;

let project = null;
let progressData = null;
let loading = true;
let error = '';

// Fetch project data and progress
try {
  const [projectResponse, progressResponse] = await Promise.all([
    fetch(`${API_URL}/projects/public/${id}`),
    fetch(`${API_URL}/projects/progress/${id}`)
  ]);
  
  if (projectResponse.ok) {
    const projectData = await projectResponse.json();
    if (projectData.success) {
      project = projectData.project;
    } else {
      error = projectData.error || 'Failed to load project';
    }
  } else {
    error = 'Project not found';
  }
  
  if (progressResponse.ok) {
    const progressResult = await progressResponse.json();
    if (progressResult.success) {
      progressData = progressResult.data;
    }
  }
} catch (err) {
  error = 'Failed to connect to server';
}

loading = false;
---

<Layout title={`${project?.name || 'Project'} | Build Watch LGU`} description={project?.description || 'Project details'}>
  <TopBar />
  
  {loading ? (
    <div class="flex items-center justify-center min-h-screen">
      <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-[#EB3C3C]"></div>
      <span class="ml-3 text-gray-600">Loading project details...</span>
    </div>
  ) : error ? (
    <div class="flex items-center justify-center min-h-screen">
      <div class="text-center">
        <div class="text-4xl mb-4 text-red-400">⚠️</div>
        <h1 class="text-2xl font-bold text-red-600 mb-2">Project Not Found</h1>
        <p class="text-gray-600 mb-4">{error}</p>
        <a href="/projects" class="px-6 py-3 bg-[#EB3C3C] text-white rounded-lg hover:bg-[#D63333] transition">
          Back to Projects
        </a>
      </div>
    </div>
  ) : project ? (
    <main class="min-h-screen bg-gray-50">
      <!-- Hero Section with Project Image -->
      <div class="relative h-[600px] md:h-[800px] bg-cover bg-center bg-no-repeat" style="background-image: url('/about-page-bg.png');">
        <div class="absolute inset-0 bg-black/40"></div>
        <div class="relative h-full flex items-center justify-center">
          <div class="text-center text-white max-w-4xl mx-auto px-4">
            <div class="mb-8">
              <img src="/santa-cruz-seal.png" alt="Santa Cruz Seal" class="w-28 h-28 mx-auto mb-6 rounded-full bg-white/20 p-4 shadow-lg" />
            </div>
            <h1 class="text-5xl md:text-6xl font-bold mb-8 leading-tight">{project.name}</h1>
            <p class="text-2xl opacity-95 max-w-4xl mx-auto leading-relaxed mb-8">{project.description}</p>
            
            <!-- Project Status Badge -->
            <div class="mt-8">
              <span class={`inline-block px-6 py-3 rounded-full text-lg font-semibold ${
                project.status === 'ongoing' ? 'bg-green-500 text-white' :
                project.status === 'completed' ? 'bg-blue-500 text-white' :
                project.status === 'delayed' ? 'bg-red-500 text-white' :
                'bg-gray-500 text-white'
              }`}>
                {project.status || 'Not Started'}
              </span>
            </div>
          </div>
        </div>
      </div>

      <!-- Back to Projects Button -->
      <div class="max-w-7xl mx-auto px-4 py-6">
        <a href="/projects" class="inline-flex items-center text-[#EB3C3C] hover:text-[#D63333] transition mb-6 group">
          <svg class="w-5 h-5 mr-2 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to Projects
        </a>
      </div>

      <!-- Tab Navigation -->
      <div class="max-w-7xl mx-auto px-4">
        <div class="bg-white rounded-xl shadow-lg mb-8 border border-gray-100">
          <div class="border-b border-gray-100">
            <nav class="flex space-x-1 px-6" aria-label="Tabs">
              <button class="tab-button active group relative py-5 px-6 text-sm font-semibold flex items-center transition-all duration-300 ease-in-out" data-tab="details">
                <div class="absolute inset-0 bg-gradient-to-r from-red-50 to-red-100 rounded-t-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div class="relative flex items-center">
                  <svg class="w-5 h-5 mr-3 transition-transform duration-300 group-hover:scale-110" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="relative">Project Details</span>
                  <div class="absolute -bottom-5 left-0 right-0 h-1 bg-gradient-to-r from-red-500 to-red-600 rounded-t-full transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300"></div>
                </div>
              </button>
              <button class="tab-button group relative py-5 px-6 text-sm font-semibold flex items-center transition-all duration-300 ease-in-out" data-tab="articles">
                <div class="absolute inset-0 bg-gradient-to-r from-blue-50 to-blue-100 rounded-t-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div class="relative flex items-center">
                  <svg class="w-5 h-5 mr-3 transition-transform duration-300 group-hover:scale-110" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="relative">Articles & Publications</span>
                  <div class="absolute -bottom-5 left-0 right-0 h-1 bg-gradient-to-r from-blue-500 to-blue-600 rounded-t-full transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300"></div>
                </div>
              </button>
              <button class="tab-button group relative py-5 px-6 text-sm font-semibold flex items-center transition-all duration-300 ease-in-out" data-tab="photos">
                <div class="absolute inset-0 bg-gradient-to-r from-green-50 to-green-100 rounded-t-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div class="relative flex items-center">
                  <svg class="w-5 h-5 mr-3 transition-transform duration-300 group-hover:scale-110" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="relative">Photos</span>
                  <div class="absolute -bottom-5 left-0 right-0 h-1 bg-gradient-to-r from-green-500 to-green-600 rounded-t-full transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300"></div>
                </div>
              </button>
              <button class="tab-button group relative py-5 px-6 text-sm font-semibold flex items-center transition-all duration-300 ease-in-out" data-tab="videos">
                <div class="absolute inset-0 bg-gradient-to-r from-purple-50 to-purple-100 rounded-t-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                <div class="relative flex items-center">
                  <svg class="w-5 h-5 mr-3 transition-transform duration-300 group-hover:scale-110" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2 6a2 2 0 012-2h6l2 2h6a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"></path>
                    <path d="M8 11l3 3-3 3"></path>
                  </svg>
                  <span class="relative">Videos</span>
                  <div class="absolute -bottom-5 left-0 right-0 h-1 bg-gradient-to-r from-purple-500 to-purple-600 rounded-t-full transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300"></div>
                </div>
              </button>
            </nav>
          </div>
        </div>
      </div>

      <!-- Tab Content -->
      <div class="max-w-7xl mx-auto px-4 pb-12 tab-container">
        <!-- Project Details Tab -->
        <div id="tab-details" class="tab-content active">
          <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
            <!-- Main Content -->
            <div class="lg:col-span-3 space-y-8">
              <!-- Project Overview Card -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <div class="flex justify-between items-center">
                    <h3 class="text-xl font-bold flex items-center">
                      <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
                      </svg>
                      Project Overview
                    </h3>
                    <div class="text-right">
                      <span class="text-sm text-white/80 font-medium">Project Code:</span>
                      <div class="text-lg font-bold text-white">{project.projectCode}</div>
                    </div>
                  </div>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div class="space-y-4">
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-2">Category</h3>
                      <p class="text-gray-900 capitalize bg-gray-50 px-3 py-2 rounded-lg">{project.category || 'N/A'}</p>
                    </div>
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-2">Location</h3>
                      <p class="text-gray-900 bg-gray-50 px-3 py-2 rounded-lg">{project.location || 'N/A'}</p>
                    </div>
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-2">Implementing Office</h3>
                      <p class="text-gray-900 bg-gray-50 px-3 py-2 rounded-lg">{project.implementingOfficeName || 'N/A'}</p>
                    </div>
                  </div>
                  <div class="space-y-4">
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-2">Priority</h3>
                      <span class={`inline-block px-3 py-2 rounded-lg text-sm font-semibold ${
                        project.priority === 'high' ? 'bg-red-100 text-red-800' :
                        project.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-green-100 text-green-800'
                      }`}>
                        {project.priority || 'N/A'}
                      </span>
                    </div>
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-2">Funding Source</h3>
                      <p class="text-gray-900 bg-gray-50 px-3 py-2 rounded-lg capitalize">{project.fundingSource || 'N/A'}</p>
                    </div>
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-2">External Partner</h3>
                      <p class="text-gray-900 bg-gray-50 px-3 py-2 rounded-lg">{project.hasExternalPartner ? 'Yes' : 'No'}</p>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Project Timeline Card -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <h3 class="text-xl font-bold flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                    </svg>
                    Project Timeline
                  </h3>
                </div>
                
                <!-- Timeline Overview -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                  <div class="text-center p-4 bg-blue-50 rounded-xl">
                    <div class="text-2xl font-bold text-blue-600 mb-2">
                      {project.startDate ? new Date(project.startDate).toLocaleDateString('en-PH', {
                        month: 'short',
                        day: 'numeric',
                        year: 'numeric'
                      }) : 'Not set'}
                    </div>
                    <div class="text-sm text-gray-600">Start Date</div>
                  </div>
                  <div class="text-center p-4 bg-green-50 rounded-xl">
                    <div class="text-2xl font-bold text-green-600 mb-2">
                      {project.endDate ? new Date(project.endDate).toLocaleDateString('en-PH', {
                        month: 'short',
                        day: 'numeric',
                        year: 'numeric'
                      }) : 'Not set'}
                    </div>
                    <div class="text-sm text-gray-600">End Date</div>
                  </div>
                  <div class="text-center p-4 bg-purple-50 rounded-xl">
                    <div class="text-2xl font-bold text-purple-600 mb-2">
                      {project.completionDate ? new Date(project.completionDate).toLocaleDateString('en-PH', {
                        month: 'short',
                        day: 'numeric',
                        year: 'numeric'
                      }) : 'Not completed'}
                    </div>
                    <div class="text-sm text-gray-600">Completion Date</div>
                  </div>
                </div>

                <!-- Horizontal Timeline -->
                {project.startDate && project.endDate && (
                  <div class="mt-8">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Project Milestones</h3>
                    <div class="timeline-container h-12 bg-gray-100 rounded-lg relative overflow-hidden" 
                         data-project-id="{project.id}" 
                         data-start-date="{project.startDate}" 
                         data-end-date="{project.endDate}">
                      <div class="timeline-track absolute inset-0 bg-gradient-to-r from-gray-200 to-gray-300"></div>
                      <div class="timeline-grid absolute inset-0 flex">
                        {Array.from({length: 12}, (_, i) => (
                          <div class="timeline-grid-line flex-1 border-r border-dashed border-gray-400"></div>
                        ))}
                      </div>
                      <div class="timeline-milestones absolute inset-0"></div>
                    </div>
                    <div class="flex justify-between text-xs text-gray-500 mt-2">
                      <span>{new Date(project.startDate).toLocaleDateString()}</span>
                      <span>{new Date(project.endDate).toLocaleDateString()}</span>
                    </div>
                  </div>
                )}
              </div>

              <!-- Project Budget Card -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <h3 class="text-xl font-bold flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                    </svg>
                    Project Budget
                  </h3>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div class="space-y-6">
                    <div class="text-center p-6 bg-gradient-to-r from-[#EB3C3C] to-[#D63333] rounded-xl text-white">
                      <div class="text-3xl font-bold mb-2">
                        ₱{(parseFloat(project.totalBudget) / 1000000).toFixed(1)}M
                      </div>
                      <div class="text-sm opacity-90">Total Budget</div>
                    </div>
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-3">Budget Breakdown</h3>
                      <div class="bg-gray-50 p-4 rounded-lg">
                        <p class="text-gray-900">{project.budgetBreakdown || 'No breakdown available'}</p>
                      </div>
                    </div>
                  </div>
                  <div class="space-y-6">
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-3">Update Frequency</h3>
                      <div class="bg-blue-50 p-4 rounded-lg">
                        <p class="text-gray-900 capitalize">{project.budgetUpdateFrequency || 'N/A'}</p>
                      </div>
                    </div>
                    <div>
                      <h3 class="font-semibold text-gray-700 mb-3">Last Budget Update</h3>
                      <div class="bg-green-50 p-4 rounded-lg">
                        <p class="text-gray-900">
                          {project.lastProgressUpdate ? new Date(project.lastProgressUpdate).toLocaleDateString('en-PH') : 'No updates yet'}
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Project Details Card -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <h3 class="text-xl font-bold flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                    </svg>
                    Project Details
                  </h3>
                </div>
                <div class="space-y-6">
                  <div>
                    <h3 class="font-semibold text-gray-700 mb-3">Expected Outputs</h3>
                    <div class="bg-gray-50 p-4 rounded-lg">
                      <p class="text-gray-900">{project.expectedOutputs || 'No outputs specified'}</p>
                    </div>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-700 mb-3">Target Beneficiaries</h3>
                    <div class="bg-gray-50 p-4 rounded-lg">
                      <p class="text-gray-900">{project.targetBeneficiaries || 'No beneficiaries specified'}</p>
                    </div>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-700 mb-3">Special Requirements</h3>
                    <div class="bg-gray-50 p-4 rounded-lg">
                      <p class="text-gray-900">{project.specialRequirements || 'No special requirements'}</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Sidebar -->
            <div class="lg:col-span-1 space-y-6">
              <!-- Project Progress -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <h3 class="text-xl font-bold flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    Project Progress
                  </h3>
                </div>
                <div class="space-y-6">
                  <!-- Overall Progress -->
                  <div class="text-center">
                    <div class="relative w-32 h-32 mx-auto mb-4">
                      <svg class="w-32 h-32 transform -rotate-90">
                        <circle
                          cx="64"
                          cy="64"
                          r="56"
                          stroke="#e5e7eb"
                          stroke-width="8"
                          fill="transparent"
                        />
                        <circle
                          cx="64"
                          cy="64"
                          r="56"
                          stroke="#10b981"
                          stroke-width="8"
                          fill="transparent"
                          stroke-dasharray={`${2 * Math.PI * 56}`}
                          stroke-dashoffset={`${2 * Math.PI * 56 * (1 - (parseFloat(progressData?.progress?.overall || project.overallProgress || 0)) / 100)}`}
                        />
                      </svg>
                      <div class="absolute inset-0 flex items-center justify-center">
                        <div class="text-center">
                          <div class="text-2xl font-bold text-gray-800">{(parseFloat(progressData?.progress?.overall || project.overallProgress || 0)).toFixed(1)}%</div>
                          <div class="text-xs text-gray-600">Overall</div>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Detailed Progress -->
                  <div class="space-y-4">
                    <div class="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
                      <div class="flex items-center">
                        <div class="w-3 h-3 bg-blue-500 rounded-full mr-3"></div>
                        <span class="text-sm font-medium text-gray-700">Timeline</span>
                      </div>
                      <span class="text-lg font-bold text-blue-600">{(parseFloat(progressData?.progress?.internalTimeline || project.timelineProgress || 0)).toFixed(1)}%</span>
                    </div>
                    
                    <div class="flex items-center justify-between p-3 bg-green-50 rounded-lg">
                      <div class="flex items-center">
                        <div class="w-3 h-3 bg-green-500 rounded-full mr-3"></div>
                        <span class="text-sm font-medium text-gray-700">Budget</span>
                      </div>
                      <span class="text-lg font-bold text-green-600">{(parseFloat(progressData?.progress?.internalBudget || project.budgetProgress || 0)).toFixed(1)}%</span>
                    </div>
                    
                    <div class="flex items-center justify-between p-3 bg-purple-50 rounded-lg">
                      <div class="flex items-center">
                        <div class="w-3 h-3 bg-purple-500 rounded-full mr-3"></div>
                        <span class="text-sm font-medium text-gray-700">Physical</span>
                      </div>
                      <span class="text-lg font-bold text-purple-600">{(parseFloat(progressData?.progress?.internalPhysical || project.physicalProgress || 0)).toFixed(1)}%</span>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Project Contact Card -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <h3 class="text-xl font-bold flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                      <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
                    </svg>
                    Project Contact
                  </h3>
                </div>
                <div class="space-y-4">
                  <div class="p-3 bg-gray-50 rounded-lg">
                    <h3 class="font-semibold text-gray-700 text-sm mb-1">Project Manager</h3>
                    <p class="text-gray-900">{project.projectManager || 'Not assigned'}</p>
                  </div>
                  <div class="p-3 bg-gray-50 rounded-lg">
                    <h3 class="font-semibold text-gray-700 text-sm mb-1">Contact Number</h3>
                    <p class="text-gray-900">{project.contactNumber || 'Not available'}</p>
                  </div>
                  <div class="p-3 bg-gray-50 rounded-lg">
                    <h3 class="font-semibold text-gray-700 text-sm mb-1">Created Date</h3>
                    <p class="text-gray-900">
                      {project.createdDate ? new Date(project.createdDate).toLocaleDateString('en-PH', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      }) : 'N/A'}
                    </p>
                  </div>
                </div>
              </div>

              <!-- Quick Stats Card -->
              <div class="bg-white rounded-lg shadow-md p-6 transition-all duration-300 hover:shadow-2xl hover:scale-[1.02] hover:-translate-y-1">
                <div class="bg-gradient-to-r from-red-600 to-red-700 text-white px-4 py-3 rounded-t-lg -mt-6 -mx-6 mb-4 shadow-lg">
                  <h3 class="text-xl font-bold flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    Quick Stats
                  </h3>
                </div>
                <div class="space-y-3">
                  <div class="flex justify-between items-center p-2 bg-yellow-50 rounded-lg">
                    <span class="text-sm text-gray-700">Timeline Updates</span>
                    <span class="text-sm font-semibold text-yellow-600 capitalize">{project.timelineUpdateFrequency || 'N/A'}</span>
                  </div>
                  <div class="flex justify-between items-center p-2 bg-blue-50 rounded-lg">
                    <span class="text-sm text-gray-700">Physical Updates</span>
                    <span class="text-sm font-semibold text-blue-600 capitalize">{project.physicalUpdateFrequency || 'N/A'}</span>
                  </div>
                  <div class="flex justify-between items-center p-2 bg-green-50 rounded-lg">
                    <span class="text-sm text-gray-700">Workflow Status</span>
                    <span class="text-sm font-semibold text-green-600 capitalize">{project.workflowStatus || 'N/A'}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Articles & Publications Tab -->
        <div id="tab-articles" class="tab-content hidden">
          <div class="bg-white rounded-lg shadow-md p-8">
            <div class="text-center">
              <div class="text-6xl mb-4 text-gray-300">📄</div>
              <h3 class="text-2xl font-bold text-gray-700 mb-2">Articles & Publications</h3>
              <p class="text-gray-500 mb-6">No articles or publications available for this project yet.</p>
              <div class="bg-gray-50 p-6 rounded-lg">
                <p class="text-gray-600">This section will display project-related articles, reports, and publications when they become available.</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Photos Tab -->
        <div id="tab-photos" class="tab-content hidden">
          <div class="bg-white rounded-lg shadow-md p-8">
            <div class="text-center">
              <div class="text-6xl mb-4 text-gray-300">📷</div>
              <h3 class="text-2xl font-bold text-gray-700 mb-2">Project Photos</h3>
              <p class="text-gray-500 mb-6">No photos available for this project yet.</p>
              <div class="bg-gray-50 p-6 rounded-lg">
                <p class="text-gray-600">This section will display project photos, progress images, and documentation when they become available.</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Videos Tab -->
        <div id="tab-videos" class="tab-content hidden">
          <div class="bg-white rounded-lg shadow-md p-8">
            <div class="text-center">
              <div class="text-6xl mb-4 text-gray-300">🎥</div>
              <h3 class="text-2xl font-bold text-gray-700 mb-2">Project Videos</h3>
              <p class="text-gray-500 mb-6">No videos available for this project yet.</p>
              <div class="bg-gray-50 p-6 rounded-lg">
                <p class="text-gray-600">This section will display project videos, progress recordings, and multimedia content when they become available.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  ) : null}
  
  <LGUFooter />
</Layout>

<style>
  .timeline-container {
    position: relative;
  }
  
  .timeline-track {
    background: linear-gradient(to right, #e5e7eb, #d1d5db);
  }
  
  .timeline-grid-line {
    border-right: 1px dashed #9ca3af;
  }
  
  .timeline-milestones {
    position: relative;
  }
  
  .timeline-milestone {
    position: absolute;
    width: 12px;
    height: 12px;
    background: #3b82f6;
    border: 2px solid white;
    border-radius: 50%;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .timeline-milestone:hover {
    transform: translateY(-50%) scale(1.2);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  }
  
  .timeline-milestone.completed {
    background: #10b981;
  }
  
  .timeline-milestone.in-progress {
    background: #f59e0b;
  }
  
  .timeline-milestone.pending {
    background: #6b7280;
  }
  
  .timeline-popup {
    position: absolute;
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    padding: 12px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    z-index: 1000;
    max-width: 200px;
    opacity: 0;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    pointer-events: none;
  }
  
  .timeline-popup.show {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  /* Tab Styles */
  .tab-button {
    transition: all 0.3s ease;
    color: #6b7280;
    position: relative;
    overflow: hidden;
  }

  .tab-button:hover {
    color: #374151;
  }

  .tab-button.active {
    color: #EB3C3C;
  }

  .tab-button.active::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(to right, #EB3C3C, #D63333);
    border-radius: 3px 3px 0 0;
    transform: scaleX(1);
    transition: transform 0.3s ease;
  }

  .tab-button:not(.active)::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(to right, #EB3C3C, #D63333);
    border-radius: 3px 3px 0 0;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .tab-button:hover::before {
    transform: scaleX(1);
  }

  .tab-content {
    transition: all 0.4s ease;
    opacity: 0;
    transform: translateY(10px);
  }

  .tab-content.active {
    display: block;
    opacity: 1;
    transform: translateY(0);
  }

  .tab-content.hidden {
    display: none;
  }

  /* Tab container animations */
  .tab-container {
    animation: fadeInUp 0.5s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Project page functionality
  document.addEventListener('DOMContentLoaded', function() {
    // Tab functionality with enhanced animations
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');

    function switchTab(targetTab) {
      // Remove active class from all buttons
      tabButtons.forEach(btn => {
        btn.classList.remove('active');
        btn.setAttribute('aria-selected', 'false');
      });
      
      // Hide all tab contents with animation
      tabContents.forEach(content => {
        content.style.opacity = '0';
        content.style.transform = 'translateY(10px)';
        setTimeout(() => {
          content.classList.remove('active');
          content.classList.add('hidden');
        }, 200);
      });
      
      // Add active class to clicked button
      const activeButton = document.querySelector(`[data-tab="${targetTab}"]`);
      if (activeButton) {
        activeButton.classList.add('active');
        activeButton.setAttribute('aria-selected', 'true');
        
        // Add click animation
        activeButton.style.transform = 'scale(0.95)';
        setTimeout(() => {
          activeButton.style.transform = 'scale(1)';
        }, 150);
      }
      
      // Show target content with animation
      const targetContent = document.getElementById(`tab-${targetTab}`);
      if (targetContent) {
        setTimeout(() => {
          targetContent.classList.remove('hidden');
          targetContent.classList.add('active');
          
          // Trigger animation
          requestAnimationFrame(() => {
            targetContent.style.opacity = '1';
            targetContent.style.transform = 'translateY(0)';
          });
        }, 200);
      }
    }

    tabButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const targetTab = button.getAttribute('data-tab');
        
        // Add ripple effect
        const ripple = document.createElement('div');
        ripple.className = 'ripple';
        ripple.style.cssText = `
          position: absolute;
          border-radius: 50%;
          background: rgba(235, 60, 60, 0.3);
          transform: scale(0);
          animation: ripple 0.6s linear;
          pointer-events: none;
        `;
        
        const rect = button.getBoundingClientRect();
        const size = Math.max(rect.width, rect.height);
        const x = e.clientX - rect.left - size / 2;
        const y = e.clientY - rect.top - size / 2;
        
        ripple.style.width = ripple.style.height = size + 'px';
        ripple.style.left = x + 'px';
        ripple.style.top = y + 'px';
        
        button.appendChild(ripple);
        
        setTimeout(() => {
          ripple.remove();
        }, 600);
        
        switchTab(targetTab);
      });

      // Add keyboard navigation
      button.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          const targetTab = button.getAttribute('data-tab');
          switchTab(targetTab);
        }
      });
    });

    // Add ripple animation CSS
    const style = document.createElement('style');
    style.textContent = `
      @keyframes ripple {
        to {
          transform: scale(4);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);

    console.log('Project page loaded with enhanced tabs');
  });

  // Add smooth animations for better UX
  function addSmoothAnimations() {
    const heroSection = document.querySelector('.hero-section');
    if (heroSection) {
      heroSection.style.opacity = '0';
      heroSection.style.transform = 'translateY(20px)';
      
      setTimeout(() => {
        heroSection.style.transition = 'all 0.6s ease-out';
        heroSection.style.opacity = '1';
        heroSection.style.transform = 'translateY(0)';
      }, 100);
    }
  }

  // Initialize animations when page loads
  window.addEventListener('load', addSmoothAnimations);
</script> 