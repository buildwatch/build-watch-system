---
export const prerender = false;
import Layout from '../../../layouts/Layout.astro';
import MPMECLayout from '../../../components/MPMECLayout.astro';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let projects = [];
let stats = {
  totalProjects: 0,
  ongoingProjects: 0,
  completedProjects: 0,
  pendingProjects: 0,
  averageProgress: 0,
  totalBudget: '₱0',
  utilizedBudget: '₱0',
  approvedProjects: 0
};
let loading = true;
let error = '';

// Try to fetch dashboard data from API
try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    // Fetch user data for authentication
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    // Fetch all approved projects for MPMEC monitoring
    const projectsRes = await fetch(`${API_URL}/projects`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (projectsRes.ok) {
      const data = await projectsRes.json();
      if (data.success) {
        projects = data.projects;
        
        // Calculate statistics
        stats.totalProjects = projects.length;
        stats.ongoingProjects = projects.filter(p => p.status === 'ongoing').length;
        stats.completedProjects = projects.filter(p => p.status === 'complete').length;
        stats.pendingProjects = projects.filter(p => p.status === 'pending').length;
        stats.approvedProjects = projects.filter(p => p.approvedBySecretariat === true).length;
        
        // Calculate total budget properly
        const totalBudget = projects.reduce((sum, p) => {
          const budget = parseFloat(p.totalBudget) || 0;
          return sum + budget;
        }, 0);
        stats.totalBudget = `₱${totalBudget.toLocaleString()}`;
        
        // Calculate utilized budget based on progress
        const utilizedBudget = projects.reduce((sum, p) => {
          const budget = parseFloat(p.totalBudget) || 0;
          const progress = parseFloat(p.progress?.overallProgress || p.overallProgress || 0);
          return sum + (budget * progress / 100);
        }, 0);
        stats.utilizedBudget = `₱${utilizedBudget.toLocaleString()}`;
        
        // Calculate average progress
        const avgProgress = projects.length > 0 
          ? projects.reduce((sum, p) => sum + (parseFloat(p.progress?.overallProgress || p.overallProgress || 0)), 0) / projects.length
          : 0;
        stats.averageProgress = Math.round(avgProgress);
      }
    }
  }
} catch (err) {
  console.error('Error fetching dashboard data:', err);
  error = 'Failed to fetch dashboard data.';
}

loading = false;
---

<Layout title="MPMEC Dashboard | Build Watch">
  <MPMECLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header Section -->
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">MPMEC Dashboard</h1>
          <p class="text-gray-600">Municipal Project Monitoring and Evaluation Committee - Project Overview</p>
        </div>
        <div class="flex items-center gap-3">
          <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec/modules/approved-projects'" class="px-6 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
            View Projects
          </button>
        </div>
      </div>

      <!-- Statistics Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Total Projects</p>
              <p class="text-2xl font-bold text-gray-800">{stats.totalProjects}</p>
            </div>
            <div class="p-3 bg-blue-100 rounded-full">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Approved</p>
              <p class="text-2xl font-bold text-green-600">{stats.approvedProjects}</p>
            </div>
            <div class="p-3 bg-green-100 rounded-full">
              <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Ongoing</p>
              <p class="text-2xl font-bold text-blue-600">{stats.ongoingProjects}</p>
            </div>
            <div class="p-3 bg-blue-100 rounded-full">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Average Progress</p>
              <p class="text-2xl font-bold text-purple-600">{stats.averageProgress}%</p>
            </div>
            <div class="p-3 bg-purple-100 rounded-full">
              <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Budget Overview -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Budget Overview</h3>
          <div class="space-y-4">
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-600">Total Budget</span>
              <span class="font-semibold text-gray-800">{stats.totalBudget}</span>
            </div>
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-600">Utilized Budget</span>
              <span class="font-semibold text-gray-800">{stats.utilizedBudget}</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div class="bg-[#92751F] h-2 rounded-full" style={`width: ${Math.min(stats.averageProgress, 100)}%`}></div>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Quick Actions</h3>
          <div class="space-y-3">
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec/modules/approved-projects'" class="w-full px-4 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors text-left flex items-center gap-3">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
              View Approved Projects
            </button>
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec/modules/progress-timeline'" class="w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-left flex items-center gap-3">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
              Progress Timeline
            </button>
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec/modules/profile'" class="w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-left flex items-center gap-3">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              View Profile
            </button>
          </div>
        </div>
      </div>

      {loading ? (
        <div class="flex items-center justify-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#92751F]"></div>
          <span class="ml-3 text-gray-600">Loading dashboard...</span>
        </div>
      ) : error ? (
        <div class="text-center py-12">
          <p class="text-red-600 mb-4">{error}</p>
          <button onclick="loadDashboard()" class="px-4 py-2 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-all">
            Try Again
          </button>
        </div>
      ) : projects.length === 0 ? (
        <div class="text-center py-12">
          <svg class="w-24 h-24 text-gray-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
          <h3 class="text-xl font-semibold text-gray-800 mb-2">No Projects Available</h3>
          <p class="text-gray-600 mb-6">No projects have been approved by the Secretariat yet. Projects will appear here once they are approved and ready for MPMEC monitoring.</p>
          <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec/modules/approved-projects'" class="px-6 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors flex items-center gap-2 mx-auto">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
            View Approved Projects
          </button>
        </div>
      ) : (
        <!-- Recent Projects -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-800">Recent Projects</h3>
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec/modules/approved-projects'" class="text-[#92751F] hover:text-[#7A6219] text-sm font-medium">
              View All Projects →
            </button>
          </div>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {projects.slice(0, 4).map(project => {
              const progress = parseFloat(project.progress?.overallProgress || project.overallProgress || 0);
              
              return (
                <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                  <div class="flex items-start justify-between mb-3">
                    <div class="flex-1">
                      <h4 class="font-semibold text-gray-800 mb-1">{project.name}</h4>
                      <p class="text-sm text-gray-600">{project.projectCode}</p>
                    </div>
                    <span class={`px-2 py-1 text-xs font-medium rounded-full ${
                      project.approvedBySecretariat === true ? 'bg-green-100 text-green-700' :
                      project.status === 'ongoing' ? 'bg-blue-100 text-blue-700' :
                      project.status === 'complete' ? 'bg-purple-100 text-purple-700' :
                      project.status === 'pending' ? 'bg-yellow-100 text-yellow-700' :
                      'bg-gray-100 text-gray-700'
                    }`}>
                      {project.approvedBySecretariat === true ? 'approved' : project.status}
                    </span>
                  </div>
                  
                  <div class="mb-3">
                    <div class="flex items-center justify-between mb-1">
                      <span class="text-sm text-gray-600">Progress</span>
                      <span class="text-sm font-medium text-gray-800">{progress}%</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                      <div class={`h-2 rounded-full ${
                        project.status === 'complete' ? 'bg-green-500' : 
                        project.approvedBySecretariat === true ? 'bg-green-400' : 'bg-[#92751F]'
                      }`} style={`width: ${progress}%`}></div>
                    </div>
                  </div>
                  
                  <div class="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <span class="text-gray-500">Budget:</span>
                      <span class="font-medium ml-1">₱{(parseFloat(project.totalBudget) || 0).toLocaleString()}</span>
                    </div>
                    <div>
                      <span class="text-gray-500">Implementing Office:</span>
                      <span class="font-medium ml-1">{project.implementingOfficeName || 'Not specified'}</span>
                    </div>
                  </div>
                  
                  <div class="mt-3 flex items-center gap-2">
                    <button onclick={`viewProject('${project.id}')`} class="flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors text-sm">
                      View Details
                    </button>
                    <button onclick={`viewProgress('${project.id}')`} class="px-3 py-2 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors text-sm">
                      Progress
                    </button>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      )}
    </section>
  </MPMECLayout>
</Layout>

<script>
  import authService from '../../../services/auth.js';
  
  // API Configuration
  const API_URL = 'http://localhost:3000/api';
  
  // Global variables
  let projects = [];
  let currentUser = null;

  // Authentication check for MPMEC
  document.addEventListener('DOMContentLoaded', function() {
    // Check session validity first
    if (!authService.redirectIfInvalidSession()) {
      return;
    }
    
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (!token || !userData) {
      window.location.href = '/';
      return;
    }
    
    try {
      const user = JSON.parse(userData);
      
      // Check if user is MPMEC
      if (user.role !== 'LGU-PMT' || (user.subRole && user.subRole.toLowerCase() !== 'mpmec')) {
        // Redirect to appropriate dashboard based on role
        authService.redirectToDashboard(user.role, user.subRole);
        return;
      }
      
      console.log('MPMEC Dashboard loaded for user:', user.username);
      
      // Initialize the page
      initializePage();
      
    } catch (error) {
      console.error('Error parsing user data:', error);
      window.location.href = '/';
    }
  });

  // Initialize the page
  async function initializePage() {
    try {
      const token = localStorage.getItem('token');
      if (token) {
        // Fetch user data for authentication
        const userRes = await fetch(`${API_URL}/auth/profile`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (userRes.ok) {
          const userDataResponse = await userRes.json();
          if (userDataResponse.success && userDataResponse.user) {
            currentUser = userDataResponse.user;
          }
        }

        // Fetch projects from the API
        const projectsRes = await fetch(`${API_URL}/projects`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (projectsRes.ok) {
          const data = await projectsRes.json();
          if (data.success) {
            projects = data.projects || [];
            updateDashboardUI();
          }
        }
      }
    } catch (error) {
      console.error('Error fetching dashboard data:', error);
    }
  }

  // Load dashboard function
  async function loadDashboard() {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }
      
      const token = localStorage.getItem('token');
      const response = await fetch(`${API_URL}/projects`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          projects = data.projects || [];
          updateDashboardUI();
          location.reload(); // Refresh the page to update statistics
        }
      }
    } catch (error) {
      console.error('Error loading dashboard:', error);
    }
  }

  // Update dashboard UI
  function updateDashboardUI() {
    console.log('Dashboard updated:', projects);
  }

  // View project details
  async function viewProject(projectId) {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }

      // Redirect to approved projects page
      window.location.href = `/dashboard/lgu-pmt-mpmec/modules/approved-projects?projectId=${projectId}`;
    } catch (error) {
      console.error('Error viewing project:', error);
    }
  }

  // View project progress
  async function viewProgress(projectId) {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }

      // Redirect to progress timeline page
      window.location.href = `/dashboard/lgu-pmt-mpmec/modules/progress-timeline?projectId=${projectId}`;
    } catch (error) {
      console.error('Error viewing progress:', error);
    }
  }

  // Make functions globally available
  window.loadDashboard = loadDashboard;
  window.viewProject = viewProject;
  window.viewProgress = viewProgress;
</script> 