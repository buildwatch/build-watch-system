---
export const prerender = false;
import Layout from '../../../../layouts/Layout.astro';
import LGUPMTLayout from '../../../../components/LGUPMTLayout.astro';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let approvedProjects = [];
let stats = {
  totalProjects: 0,
  activeComplete: 0,
  pending: 0,
  totalBudget: '₱0'
};
let loading = true;
let error = '';

// Try to fetch approved projects data from API
try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    // Fetch user data for authentication
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    // Fetch all projects for MPMEC (including pending ones)
    const projectsRes = await fetch(`${API_URL}/projects`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (projectsRes.ok) {
      const data = await projectsRes.json();
      if (data.success) {
        // MPMEC sees all projects submitted to Secretariat (approved + pending)
        approvedProjects = data.projects.filter(p => p.submittedToSecretariat === true);
        
        // Calculate statistics
        stats.totalProjects = approvedProjects.length;
        stats.activeComplete = approvedProjects.filter(p => p.status === 'ongoing' || p.status === 'complete').length;
        stats.pending = approvedProjects.filter(p => p.status === 'pending').length;
        
        const totalBudget = approvedProjects.reduce((sum, p) => {
          const budget = parseFloat(p.totalBudget) || 0;
          return sum + budget;
        }, 0);
        stats.totalBudget = `₱${totalBudget.toLocaleString()}`;
      }
    }
  }
} catch (err) {
  console.error('Error fetching approved projects data:', err);
  error = 'Failed to fetch projects data.';
}

loading = false;
---

<Layout title="Approved Projects | MPMEC Dashboard">
  <LGUPMTLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header -->
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">LGU-PMT Dashboard</h1>
          <p class="text-gray-600">Municipal Project Monitoring and Evaluation Committee</p>
          <p class="text-sm text-gray-500">Review and monitor approved municipal projects.</p>
        </div>
        <div class="flex items-center gap-3">
          <button onclick="exportProjects()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            Export
          </button>
          <button onclick="refreshProjects()" class="px-4 py-2 bg-[#FE5353] text-white rounded-lg hover:bg-[#E54545] transition-colors flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Refresh
          </button>
        </div>
      </div>

      <!-- Statistics Cards -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Total Projects</p>
              <p class="text-2xl font-bold text-gray-800" id="totalProjects">{stats.totalProjects}</p>
            </div>
            <div class="bg-blue-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Active/Complete</p>
              <p class="text-2xl font-bold text-green-600" id="activeComplete">{stats.activeComplete}</p>
            </div>
            <div class="bg-green-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Pending</p>
              <p class="text-2xl font-bold text-yellow-600" id="pending">{stats.pending}</p>
            </div>
            <div class="bg-yellow-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Total Budget</p>
              <p class="text-2xl font-bold text-purple-600" id="totalBudget">{stats.totalBudget}</p>
            </div>
            <div class="bg-purple-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Filters and Search -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-gray-800">Search & Filter Projects</h3>
          <button onclick="clearFilters()" class="text-sm text-[#FE5353] hover:text-[#E54545] font-medium">
            Clear Filters
          </button>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Search Projects</label>
            <input type="text" id="searchInput" placeholder="Search by project name..." class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#FE5353] focus:border-transparent" onkeyup="filterProjects()">
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
            <select id="statusFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#FE5353] focus:border-transparent" onchange="filterProjects()">
              <option value="">All Status</option>
              <option value="ongoing">Ongoing</option>
              <option value="pending">Pending</option>
              <option value="complete">Complete</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Department</label>
            <select id="departmentFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#FE5353] focus:border-transparent" onchange="filterProjects()">
              <option value="">All Departments</option>
              <option value="Municipal Disaster And Risk Reduction Management Office">Municipal Disaster And Risk Reduction Management Office</option>
              <option value="Municipal Social Welfare And Development Office">Municipal Social Welfare And Development Office</option>
              <option value="Municipal Environment and Natural Resources Office">Municipal Environment and Natural Resources Office</option>
              <option value="Municipal Health Office">Municipal Health Office</option>
              <option value="Municipal Agriculture Office">Municipal Agriculture Office</option>
              <option value="Municipal Engineering Office">Municipal Engineering Office</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
            <select id="categoryFilter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#FE5353] focus:border-transparent" onchange="filterProjects()">
              <option value="">All Categories</option>
              <option value="infrastructure">Infrastructure</option>
              <option value="health">Health</option>
              <option value="education">Education</option>
              <option value="agriculture">Agriculture</option>
              <option value="social">Social Services</option>
              <option value="environment">Environment</option>
              <option value="transportation">Transportation</option>
            </select>
          </div>
        </div>
      </div>

      {loading ? (
        <div class="flex items-center justify-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#FE5353]"></div>
          <span class="ml-3 text-gray-600">Loading approved projects...</span>
        </div>
      ) : error ? (
        <div class="text-center py-12">
          <p class="text-red-600 mb-4">{error}</p>
          <button onclick="loadProjects()" class="px-4 py-2 bg-[#FE5353] text-white rounded-lg hover:bg-[#E54545] transition-all">
            Try Again
          </button>
        </div>
      ) : approvedProjects.length === 0 ? (
        <div class="text-center py-12">
          <svg class="w-24 h-24 text-gray-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
          <h3 class="text-xl font-semibold text-gray-800 mb-2">No Projects Available</h3>
          <p class="text-gray-600 mb-6">No projects have been submitted to the Secretariat yet. Projects will appear here once they are submitted.</p>
        </div>
      ) : (
        <!-- Projects Table -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
          <div class="px-6 py-4 border-b border-gray-200">
            <h2 class="text-lg font-semibold text-gray-800">Approved Project List</h2>
          </div>
          <div class="overflow-x-auto">
            <table class="w-full">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Project</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Department</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Budget</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Progress</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Timeline</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Approval Date</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody id="projectsTableBody" class="bg-white divide-y divide-gray-200">
                {approvedProjects.map(project => {
                  const progress = parseFloat(project.progress?.overallProgress || project.overallProgress || 0);
                  const budget = parseFloat(project.totalBudget) || 0;
                  const timelineProgress = parseFloat(project.timelineProgress) || 0;
                  const startDate = project.startDate ? new Date(project.startDate) : null;
                  const endDate = project.endDate ? new Date(project.endDate) : null;
                  
                  return (
                    <tr class="hover:bg-gray-50">
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div>
                          <div class="text-sm font-medium text-gray-900">{project.name}</div>
                          <div class="text-sm text-gray-500">{project.projectCode}</div>
                        </div>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">{project.implementingOfficeName}</div>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">₱{budget.toLocaleString()}</div>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap">
                        <span class={`px-2 py-1 text-xs font-medium rounded-full ${
                          project.status === 'complete' ? 'bg-green-100 text-green-700' :
                          project.status === 'ongoing' ? 'bg-blue-100 text-blue-700' :
                          project.status === 'pending' ? 'bg-yellow-100 text-yellow-700' :
                          'bg-gray-100 text-gray-700'
                        }`}>
                          {project.status}
                        </span>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                          <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                            <div class={`h-2 rounded-full ${
                              project.status === 'complete' ? 'bg-green-500' : 'bg-[#FE5353]'
                            }`} style={`width: ${progress}%`}></div>
                          </div>
                          <span class="text-sm text-gray-900">{progress.toFixed(1)}%</span>
                        </div>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                                                   <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                           <div class={`h-2 rounded-full ${
                             timelineProgress >= 100 ? 'bg-green-500' : 'bg-blue-500'
                           }`} style={`width: ${Math.min(timelineProgress, 100)}%`}></div>
                         </div>
                          <span class="text-sm text-gray-900">{timelineProgress.toFixed(1)}%</span>
                        </div>
                        <div class="text-xs text-gray-500 mt-1">
                          {startDate ? startDate.toLocaleDateString() : 'N/A'} - {endDate ? endDate.toLocaleDateString() : 'N/A'}
                        </div>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        {project.secretariatApprovalDate ? new Date(project.secretariatApprovalDate).toLocaleDateString() : 'N/A'}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <button onclick={`viewProjectDetails('${project.id}')`} class="text-[#FE5353] hover:text-[#E54545] mr-3">
                          View
                        </button>
                        <button onclick={`viewProgress('${project.id}')`} class="text-blue-600 hover:text-blue-800">
                          Progress
                        </button>
                      </td>
                    </tr>
                  );
                })}
              </tbody>
            </table>
          </div>
          <div class="px-6 py-4 border-t border-gray-200">
            <div class="flex items-center justify-between">
              <p class="text-sm text-gray-700">Showing <span id="showingCount">{approvedProjects.length}</span> of <span id="totalCount">{approvedProjects.length}</span> projects</p>
            </div>
          </div>
        </div>
      )}
    </section>

    <!-- Project Details Modal -->
    <div id="projectModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-xl shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
          <div class="p-6 border-b border-gray-200">
            <div class="flex items-center justify-between">
              <h3 class="text-lg font-semibold text-gray-900" id="modalTitle">Project Details</h3>
              <button onclick="closeProjectModal()" class="text-gray-400 hover:text-gray-600">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
              </button>
            </div>
          </div>
          
          <div class="p-6" id="modalContent">
            <!-- Project details will be loaded here -->
          </div>
        </div>
      </div>
    </div>
  </LGUPMTLayout>
</Layout>

<script>
  // API Configuration
  const API_URL = 'http://localhost:3000/api';
  
  // Global variables
  let projects = [];
  let currentUser = null;

  // Initialize the page
  async function initializePage() {
    try {
      const token = localStorage.getItem('token');
      if (token) {
        // Fetch user data for authentication
        const userRes = await fetch(`${API_URL}/auth/profile`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (userRes.ok) {
          const userDataResponse = await userRes.json();
          if (userDataResponse.success && userDataResponse.user) {
            currentUser = userDataResponse.user;
          }
        }

        // Fetch all projects from the API
        const projectsRes = await fetch(`${API_URL}/projects`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (projectsRes.ok) {
          const data = await projectsRes.json();
          if (data.success) {
            // MPMEC sees all projects submitted to Secretariat
            projects = data.projects.filter(p => p.submittedToSecretariat === true);
            updateProjectsUI();
          }
        }
      }
    } catch (error) {
      console.error('Error fetching approved projects data:', error);
    }
  }

  // Initialize the page when the script loads
  initializePage();

  // Load projects function
  async function loadProjects() {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        window.location.href = '/login/lgu-pmt';
        return;
      }

      const response = await fetch(`${API_URL}/projects`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          // MPMEC sees all projects submitted to Secretariat
          projects = data.projects.filter(p => p.submittedToSecretariat === true);
          updateProjectsUI();
          location.reload(); // Refresh the page to update statistics
        }
      }
    } catch (error) {
      console.error('Error loading projects:', error);
    }
  }

  // Update projects UI
  function updateProjectsUI() {
    console.log('Projects updated:', projects);
    updateProjectsTable(projects);
  }

  // Refresh projects
  async function refreshProjects() {
    await loadProjects();
  }

  // Export projects
  function exportProjects() {
    // TODO: Implement export functionality
    console.log('Exporting projects data...');
  }

  // View project details
  async function viewProjectDetails(projectId) {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        window.location.href = '/login/lgu-pmt';
        return;
      }

      const response = await fetch(`${API_URL}/projects/${projectId}`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          showProjectModal(data.project);
        }
      }
    } catch (error) {
      console.error('Error viewing project details:', error);
    }
  }

  // View project progress
  async function viewProgress(projectId) {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        window.location.href = '/login/lgu-pmt';
        return;
      }

      // Redirect to progress timeline page
      window.location.href = `/dashboard/lgu-pmt-mpmec/modules/progress-timeline?projectId=${projectId}`;
    } catch (error) {
      console.error('Error viewing project progress:', error);
    }
  }

  // Show project modal
  function showProjectModal(project) {
    const modal = document.getElementById('projectModal');
    const modalTitle = document.getElementById('modalTitle');
    const modalContent = document.getElementById('modalContent');
    
    modalTitle.textContent = project.name;
    modalContent.innerHTML = `
      <div class="space-y-6">
        <div class="grid grid-cols-2 gap-4">
          <div>
            <h4 class="font-medium text-gray-900">Project Code</h4>
            <p class="text-gray-600">${project.projectCode}</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Status</h4>
            <p class="text-gray-600 capitalize">${project.status}</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Implementing Office</h4>
            <p class="text-gray-600">${project.implementingOfficeName}</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Category</h4>
            <p class="text-gray-600 capitalize">${project.category}</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Total Budget</h4>
            <p class="text-gray-600">₱${(parseFloat(project.totalBudget) || 0).toLocaleString()}</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Overall Progress</h4>
            <p class="text-gray-600">${parseFloat(project.progress?.overallProgress || project.overallProgress || 0)}%</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Start Date</h4>
            <p class="text-gray-600">${project.startDate}</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">End Date</h4>
            <p class="text-gray-600">${project.endDate}</p>
          </div>
        </div>
        
        <div>
          <h4 class="font-medium text-gray-900">Description</h4>
          <p class="text-gray-600">${project.description}</p>
        </div>
        
        <div class="grid grid-cols-3 gap-4">
          <div>
            <h4 class="font-medium text-gray-900">Timeline Progress</h4>
            <div class="w-full bg-gray-200 rounded-full h-2 mt-2">
              <div class="bg-blue-500 h-2 rounded-full" style="width: ${parseFloat(project.timelineProgress) || 0}%"></div>
            </div>
            <p class="text-sm text-gray-600 mt-1">${parseFloat(project.timelineProgress) || 0}%</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Budget Progress</h4>
            <div class="w-full bg-gray-200 rounded-full h-2 mt-2">
              <div class="bg-green-500 h-2 rounded-full" style="width: ${parseFloat(project.budgetProgress) || 0}%"></div>
            </div>
            <p class="text-sm text-gray-600 mt-1">${parseFloat(project.budgetProgress) || 0}%</p>
          </div>
          <div>
            <h4 class="font-medium text-gray-900">Physical Progress</h4>
            <div class="w-full bg-gray-200 rounded-full h-2 mt-2">
              <div class="bg-purple-500 h-2 rounded-full" style="width: ${parseFloat(project.physicalProgress) || 0}%"></div>
            </div>
            <p class="text-sm text-gray-600 mt-1">${parseFloat(project.physicalProgress) || 0}%</p>
          </div>
        </div>
      </div>
    `;
    
    modal.classList.remove('hidden');
  }

  // Close project modal
  function closeProjectModal() {
    const modal = document.getElementById('projectModal');
    modal.classList.add('hidden');
  }

  // Filter projects
  function filterProjects() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const statusFilter = document.getElementById('statusFilter').value;
    const departmentFilter = document.getElementById('departmentFilter').value;
    const categoryFilter = document.getElementById('categoryFilter').value;

    const filteredProjects = projects.filter(project => {
      const matchesSearch = project.name.toLowerCase().includes(searchTerm) || 
                           project.projectCode.toLowerCase().includes(searchTerm);
      const matchesStatus = !statusFilter || project.status === statusFilter;
      const matchesDepartment = !departmentFilter || project.implementingOfficeName === departmentFilter;
      const matchesCategory = !categoryFilter || project.category === categoryFilter;

      return matchesSearch && matchesStatus && matchesDepartment && matchesCategory;
    });

    updateProjectsTable(filteredProjects);
  }

  // Clear filters
  function clearFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('statusFilter').value = '';
    document.getElementById('departmentFilter').value = '';
    document.getElementById('categoryFilter').value = '';
    updateProjectsTable(projects);
  }

  // Update projects table
  function updateProjectsTable(projectsToShow) {
    const tbody = document.getElementById('projectsTableBody');
    const showingCount = document.getElementById('showingCount');
    const totalCount = document.getElementById('totalCount');

    if (!tbody) return;

         tbody.innerHTML = projectsToShow.map(project => {
       const progress = parseFloat(project.progress?.overallProgress || project.overallProgress || 0);
       const budget = parseFloat(project.totalBudget) || 0;
       const timelineProgress = parseFloat(project.timelineProgress) || 0;
       const startDate = project.startDate ? new Date(project.startDate) : null;
       const endDate = project.endDate ? new Date(project.endDate) : null;

      return `
        <tr class="hover:bg-gray-50">
          <td class="px-6 py-4 whitespace-nowrap">
            <div>
              <div class="text-sm font-medium text-gray-900">${project.name}</div>
              <div class="text-sm text-gray-500">${project.projectCode}</div>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-900">${project.implementingOfficeName}</div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="text-sm text-gray-900">₱${budget.toLocaleString()}</div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="px-2 py-1 text-xs font-medium rounded-full ${
              project.status === 'complete' ? 'bg-green-100 text-green-700' :
              project.status === 'ongoing' ? 'bg-blue-100 text-blue-700' :
              project.status === 'pending' ? 'bg-yellow-100 text-yellow-700' :
              'bg-gray-100 text-gray-700'
            }">
              ${project.status}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
              <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                <div class="h-2 rounded-full ${
                  project.status === 'complete' ? 'bg-green-500' : 'bg-[#FE5353]'
                }" style="width: ${progress}%"></div>
              </div>
              <span class="text-sm text-gray-900">${progress.toFixed(1)}%</span>
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="flex items-center">
              <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                               <div class="h-2 rounded-full ${
                 timelineProgress >= 100 ? 'bg-green-500' : 'bg-blue-500'
               }" style="width: ${Math.min(timelineProgress, 100)}%"></div>
              </div>
              <span class="text-sm text-gray-900">${timelineProgress.toFixed(1)}%</span>
            </div>
            <div class="text-xs text-gray-500 mt-1">
              ${startDate ? startDate.toLocaleDateString() : 'N/A'} - ${endDate ? endDate.toLocaleDateString() : 'N/A'}
            </div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
            ${project.secretariatApprovalDate ? new Date(project.secretariatApprovalDate).toLocaleDateString() : 'N/A'}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
            <button onclick="viewProjectDetails('${project.id}')" class="text-[#FE5353] hover:text-[#E54545] mr-3">
              View
            </button>
            <button onclick="viewProgress('${project.id}')" class="text-blue-600 hover:text-blue-800">
              Progress
            </button>
          </td>
        </tr>
      `;
    }).join('');

    showingCount.textContent = projectsToShow.length;
    totalCount.textContent = projects.length;
  }

  // Make functions globally available
  window.loadProjects = loadProjects;
  window.refreshProjects = refreshProjects;
  window.exportProjects = exportProjects;
  window.viewProjectDetails = viewProjectDetails;
  window.viewProgress = viewProgress;
  window.closeProjectModal = closeProjectModal;
  window.filterProjects = filterProjects;
  window.clearFilters = clearFilters;
</script> 