---
export const prerender = false;
import Layout from '../../../layouts/Layout.astro';
import IUImplementingOfficeLayout from '../../../components/IUImplementingOfficeLayout.astro';
import ProjectCard from '../../../components/ProjectCard.astro';
import ProjectDetailsModal from '../../../components/ProjectDetailsModal.astro';
import projectService from '../../../services/projects.js';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let projects = [];
let stats = {
  totalProjects: 0,
  ongoingProjects: 0,
  completedProjects: 0,
  pendingProjects: 0,
  averageProgress: 0,
  totalBudget: '₱0',
  utilizedBudget: '₱0'
};
let loading = true;
let error = '';

// Try to fetch dashboard data from API
try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    // Fetch user data for authentication
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    // Fetch projects for this Implementing Office with proper progress calculation
    const projectsRes = await fetch(`${API_URL}/projects`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (projectsRes.ok) {
      const data = await projectsRes.json();
      if (data.success) {
        projects = data.projects;
        
        // Calculate statistics using utility functions
        stats.totalProjects = projects.length;
        stats.ongoingProjects = projects.filter(p => p.status === 'ongoing').length;
        stats.completedProjects = projects.filter(p => p.status === 'completed').length;
        stats.pendingProjects = projects.filter(p => p.status === 'pending').length;
        
        // Calculate budgets using utility functions
        const totalBudget = projectService.calculateTotalBudget(projects);
        stats.totalBudget = projectService.formatBudget(totalBudget);
        
        // Use calculated progress from ProgressCalculationService for utilized budget
        const utilizedBudget = projects.reduce((sum, project) => {
          const budget = parseFloat(project.totalBudget) || 0;
          // Use budget division progress for utilized budget calculation (only approved divisions)
          const budgetProgress = parseFloat(project.progress?.budget || project.budgetProgress || 0);
          return sum + (budget * budgetProgress / 100);
        }, 0);
        stats.utilizedBudget = projectService.formatBudget(utilizedBudget);
        
        // Calculate average progress using ProgressCalculationService results
        const totalProgress = projects.reduce((sum, project) => {
          return sum + (parseFloat(project.progress?.overall || project.progress?.overallProgress || project.overallProgress || 0));
        }, 0);
        stats.averageProgress = projects.length > 0 ? Math.round(totalProgress / projects.length) : 0;
        
        // Calculate budget utilization percentage for progress bar
        const budgetUtilizationPercentage = totalBudget > 0 ? (utilizedBudget / totalBudget) * 100 : 0;
        stats.budgetUtilizationPercentage = Math.round(budgetUtilizationPercentage);
      }
    }
  }
} catch (err) {
  console.error('Error fetching dashboard data:', err);
  error = 'Failed to fetch dashboard data.';
}

loading = false;
---

<Layout title="LGU-IU Dashboard | Implementing Office">
  <IUImplementingOfficeLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 via-amber-50 to-white min-h-screen">
      <!-- Enhanced Header Section -->
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6 mb-8">
        <div>
          <h1 class="text-4xl font-bold bg-gradient-to-r from-gray-800 to-amber-600 bg-clip-text text-transparent mb-3">LGU-IU Dashboard</h1>
          <p class="text-lg text-gray-600">Implementing Office - Project Management Overview</p>
        </div>
        <div class="flex items-center gap-4">
          <button onclick="window.location.href='/dashboard/iu-implementing-office/modules/project-management'" class="group relative px-8 py-4 bg-gradient-to-r from-amber-600 to-amber-700 text-white rounded-xl hover:from-amber-700 hover:to-amber-800 transition-all duration-300 transform hover:scale-105 hover:shadow-xl flex items-center gap-3 overflow-hidden font-semibold">
            <div class="absolute inset-0 bg-white opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>
            <svg class="w-6 h-6 transition-transform duration-300 group-hover:rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Create New Project
          </button>
        </div>
      </div>

      <!-- Enhanced Statistics Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="group bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-2xl hover:border-blue-200 transition-all duration-300 transform hover:-translate-y-2 animate-fade-in-up" style="animation-delay: 0.1s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600 group-hover:text-blue-600 transition-colors">Total Projects</p>
              <p class="text-3xl font-bold text-gray-800 group-hover:text-blue-700 transition-colors">{stats.totalProjects}</p>
            </div>
            <div class="p-4 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-300 transform group-hover:scale-110">
              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="group bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-2xl hover:border-green-200 transition-all duration-300 transform hover:-translate-y-2 animate-fade-in-up" style="animation-delay: 0.2s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600 group-hover:text-green-600 transition-colors">Ongoing</p>
              <p class="text-3xl font-bold text-green-600 group-hover:text-green-700 transition-colors">{stats.ongoingProjects}</p>
            </div>
            <div class="p-4 bg-gradient-to-br from-green-100 to-green-200 rounded-full group-hover:from-green-200 group-hover:to-green-300 transition-all duration-300 transform group-hover:scale-110">
              <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="group bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-2xl hover:border-blue-200 transition-all duration-300 transform hover:-translate-y-2 animate-fade-in-up" style="animation-delay: 0.3s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600 group-hover:text-blue-600 transition-colors">Complete</p>
              <p class="text-3xl font-bold text-blue-600 group-hover:text-blue-700 transition-colors">{stats.completedProjects}</p>
            </div>
            <div class="p-4 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full group-hover:from-blue-200 group-hover:to-blue-300 transition-all duration-300 transform group-hover:scale-110">
              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="group bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-2xl hover:border-purple-200 transition-all duration-300 transform hover:-translate-y-2 animate-fade-in-up" style="animation-delay: 0.4s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600 group-hover:text-purple-600 transition-colors">Average Progress</p>
              <p class="text-3xl font-bold text-purple-600 group-hover:text-purple-700 transition-colors">{stats.averageProgress}%</p>
            </div>
            <div class="p-4 bg-gradient-to-br from-purple-100 to-purple-200 rounded-full group-hover:from-purple-200 group-hover:to-purple-300 transition-all duration-300 transform group-hover:scale-110">
              <svg class="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Enhanced Budget Overview and Quick Actions -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <!-- Enhanced Budget Overview -->
        <div class="group bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-2xl hover:border-amber-200 transition-all duration-300 transform hover:-translate-y-1">
          <h3 class="text-xl font-semibold text-gray-800 mb-6 group-hover:text-amber-600 transition-colors">Budget Overview</h3>
          <div class="space-y-4">
            <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg group-hover:bg-amber-50 transition-colors">
              <span class="text-sm text-gray-600 group-hover:text-amber-600 transition-colors">Total Budget</span>
              <span class="text-lg font-semibold text-gray-800 group-hover:text-amber-700 transition-colors">{stats.totalBudget}</span>
            </div>
            <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg group-hover:bg-green-50 transition-colors">
              <span class="text-sm text-gray-600 group-hover:text-green-600 transition-colors">Utilized Budget</span>
              <span class="text-lg font-semibold text-green-600 group-hover:text-green-700 transition-colors">{stats.utilizedBudget}</span>
            </div>
            <div class="border-t border-gray-200 pt-4">
              <div class="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
                <div 
                  class="bg-gradient-to-r from-amber-500 to-amber-600 h-3 rounded-full transition-all duration-1000 ease-out" 
                  style={`width: ${stats.budgetUtilizationPercentage}%`}
                ></div>
              </div>
              <p class="text-xs text-gray-500 mt-2 text-center">{stats.budgetUtilizationPercentage}% utilized</p>
            </div>
          </div>
        </div>

        <!-- Enhanced Quick Actions -->
        <div class="group bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-2xl hover:border-gray-200 transition-all duration-300 transform hover:-translate-y-1">
          <h3 class="text-xl font-semibold text-gray-800 mb-6 group-hover:text-gray-700 transition-colors">Quick Actions</h3>
          <div class="space-y-4">
            <button 
              onclick="window.location.href='/dashboard/iu-implementing-office/modules/project-management'" 
              class="group/btn w-full px-6 py-4 bg-gradient-to-r from-amber-600 to-amber-700 text-white rounded-xl hover:from-amber-700 hover:to-amber-800 transition-all duration-300 transform hover:scale-105 hover:shadow-lg text-left flex items-center gap-4 overflow-hidden relative"
            >
              <div class="absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-10 transition-opacity duration-300"></div>
              <div class="p-2 bg-white bg-opacity-20 rounded-lg group-hover/btn:bg-opacity-30 transition-all duration-300">
                <svg class="w-6 h-6 transition-transform duration-300 group-hover/btn:rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </div>
              <span class="font-semibold">Create New Project</span>
            </button>
            
            <button 
              onclick="window.location.href='/dashboard/iu-implementing-office/modules/progress-timeline'" 
              class="group/btn w-full px-6 py-4 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl hover:from-blue-700 hover:to-blue-800 transition-all duration-300 transform hover:scale-105 hover:shadow-lg text-left flex items-center gap-4 overflow-hidden relative"
            >
              <div class="absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-10 transition-opacity duration-300"></div>
              <div class="p-2 bg-white bg-opacity-20 rounded-lg group-hover/btn:bg-opacity-30 transition-all duration-300">
                <svg class="w-6 h-6 transition-transform duration-300 group-hover/btn:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
              </div>
              <span class="font-semibold">Update Progress</span>
            </button>
            
            <button 
              onclick="window.location.href='/dashboard/iu-implementing-office/modules/summary-module'" 
              class="group/btn w-full px-6 py-4 bg-gradient-to-r from-green-600 to-green-700 text-white rounded-xl hover:from-green-700 hover:to-green-800 transition-all duration-300 transform hover:scale-105 hover:shadow-lg text-left flex items-center gap-4 overflow-hidden relative"
            >
              <div class="absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-10 transition-opacity duration-300"></div>
              <div class="p-2 bg-white bg-opacity-20 rounded-lg group-hover/btn:bg-opacity-30 transition-all duration-300">
                <svg class="w-6 h-6 transition-transform duration-300 group-hover/btn:rotate-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
              </div>
              <span class="font-semibold">View Summary</span>
            </button>
          </div>
        </div>
      </div>

      {loading ? (
        <div class="flex items-center justify-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#92751F]"></div>
          <span class="ml-3 text-gray-600">Loading dashboard...</span>
        </div>
      ) : error ? (
        <div class="text-center py-12">
          <p class="text-red-600 mb-4">{error}</p>
          <button onclick="loadDashboard()" class="px-4 py-2 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-all">
            Try Again
          </button>
        </div>
      ) : projects.length === 0 ? (
        <div class="text-center py-12">
          <svg class="w-24 h-24 text-gray-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
          <h3 class="text-xl font-semibold text-gray-800 mb-2">No Projects Yet</h3>
          <p class="text-gray-600 mb-6">Get started by creating your first project with comprehensive monitoring across timeline, budget, and physical divisions</p>
          <button onclick="window.location.href='/dashboard/iu-implementing-office/modules/project-management'" class="px-6 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors flex items-center gap-2 mx-auto">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Create New Project
          </button>
        </div>
      ) : (
        <!-- Enhanced Recent Projects -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-2xl transition-all duration-300">
          <div class="flex items-center justify-between p-6 border-b border-gray-100">
            <h3 class="text-xl font-semibold text-gray-800">Recent Projects</h3>
            <a 
              href="/dashboard/iu-implementing-office/modules/project-management" 
              class="inline-flex items-center gap-2 text-amber-600 hover:text-amber-700 text-sm font-medium group-hover:gap-3 transition-all duration-300"
            >
              <span>View All Projects</span>
              <svg class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
          
          <div class="p-6">
            <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
              {projects.slice(0, 6).map(project => (
                <ProjectCard 
                  project={project}
                  userTheme="iu-implementing-office"
                  onClick="viewProjectDetails"
                />
              ))}
            </div>
          </div>
        </div>
      )}
    </section>

    <!-- Project Details Modal -->
    <ProjectDetailsModal userTheme="iu-implementing-office" />
  </IUImplementingOfficeLayout>
</Layout>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in-up {
    animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    opacity: 0;
  }

  /* Enhanced transitions for all elements */
  * {
    transition-property: transform, box-shadow, filter, backdrop-filter, color, background-color, border-color;
  }

  /* Enhanced focus states */
  button:focus, a:focus {
    outline: 2px solid #f59e0b;
    outline-offset: 2px;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: linear-gradient(to bottom, #f59e0b, #d97706);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(to bottom, #d97706, #b45309);
  }
</style>

<script>
  import authService from '../../../services/auth.js';
  
  // API Configuration
  const API_URL = 'http://localhost:3000/api';
  
  // Global variables
  let projects = [];
  let currentUser = null;

  // Authentication check for Implementing Office
  document.addEventListener('DOMContentLoaded', function() {
    // Check session validity first
    if (!authService.redirectIfInvalidSession()) {
      return;
    }
    
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (!token || !userData) {
      window.location.href = '/';
      return;
    }
    
    try {
      const user = JSON.parse(userData);
      
      // Check if user is Implementing Office
      if (user.role !== 'LGU-IU' && user.role !== 'IU') {
        // Redirect to appropriate dashboard based on role
        authService.redirectToDashboard(user.role, user.subRole);
        return;
      }
      
      console.log('Implementing Office Dashboard loaded for user:', user.username);
      
      // Initialize the page
      initializePage();
      
    } catch (error) {
      console.error('Error parsing user data:', error);
      window.location.href = '/';
    }
  });

  // Initialize the page
  async function initializePage() {
    try {
      const token = localStorage.getItem('token');
      if (token) {
        // Fetch user data for authentication
        const userRes = await fetch(`${API_URL}/auth/profile`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (userRes.ok) {
          const userDataResponse = await userRes.json();
          if (userDataResponse.success && userDataResponse.user) {
            currentUser = userDataResponse.user;
          }
        }

        // Fetch projects from the API
        const projectsRes = await fetch(`${API_URL}/projects`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        if (projectsRes.ok) {
          const data = await projectsRes.json();
          if (data.success) {
            projects = data.projects;
            updateDashboardUI();
          }
        }
      }
    } catch (error) {
      console.error('Error fetching dashboard data:', error);
    }
  }

  // Load dashboard function
  async function loadDashboard() {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }
      
      const token = localStorage.getItem('token');
      const response = await fetch(`${API_URL}/projects`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      
      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          projects = data.projects;
          updateDashboardUI();
          location.reload(); // Refresh the page to update statistics
        }
      }
    } catch (error) {
      console.error('Error loading dashboard:', error);
    }
  }

  // Update dashboard UI
  function updateDashboardUI() {
    console.log('Dashboard updated:', projects);
  }

  // View project details
  async function viewProject(projectId) {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }

      // Redirect to project management page
      window.location.href = `/dashboard/iu-implementing-office/modules/project-management?projectId=${projectId}`;
    } catch (error) {
      console.error('Error viewing project:', error);
    }
  }

  // Update project progress
  async function updateProgress(projectId) {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }

      // Redirect to progress timeline page
      window.location.href = `/dashboard/iu-implementing-office/modules/progress-timeline?projectId=${projectId}`;
    } catch (error) {
      console.error('Error updating progress:', error);
    }
  }

  // View project details modal function
  async function viewProjectDetails(projectId) {
    try {
      // Check session validity first
      if (!authService.redirectIfInvalidSession()) {
        return;
      }

      // Try to show modal if available, otherwise redirect
      if (window.showProjectModal) {
        window.showProjectModal(projectId);
      } else {
        // Fallback to redirect to project management page
        window.location.href = `/dashboard/iu-implementing-office/modules/project-management?projectId=${projectId}`;
      }
    } catch (error) {
      console.error('Error viewing project details:', error);
    }
  }

  // Make functions globally available
  window.loadDashboard = loadDashboard;
  window.viewProject = viewProject;
  window.updateProgress = updateProgress;
  window.viewProjectDetails = viewProjectDetails;
</script> 