---
export const prerender = false;
import Layout from '../../../../layouts/Layout.astro';
import IUImplementingOfficeLayout from '../../../../components/IUImplementingOfficeLayout.astro';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let messages = [];
let contacts = [];
let error = '';
let loading = true;

// Default placeholder data - will be replaced with real data from API
let messageStats = {
  totalMessages: 0,
  unreadMessages: 0,
  activeChats: 0,
  todayMessages: 0
};

// Sample contacts data
let sampleContacts = [
  {
    id: 1,
    name: 'Juan Dela Cruz',
    position: 'Project Manager',
    email: 'juan.delacruz@santacruz.gov.ph',
    department: 'Engineering',
    status: 'online',
    avatar: 'JD'
  },
  {
    id: 2,
    name: 'Maria Santos',
    position: 'Senior Engineer',
    email: 'maria.santos@santacruz.gov.ph',
    department: 'Engineering',
    status: 'online',
    avatar: 'MS'
  },
  {
    id: 3,
    name: 'Roberto Javier',
    position: 'Site Engineer',
    email: 'roberto.javier@santacruz.gov.ph',
    department: 'Engineering',
    status: 'offline',
    avatar: 'RJ'
  }
];

// Sample messages data
let sampleMessages = [
  {
    id: 1,
    senderId: 1,
    senderName: 'Juan Dela Cruz',
    senderAvatar: 'JD',
    content: "How's the project progress going?",
    timestamp: '2025-07-17T10:30:00Z',
    type: 'incoming',
    read: true
  },
  {
    id: 2,
    senderId: 'me',
    senderName: 'Me',
    senderAvatar: 'Me',
    content: "Good morning! The project is progressing well. We're at 75% completion.",
    timestamp: '2025-07-17T10:32:00Z',
    type: 'outgoing',
    read: true
  },
  {
    id: 3,
    senderId: 1,
    senderName: 'Juan Dela Cruz',
    senderAvatar: 'JD',
    content: "That's great! Any issues we need to address?",
    timestamp: '2025-07-17T10:33:00Z',
    type: 'incoming',
    read: false
  }
];

// Try to fetch message data from API
try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    // Fetch user data for authentication
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    // TODO: Replace with actual messages API endpoints
    // const messagesRes = await fetch(`${API_URL}/messages`, {
    //   headers: { 'Authorization': `Bearer ${token}` }
    // });
    // if (messagesRes.ok) {
    //   const data = await messagesRes.json();
    //   if (data.success) {
    //     messages = data.messages;
    //     messageStats = data.stats;
    //   }
    // }

    // const contactsRes = await fetch(`${API_URL}/contacts`, {
    //   headers: { 'Authorization': `Bearer ${token}` }
    // });
    // if (contactsRes.ok) {
    //   const data = await contactsRes.json();
    //   if (data.success) {
    //     contacts = data.contacts;
    //   }
    // }

    // For now, use sample data
    messages = sampleMessages;
    contacts = sampleContacts;
    messageStats = {
      totalMessages: 156,
      unreadMessages: 12,
      activeChats: 8,
      todayMessages: 23
    };
  }
} catch (err) {
  console.error('Error fetching message data:', err);
  error = 'Failed to fetch message data.';
  messages = sampleMessages;
  contacts = sampleContacts;
}

loading = false;
---

<Layout title="Message Center - Implementing Office Dashboard">
  <IUImplementingOfficeLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header -->
      <div class="flex items-center justify-between mb-8 animate-fade-in-up" style="animation-delay: 0.1s;">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">Message Center</h1>
          <p class="text-gray-600">Communicate with team members and stakeholders</p>
        </div>
        <div class="flex gap-3">
          <button onclick="composeMessage()" class="px-6 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
            </svg>
            Compose Message
          </button>
          <button onclick="startGroupChat()" class="px-6 py-3 bg-[#F8C734] text-white rounded-lg hover:bg-[#E6B82A] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
            </svg>
            Group Chat
          </button>
        </div>
      </div>

      <!-- Message Stats -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.2s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Total Messages</p>
              <p class="text-2xl font-bold text-gray-800">{messageStats.totalMessages}</p>
            </div>
            <div class="bg-[#F8C734]/20 p-3 rounded-xl">
              <svg class="w-8 h-8 text-[#92751F]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.3s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Unread</p>
              <p class="text-2xl font-bold text-red-600">{messageStats.unreadMessages}</p>
            </div>
            <div class="bg-red-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.4s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Active Chats</p>
              <p class="text-2xl font-bold text-blue-600">{messageStats.activeChats}</p>
            </div>
            <div class="bg-blue-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.5s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Today</p>
              <p class="text-2xl font-bold text-green-600">{messageStats.todayMessages}</p>
            </div>
            <div class="bg-green-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Message Center Layout -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 animate-fade-in-up" style="animation-delay: 0.6s;">
        <!-- Contacts List -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-semibold text-gray-800">Contacts</h2>
            <button onclick="addContact()" class="px-3 py-1 bg-[#F8C734] text-white rounded-lg hover:bg-[#E6B82A] transition-colors text-sm">
              Add Contact
            </button>
          </div>
          
          <!-- Search Contacts -->
          <div class="relative mb-4">
            <input type="text" id="contactSearch" placeholder="Search contacts..." class="w-full pl-10 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#92751F] focus:border-transparent">
            <svg class="absolute left-3 top-2.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </div>
          
          <!-- Contacts List -->
          <div class="space-y-2 max-h-96 overflow-y-auto">
            {contacts.map(contact => (
              <div class="flex items-center gap-3 p-3 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors" onclick="selectContact('{contact.id}')">
                <div class="w-10 h-10 bg-[#F8C734] rounded-full flex items-center justify-center">
                  <span class="text-white font-medium">{contact.avatar}</span>
                </div>
                <div class="flex-1">
                  <p class="text-sm font-medium text-gray-800">{contact.name}</p>
                  <p class="text-xs text-gray-600">{contact.position}</p>
                </div>
                <div class={`w-3 h-3 ${contact.status === 'online' ? 'bg-green-500' : 'bg-gray-400'} rounded-full`}></div>
              </div>
            ))}
          </div>
        </div>

        <!-- Chat Area -->
        <div class="lg:col-span-2 bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-semibold text-gray-800">Chat</h2>
            <div class="flex items-center gap-2">
              <button onclick="voiceCall()" class="px-3 py-1 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors text-sm">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
              </button>
              <button onclick="videoCall()" class="px-3 py-1 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
              </button>
            </div>
          </div>
          
          <!-- Chat Messages -->
          <div class="space-y-4 mb-4 max-h-96 overflow-y-auto" id="chatMessages">
            {messages.map(message => (
              message.type === 'incoming' ? (
                <div class="flex items-start gap-3">
                  <div class="w-8 h-8 bg-[#F8C734] rounded-full flex items-center justify-center flex-shrink-0">
                    <span class="text-white text-xs font-medium">{message.senderAvatar}</span>
                  </div>
                  <div class="flex-1">
                    <div class="bg-gray-100 rounded-lg p-3 max-w-xs">
                      <p class="text-sm text-gray-800">{message.content}</p>
                    </div>
                    <p class="text-xs text-gray-500 mt-1">{new Date(message.timestamp).toLocaleTimeString()}</p>
                  </div>
                </div>
              ) : (
                <div class="flex items-start gap-3 justify-end">
                  <div class="flex-1 text-right">
                    <div class="bg-[#F8C734] text-white rounded-lg p-3 max-w-xs ml-auto">
                      <p class="text-sm">{message.content}</p>
                    </div>
                    <p class="text-xs text-gray-500 mt-1">{new Date(message.timestamp).toLocaleTimeString()}</p>
                  </div>
                  <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0">
                    <span class="text-white text-xs font-medium">{message.senderAvatar}</span>
                  </div>
                </div>
              )
            ))}
          </div>
          
          <!-- Message Input -->
          <div class="flex items-center gap-3">
            <div class="flex-1 relative">
              <input type="text" id="messageInput" placeholder="Type your message..." class="w-full pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#92751F] focus:border-transparent">
              <button onclick="sendMessage()" class="absolute right-2 top-1/2 transform -translate-y-1/2 text-[#92751F] hover:text-[#7A6219]">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                </svg>
              </button>
            </div>
            <button onclick="attachFile()" class="px-3 py-3 bg-gray-100 text-gray-600 rounded-lg hover:bg-gray-200 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Recent Messages -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mt-8 animate-fade-in-up" style="animation-delay: 0.7s;">
        <h2 class="text-xl font-semibold text-gray-800 mb-6">Recent Messages</h2>
        <div class="space-y-4">
          <div class="flex items-center gap-4 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors cursor-pointer" onclick="openMessage(1)">
            <div class="w-12 h-12 bg-[#F8C734] rounded-full flex items-center justify-center">
              <span class="text-white font-medium">JD</span>
            </div>
            <div class="flex-1">
              <div class="flex items-center justify-between mb-1">
                <h3 class="text-sm font-medium text-gray-800">Juan Dela Cruz</h3>
                <span class="text-xs text-gray-500">2 hours ago</span>
              </div>
              <p class="text-sm text-gray-600">Project update meeting scheduled for tomorrow at 2 PM.</p>
            </div>
            <div class="w-3 h-3 bg-red-500 rounded-full"></div>
          </div>
          
          <div class="flex items-center gap-4 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors cursor-pointer" onclick="openMessage(2)">
            <div class="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center">
              <span class="text-white font-medium">MS</span>
            </div>
            <div class="flex-1">
              <div class="flex items-center justify-between mb-1">
                <h3 class="text-sm font-medium text-gray-800">Maria Santos</h3>
                <span class="text-xs text-gray-500">1 day ago</span>
              </div>
              <p class="text-sm text-gray-600">Site review documents have been uploaded to the system.</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  </IUImplementingOfficeLayout>
</Layout>

<script>
  // Authentication check for LGU-IU Implementing Office Officer
  document.addEventListener('DOMContentLoaded', function() {
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (!token || !userData) {
      window.location.href = '/login/lgu-pmt';
      return;
    }
    
    try {
      const user = JSON.parse(userData);
      
      // Check if user is LGU-IU
      if (user.role !== 'LGU-IU') {
        window.location.href = '/login/lgu-pmt';
        return;
      }
      
      console.log('Message Center module loaded for user:', user.username);
      
    } catch (error) {
      console.error('Error parsing user data:', error);
      window.location.href = '/login/lgu-pmt';
    }
  });

  // Message functions
  function composeMessage() {
    console.log('Compose message clicked');
    // TODO: Show compose message modal
    alert('Compose message functionality will be implemented soon.');
  }

  function startGroupChat() {
    console.log('Start group chat clicked');
    // TODO: Show group chat creation modal
    alert('Group chat functionality will be implemented soon.');
  }

  function addContact() {
    console.log('Add contact clicked');
    // TODO: Show add contact modal
    alert('Add contact functionality will be implemented soon.');
  }

  function selectContact(contactId) {
    console.log('Select contact clicked:', contactId);
    // TODO: Load chat with selected contact
    alert(`Loading chat with contact ID: ${contactId}`);
  }

  function sendMessage() {
    const messageInput = document.getElementById('messageInput');
    const message = messageInput.value.trim();
    if (message) {
      console.log('Send message:', message);
      // TODO: Send message to backend
      messageInput.value = '';
      alert('Message sent! (Backend integration pending)');
    }
  }

  function attachFile() {
    console.log('Attach file clicked');
    // TODO: Show file attachment dialog
    alert('File attachment functionality will be implemented soon.');
  }

  function voiceCall() {
    console.log('Voice call clicked');
    // TODO: Initiate voice call
    alert('Voice call functionality will be implemented soon.');
  }

  function videoCall() {
    console.log('Video call clicked');
    // TODO: Initiate video call
    alert('Video call functionality will be implemented soon.');
  }

  function openMessage(messageId) {
    console.log('Open message clicked:', messageId);
    // TODO: Open specific message thread
    alert(`Opening message thread ID: ${messageId}`);
  }

  // Search functionality
  document.getElementById('contactSearch')?.addEventListener('input', function(e) {
    const searchTerm = e.target.value.toLowerCase();
    console.log('Searching contacts:', searchTerm);
    // TODO: Implement contact search functionality
  });
</script>

<style>
  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
  }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 