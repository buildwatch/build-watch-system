---
export const prerender = false;
import Layout from '../../../../layouts/Layout.astro';
import IUImplementingOfficeLayout from '../../../../components/IUImplementingOfficeLayout.astro';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let activities = [];
let stats = {
  totalActivities: 0,
  todayActivities: 0,
  pendingReviews: 0,
  completedReviews: 0
};
let loading = true;
let error = '';

try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    const activitiesRes = await fetch(`${API_URL}/eiu-activities?_t=${Date.now()}`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (activitiesRes.ok) {
      const data = await activitiesRes.json();
      if (data.success) {
        activities = data.activities;
        stats = data.stats;
      }
    }
  }
} catch (err) {
  console.error('Error fetching EIU activities data:', err);
  error = 'Failed to fetch EIU activities data.';
} finally {
  loading = false;
}

function formatDate(dateString) {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
}

function getPriorityColor(priority) {
  switch (priority) {
    case 'urgent': return 'bg-red-100 text-red-700 border-red-200';
    case 'high': return 'bg-orange-100 text-orange-700 border-orange-200';
    case 'medium': return 'bg-yellow-100 text-yellow-700 border-yellow-200';
    case 'low': return 'bg-green-100 text-green-700 border-green-200';
    default: return 'bg-gray-100 text-gray-700 border-gray-200';
  }
}

function getStatusColor(status) {
  switch (status) {
    case 'completed': return 'bg-green-100 text-green-700 border-green-200';
    case 'in_progress': return 'bg-blue-100 text-blue-700 border-blue-200';
    case 'pending': return 'bg-yellow-100 text-yellow-700 border-yellow-200';
    case 'rejected': return 'bg-red-100 text-red-700 border-red-200';
    default: return 'bg-gray-100 text-gray-700 border-gray-200';
  }
}
---

<Layout title="EIU Activity Feed | Implementing Office Dashboard">
  <IUImplementingOfficeLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header Section -->
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-8 animate-fade-in-up" style="animation-delay: 0.1s;">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">EIU Activity Feed</h1>
          <p class="text-gray-600">Monitor and manage EIU partner activities for your projects</p>
        </div>
        <div class="flex items-center gap-3">
          <button onclick="refreshActivities()" class="px-6 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A641A] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Refresh
          </button>
          <button onclick="exportActivities()" class="px-6 py-3 bg-[#F8C734] text-white rounded-lg hover:bg-[#E6B82A] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            Export
          </button>
        </div>
      </div>

      <!-- Stats Cards -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.2s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Total Activities</p>
              <p class="text-2xl font-bold text-gray-800" id="totalActivities">{stats.totalActivities}</p>
            </div>
            <div class="bg-blue-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.3s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Today's Activities</p>
              <p class="text-2xl font-bold text-green-600" id="todayActivities">{stats.todayActivities}</p>
            </div>
            <div class="bg-green-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.4s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Pending Reviews</p>
              <p class="text-2xl font-bold text-yellow-600" id="pendingReviews">{stats.pendingReviews}</p>
            </div>
            <div class="bg-yellow-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.5s;">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Completed Reviews</p>
              <p class="text-2xl font-bold text-purple-600" id="completedReviews">{stats.completedReviews}</p>
            </div>
            <div class="bg-purple-100 p-3 rounded-xl">
              <svg class="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Filters and Search -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8 animate-fade-in-up" style="animation-delay: 0.6s;">
        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4">
          <div class="flex items-center gap-4">
            <select id="activityTypeFilter" class="px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#92751F] focus:border-transparent">
              <option value="">All Types</option>
              <option value="site_visit">Site Visit</option>
              <option value="document_review">Document Review</option>
              <option value="progress_report">Progress Report</option>
              <option value="issue_identified">Issue Identified</option>
              <option value="quality_check">Quality Check</option>
              <option value="safety_inspection">Safety Inspection</option>
              <option value="material_delivery">Material Delivery</option>
              <option value="construction_update">Construction Update</option>
            </select>
            <select id="statusFilter" class="px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#92751F] focus:border-transparent">
              <option value="">All Status</option>
              <option value="pending">Pending</option>
              <option value="in_progress">In Progress</option>
              <option value="completed">Completed</option>
              <option value="rejected">Rejected</option>
            </select>
            <select id="priorityFilter" class="px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#92751F] focus:border-transparent">
              <option value="">All Priorities</option>
              <option value="low">Low</option>
              <option value="medium">Medium</option>
              <option value="high">High</option>
              <option value="urgent">Urgent</option>
            </select>
          </div>
          <div class="flex items-center gap-3">
            <div class="relative">
              <input type="text" id="searchActivities" placeholder="Search activities..." class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#92751F] focus:border-transparent">
              <svg class="absolute left-3 top-2.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
            <button onclick="filterActivities()" class="px-4 py-2 bg-[#92751F] text-white rounded-lg hover:bg-[#7A641A] transition-colors flex items-center gap-2">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.207A1 1 0 013 6.5V4z"></path>
              </svg>
              Filter
            </button>
            <button onclick="clearFilters()" class="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Activities List -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 animate-fade-in-up" style="animation-delay: 0.7s;">
        {loading ? (
          <div class="flex items-center justify-center py-12">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-[#92751F]"></div>
          </div>
        ) : error ? (
          <div class="text-center py-12">
            <div class="text-red-600 mb-4">
              <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
              </svg>
            </div>
            <p class="text-gray-600">{error}</p>
            <button onclick="refreshActivities()" class="mt-4 px-6 py-2 bg-[#92751F] text-white rounded-lg hover:bg-[#7A641A] transition-colors">
              Try Again
            </button>
          </div>
        ) : activities.length === 0 ? (
          <div class="text-center py-12">
            <div class="text-gray-400 mb-4">
              <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
              </svg>
            </div>
            <p class="text-gray-600">No activities found</p>
            <p class="text-gray-500 text-sm">There are no activities matching your current filters.</p>
          </div>
        ) : (
          <div class="space-y-4" id="activitiesList">
            {activities.map((activity, index) => (
              <div class="flex items-start gap-4 p-6 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors animate-fade-in-up cursor-pointer" 
                   style={`animation-delay: ${0.8 + (index * 0.1)}s`}
                   onclick="viewActivityDetails('{activity.id}')">
                <div class="flex-shrink-0">
                  <div class="w-12 h-12 rounded-full flex items-center justify-center border-2 bg-blue-100 text-blue-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                    </svg>
                  </div>
                </div>
                <div class="flex-1 min-w-0">
                  <div class="flex items-center justify-between mb-2">
                    <h3 class="text-lg font-semibold text-gray-900">{activity.title}</h3>
                    <div class="flex items-center gap-2">
                      <span class={`px-3 py-1 rounded-full text-xs font-semibold ${getPriorityColor(activity.priority)}`}>
                        {activity.priority.charAt(0).toUpperCase() + activity.priority.slice(1)} Priority
                      </span>
                      <span class={`px-3 py-1 rounded-full text-xs font-semibold ${getStatusColor(activity.status)}`}>
                        {activity.status.replace('_', ' ').charAt(0).toUpperCase() + activity.status.replace('_', ' ').slice(1)}
                      </span>
                      <span class="text-xs text-gray-500">{formatDate(activity.createdAt)}</span>
                    </div>
                  </div>
                  <p class="text-gray-600 mb-3 leading-relaxed">{activity.description}</p>
                  <div class="flex items-center gap-4 text-sm text-gray-500">
                    <span>Project: {activity.project?.name || 'N/A'}</span>
                    <span>•</span>
                    <span>EIU Member: {activity.eiuUser?.name || 'N/A'}</span>
                    <span>•</span>
                    <span>Location: {activity.location || 'N/A'}</span>
                    <span>•</span>
                    <span>Activity Date: {formatDate(activity.activityDate)}</span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </section>
  </IUImplementingOfficeLayout>
</Layout>

<script>
  let currentActivities = [];
  let currentFilters = {};

  document.addEventListener('DOMContentLoaded', function() {
    setupEventListeners();
  });

  function setupEventListeners() {
    document.getElementById('searchActivities').addEventListener('input', function(e) {
      filterActivities();
    });
  }

  async function refreshActivities() {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        window.location.href = '/login/lgu-pmt';
        return;
      }

      const response = await fetch(`http://localhost:3000/api/eiu-activities?_t=${Date.now()}`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Cache-Control': 'no-cache'
        }
      });

      const data = await response.json();

      if (data.success) {
        location.reload();
      } else {
        console.error('Failed to refresh activities:', data.error);
        alert('Failed to refresh activities. Please try again.');
      }
    } catch (error) {
      console.error('Error refreshing activities:', error);
      alert('Failed to refresh activities. Please try again.');
    }
  }

  function filterActivities() {
    currentFilters = {
      activityType: document.getElementById('activityTypeFilter').value,
      status: document.getElementById('statusFilter').value,
      priority: document.getElementById('priorityFilter').value,
      search: document.getElementById('searchActivities').value
    };
    
    const activities = document.querySelectorAll('#activitiesList > div');
    activities.forEach(activity => {
      const title = activity.querySelector('h3').textContent.toLowerCase();
      const description = activity.querySelector('p').textContent.toLowerCase();
      const priority = activity.querySelector('.bg-red-100, .bg-orange-100, .bg-yellow-100, .bg-green-100').textContent.toLowerCase();
      const status = activity.querySelectorAll('.bg-red-100, .bg-orange-100, .bg-yellow-100, .bg-green-100')[1]?.textContent.toLowerCase() || '';
      
      let show = true;
      
      if (currentFilters.search && !title.includes(currentFilters.search.toLowerCase()) && !description.includes(currentFilters.search.toLowerCase())) {
        show = false;
      }
      
      if (currentFilters.priority && !priority.includes(currentFilters.priority)) {
        show = false;
      }
      
      if (currentFilters.status && !status.includes(currentFilters.status.replace('_', ' '))) {
        show = false;
      }
      
      activity.style.display = show ? 'flex' : 'none';
    });
  }

  function clearFilters() {
    document.getElementById('activityTypeFilter').value = '';
    document.getElementById('statusFilter').value = '';
    document.getElementById('priorityFilter').value = '';
    document.getElementById('searchActivities').value = '';
    currentFilters = {};
    
    const activities = document.querySelectorAll('#activitiesList > div');
    activities.forEach(activity => {
      activity.style.display = 'flex';
    });
  }

  function viewActivityDetails(activityId) {
    alert('Activity details view will be implemented soon!');
  }

  function exportActivities() {
    alert('Export functionality will be implemented soon!');
  }

  window.refreshActivities = refreshActivities;
  window.filterActivities = filterActivities;
  window.clearFilters = clearFilters;
  window.viewActivityDetails = viewActivityDetails;
  window.exportActivities = exportActivities;
</script> 