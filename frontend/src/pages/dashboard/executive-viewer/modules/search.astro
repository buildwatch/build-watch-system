export const prerender = false;
---
import Layout from '../../../../layouts/Layout.astro';
import ExecutiveLayout from '../../../../components/ExecutiveLayout.astro';
import executiveService from '../../../../services/executive.js';

// Search data and filters - will be populated by JavaScript
let searchResults = [];
let searchFilters = {
  type: 'all',
  department: 'all',
  status: 'all',
  dateRange: 'all'
};
---

<Layout title="Advanced Search - Executive Viewer">
  <ExecutiveLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header -->
      <div class="flex items-center justify-between mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">Advanced Search</h1>
          <p class="text-gray-600">Search and filter across all projects, reports, and documents</p>
        </div>
        <div class="flex gap-3">
          <button class="px-4 py-2 bg-blue-100 text-blue-700 rounded-lg font-semibold hover:bg-blue-200 transition-all flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            {searchResults.length} Results Found
          </button>
          <button class="px-6 py-2 bg-gradient-to-r from-[#3D50D7] to-[#2a3bb8] text-white rounded-xl font-semibold shadow-lg hover:from-[#2a3bb8] hover:to-[#3D50D7] transition-all duration-300">
            Save Search
          </button>
        </div>
      </div>

      <!-- Search Interface -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
        <div class="mb-6">
          <div class="relative">
            <input 
              type="text" 
              placeholder="Search for projects, reports, documents, or any content..." 
              class="w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D50D7] focus:border-transparent text-lg"
            />
            <svg class="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </div>
        </div>
        
        <!-- Advanced Filters -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D50D7] focus:border-transparent">
            <option value="all">All Types</option>
            <option value="project">Projects</option>
            <option value="report">Reports</option>
            <option value="document">Documents</option>
            <option value="user">Users</option>
          </select>
          
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D50D7] focus:border-transparent">
            <option value="all">All Departments</option>
            <option value="engineering">Engineering</option>
            <option value="public-works">Public Works</option>
            <option value="economic-development">Economic Development</option>
            <option value="health-services">Health Services</option>
          </select>
          
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D50D7] focus:border-transparent">
            <option value="all">All Status</option>
            <option value="ongoing">Ongoing</option>
            <option value="completed">Completed</option>
            <option value="delayed">Delayed</option>
            <option value="pending">Pending</option>
          </select>
          
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3D50D7] focus:border-transparent">
            <option value="all">All Time</option>
            <option value="today">Today</option>
            <option value="week">This Week</option>
            <option value="month">This Month</option>
            <option value="quarter">This Quarter</option>
            <option value="year">This Year</option>
          </select>
        </div>
      </div>

      <!-- Search Results -->
      <div class="space-y-4 mb-8">
        {searchResults.map(result => (
          <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300">
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="flex items-center gap-3 mb-2">
                  <h3 class="text-lg font-semibold text-gray-800">{result.title}</h3>
                  <span class={`px-2 py-1 rounded-full text-xs font-semibold ${
                    result.type === 'project' ? 'bg-blue-100 text-blue-700' :
                    result.type === 'report' ? 'bg-green-100 text-green-700' :
                    'bg-purple-100 text-purple-700'
                  }`}>
                    {result.type}
                  </span>
                  <span class={`px-2 py-1 rounded-full text-xs font-semibold ${
                    result.status === 'completed' ? 'bg-green-100 text-green-700' :
                    result.status === 'delayed' ? 'bg-red-100 text-red-700' :
                    result.status === 'ongoing' ? 'bg-blue-100 text-blue-700' :
                    'bg-gray-100 text-gray-700'
                  }`}>
                    {result.status}
                  </span>
                  <span class="px-2 py-1 bg-yellow-100 text-yellow-700 rounded-full text-xs font-semibold">
                    {result.relevance}% match
                  </span>
                </div>
                <p class="text-gray-600 mb-3">{result.description}</p>
                <div class="flex items-center gap-6 text-sm text-gray-500">
                  <span class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    {result.department}
                  </span>
                </div>
              </div>
              <div class="flex gap-2">
                <button class="px-4 py-2 bg-blue-50 text-blue-700 rounded-lg text-sm font-medium hover:bg-blue-100 transition-all">
                  View
                </button>
                <button class="px-3 py-2 bg-gray-50 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-100 transition-all">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Search Suggestions -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Popular Searches</h3>
        <div class="flex flex-wrap gap-2">
          <button class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition-all">
            delayed projects
          </button>
          <button class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition-all">
            budget reports
          </button>
          <button class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition-all">
            engineering department
          </button>
          <button class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition-all">
            monthly reports
          </button>
          <button class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition-all">
            high budget projects
          </button>
          <button class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm hover:bg-gray-200 transition-all">
            completed projects
          </button>
        </div>
      </div>

      <!-- Quick Actions -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Search Actions</h3>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <button class="flex items-center gap-3 p-4 bg-blue-50 hover:bg-blue-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            <span class="font-medium text-blue-700">Advanced Search</span>
          </button>
          <button class="flex items-center gap-3 p-4 bg-green-50 hover:bg-green-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
            </svg>
            <span class="font-medium text-green-700">Save Search</span>
          </button>
          <button class="flex items-center gap-3 p-4 bg-purple-50 hover:bg-purple-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <span class="font-medium text-purple-700">Export Results</span>
          </button>
          <button class="flex items-center gap-3 p-4 bg-orange-50 hover:bg-orange-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
            </svg>
            <span class="font-medium text-orange-700">Clear Filters</span>
          </button>
        </div>
      </div>
    </section>
  </ExecutiveLayout>
</Layout>

<script>
  import executiveService from '../../../../services/executive.js';
  
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.querySelector('input[type="text"]');
    const resultsContainer = document.querySelector('.space-y-4');
    const resultsCount = document.querySelector('.bg-blue-100');
    
    // Search functionality
    async function performSearch(query = '', filters = {}) {
      try {
        let results = [];
        
        // Search projects
        if (filters.type === 'all' || filters.type === 'project') {
          const projects = await executiveService.getAllProjects({
            search: query,
            status: filters.status !== 'all' ? filters.status : undefined,
            department: filters.department !== 'all' ? filters.department : undefined
          });
          
          results = results.concat(projects.map(project => ({
            id: project.id,
            type: 'project',
            title: project.name,
            department: project.department || 'Unknown',
            status: project.status,
            relevance: 85, // Mock relevance score
            description: project.description || 'No description available'
          })));
        }
        
        // Update results count
        if (resultsCount) {
          resultsCount.innerHTML = `
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            ${results.length} Results Found
          `;
        }
        
        // Update results display
        if (resultsContainer) {
          resultsContainer.innerHTML = results.map(result => `
            <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300">
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <div class="flex items-center gap-3 mb-2">
                    <h3 class="text-lg font-semibold text-gray-800">${result.title}</h3>
                    <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                      result.type === 'project' ? 'bg-blue-100 text-blue-700' :
                      result.type === 'report' ? 'bg-green-100 text-green-700' :
                      'bg-purple-100 text-purple-700'
                    }">
                      ${result.type}
                    </span>
                    <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                      result.status === 'completed' ? 'bg-green-100 text-green-700' :
                      result.status === 'delayed' ? 'bg-red-100 text-red-700' :
                      result.status === 'ongoing' ? 'bg-blue-100 text-blue-700' :
                      'bg-gray-100 text-gray-700'
                    }">
                      ${result.status}
                    </span>
                    <span class="px-2 py-1 bg-yellow-100 text-yellow-700 rounded-full text-xs font-semibold">
                      ${result.relevance}% match
                    </span>
                  </div>
                  <p class="text-gray-600 mb-3">${result.description}</p>
                  <div class="flex items-center gap-6 text-sm text-gray-500">
                    <span class="flex items-center gap-1">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                      </svg>
                      ${result.department}
                    </span>
                  </div>
                </div>
                <div class="flex gap-2">
                  <button class="px-4 py-2 bg-blue-50 text-blue-700 rounded-lg text-sm font-medium hover:bg-blue-100 transition-all">
                    View
                  </button>
                  <button class="px-3 py-2 bg-gray-50 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-100 transition-all">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          `).join('');
        }
        
      } catch (error) {
        console.error('Search error:', error);
      }
    }
    
    // Search input handler
    if (searchInput) {
      let searchTimeout;
      searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          const query = this.value.trim();
          if (query.length >= 2) {
            performSearch(query);
          } else if (query.length === 0) {
            performSearch();
          }
        }, 300);
      });
    }
    
    // Filter change handlers
    const filterSelects = document.querySelectorAll('select');
    filterSelects.forEach(select => {
      select.addEventListener('change', function() {
        const filters = {
          type: filterSelects[0]?.value || 'all',
          department: filterSelects[1]?.value || 'all',
          status: filterSelects[2]?.value || 'all',
          dateRange: filterSelects[3]?.value || 'all'
        };
        performSearch(searchInput?.value || '', filters);
      });
    });
    
    // Popular search buttons
    const popularSearchButtons = document.querySelectorAll('.bg-gray-100');
    popularSearchButtons.forEach(button => {
      button.addEventListener('click', function() {
        const query = this.textContent.trim();
        if (searchInput) {
          searchInput.value = query;
        }
        performSearch(query);
      });
    });
    
    // Initial search
    performSearch();
  });
</script> 