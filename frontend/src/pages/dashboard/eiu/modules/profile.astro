---
import Layout from '../../../../layouts/Layout.astro';
import EIULayout from '../../../../components/EIULayout.astro';

// Initialize with empty data - will be populated by client-side JavaScript
let userProfile = null;
let projectHistory = [];
let loading = true;
let error = '';
---

<Layout title="My Profile - EIU Personnel">
  <EIULayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header -->
      <div class="flex items-center justify-between mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">My Profile</h1>
          <p class="text-gray-600">Personal profile and account information</p>
        </div>
        <div class="flex gap-3">
          <button id="profileStatus" class="px-4 py-2 bg-blue-100 text-blue-700 rounded-lg font-semibold hover:bg-blue-200 transition-all flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            Loading...
          </button>
          <button class="px-6 py-2 bg-gradient-to-r from-[#3C9CEB] to-[#2a7bb8] text-white rounded-xl font-semibold shadow-lg hover:from-[#2a7bb8] hover:to-[#3C9CEB] transition-all duration-300">
            Edit Profile
          </button>
        </div>
      </div>

      <!-- Loading State -->
      <div id="loadingState" class="flex items-center justify-center py-12">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#3C9CEB]"></div>
        <span class="ml-3 text-gray-600">Loading profile data...</span>
      </div>

      <!-- Error State -->
      <div id="errorState" class="hidden text-center py-12">
        <p class="text-red-600 mb-4" id="errorMessage"></p>
        <button onclick="loadProfileData()" class="px-4 py-2 bg-[#3C9CEB] text-white rounded-lg hover:bg-[#2a7bb8] transition-all">
          Try Again
        </button>
      </div>

      <!-- Profile Content -->
      <div id="profileContent" class="hidden">
        <!-- Personal Information -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          <!-- Personal Details -->
          <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Personal Information</h3>
            
            <div class="space-y-4">
              <div class="grid grid-cols-3 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">First Name</label>
                  <p class="text-gray-800 font-medium" id="firstName">-</p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Middle Name</label>
                  <p class="text-gray-800" id="middleName">-</p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Last Name</label>
                  <p class="text-gray-800 font-medium" id="lastName">-</p>
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                <p class="text-gray-800 font-semibold text-lg" id="fullName">-</p>
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Username (Email)</label>
                  <p class="text-gray-800" id="username">-</p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Contact Email</label>
                  <p class="text-gray-800" id="email">-</p>
                </div>
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Birthday</label>
                  <p class="text-gray-800" id="birthdate">-</p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">User ID</label>
                  <p class="text-gray-800" id="userId">-</p>
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Address</label>
                <p class="text-gray-800" id="address">-</p>
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Contact Number</label>
                  <p class="text-gray-800" id="contactNumber">-</p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                  <span id="statusBadge" class="px-2 py-1 rounded-full text-xs font-semibold bg-gray-100 text-gray-700">
                    -
                  </span>
                </div>
              </div>
            </div>
          </div>

          <!-- Role & Assignment Information -->
          <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">Role & Assignment</h3>
            
            <div class="space-y-4">
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Group</label>
                  <span id="groupBadge" class="px-2 py-1 bg-[#3C9CEB] text-white rounded-full text-sm font-semibold">
                    -
                  </span>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Role</label>
                  <span id="roleBadge" class="px-2 py-1 bg-green-600 text-white rounded-full text-sm font-semibold">
                    -
                  </span>
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Project Code</label>
                <p class="text-gray-800 font-medium" id="projectCode">-</p>
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Department</label>
                  <p class="text-gray-800" id="department">-</p>
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Position</label>
                  <p class="text-gray-800" id="position">-</p>
                </div>
              </div>
              
              <div class="mt-6 p-4 bg-blue-50 rounded-lg">
                <h4 class="font-medium text-blue-800 mb-2">Account Information</h4>
                <div class="space-y-1 text-sm text-blue-700">
                  <p><strong>Login Username:</strong> <span id="loginUsername">-</span></p>
                  <p><strong>Last Login:</strong> <span id="lastLogin">-</span></p>
                  <p><strong>Account Created:</strong> <span id="createdAt">-</span></p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Project History -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Assigned Projects</h3>
          
          <div id="projectsTable" class="overflow-x-auto">
            <table class="min-w-full table-auto">
              <thead>
                <tr class="bg-gray-50 text-gray-700">
                  <th class="px-6 py-3 text-left font-semibold">Project Name</th>
                  <th class="px-6 py-3 text-left font-semibold">Implementing Office</th>
                  <th class="px-6 py-3 text-left font-semibold">Status</th>
                  <th class="px-6 py-3 text-left font-semibold">Budget</th>
                  <th class="px-6 py-3 text-left font-semibold">Progress</th>
                  <th class="px-6 py-3 text-left font-semibold">Actions</th>
                </tr>
              </thead>
              <tbody id="projectsTableBody">
                <!-- Projects will be populated here -->
              </tbody>
            </table>
          </div>
          
          <div id="noProjectsMessage" class="hidden text-center py-8">
            <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
            <h4 class="text-lg font-medium text-gray-800 mb-2">No Projects Assigned</h4>
            <p class="text-gray-600">You haven't been assigned to any projects yet.</p>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Profile Actions</h3>
          <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <button class="flex items-center gap-3 p-4 bg-blue-50 hover:bg-blue-100 rounded-xl transition-all duration-300">
              <svg class="w-5 h-5 text-[#3C9CEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
              </svg>
              <span class="font-medium text-[#3C9CEB]">Edit Profile</span>
            </button>
            <button class="flex items-center gap-3 p-4 bg-green-50 hover:bg-green-100 rounded-xl transition-all duration-300">
              <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
              <span class="font-medium text-green-700">Download Profile</span>
            </button>
            <button class="flex items-center gap-3 p-4 bg-purple-50 hover:bg-purple-100 rounded-xl transition-all duration-300">
              <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span class="font-medium text-purple-700">Change Password</span>
            </button>
            <button class="flex items-center gap-3 p-4 bg-orange-50 hover:bg-orange-100 rounded-xl transition-all duration-300">
              <svg class="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
              </svg>
              <span class="font-medium text-orange-700">Contact Support</span>
            </button>
          </div>
        </div>
      </div>
    </section>
  </EIULayout>
</Layout>

<script>
  // API Configuration
  const API_URL = 'http://localhost:3000/api';
  
  // Global variables
  let userProfile = null;
  let assignedProjects = [];

  // Load profile data from API
  async function loadProfileData() {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        window.location.href = '/login/lgu-pmt';
        return;
      }

      // Show loading state
      document.getElementById('loadingState').classList.remove('hidden');
      document.getElementById('errorState').classList.add('hidden');
      document.getElementById('profileContent').classList.add('hidden');

      // Fetch user profile
      const userResponse = await fetch(`${API_URL}/auth/profile`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (!userResponse.ok) {
        throw new Error('Failed to fetch user profile');
      }

      const userData = await userResponse.json();
      if (!userData.success) {
        throw new Error(userData.error || 'Failed to load user profile');
      }

      userProfile = userData.user;

      // Check if user is EIU Personnel
      if (userProfile.role !== 'EIU') {
        window.location.href = '/login/lgu-pmt';
        return;
      }

      // Fetch assigned projects
      const projectsResponse = await fetch(`${API_URL}/projects`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (projectsResponse.ok) {
        const projectsData = await projectsResponse.json();
        if (projectsData.success) {
          // Filter projects assigned to this EIU Personnel
          assignedProjects = projectsData.projects.filter(project => 
            project.eiuPersonnelId === userProfile.id
          );
        }
      }

      // Update UI with real data
      updateProfileUI();
      updateProjectsUI();

      // Hide loading, show content
      document.getElementById('loadingState').classList.add('hidden');
      document.getElementById('profileContent').classList.remove('hidden');

    } catch (error) {
      console.error('Error loading profile data:', error);
      
      // Show error state
      document.getElementById('loadingState').classList.add('hidden');
      document.getElementById('errorState').classList.remove('hidden');
      document.getElementById('errorMessage').textContent = error.message || 'Failed to load profile data';
    }
  }

  // Update profile UI with real data
  function updateProfileUI() {
    if (!userProfile) return;

    // Update personal information
    document.getElementById('firstName').textContent = userProfile.firstName || '-';
    document.getElementById('middleName').textContent = userProfile.middleName || '-';
    document.getElementById('lastName').textContent = userProfile.lastName || '-';
    document.getElementById('fullName').textContent = userProfile.fullName || userProfile.name || '-';
    document.getElementById('username').textContent = userProfile.username || '-';
    document.getElementById('email').textContent = userProfile.email || '-';
    document.getElementById('birthdate').textContent = userProfile.birthdate ? new Date(userProfile.birthdate).toLocaleDateString() : '-';
    document.getElementById('userId').textContent = userProfile.userId || '-';
    document.getElementById('address').textContent = userProfile.address || '-';
    document.getElementById('contactNumber').textContent = userProfile.contactNumber || '-';

    // Update status badge
    const statusBadge = document.getElementById('statusBadge');
    statusBadge.textContent = userProfile.status || 'Unknown';
    statusBadge.className = `px-2 py-1 rounded-full text-xs font-semibold ${
      userProfile.status === 'active' ? 'bg-green-100 text-green-700' :
      userProfile.status === 'blocked' ? 'bg-red-100 text-red-700' :
      'bg-gray-100 text-gray-700'
    }`;

    // Update role information
    document.getElementById('groupBadge').textContent = userProfile.group || 'EIU';
    document.getElementById('roleBadge').textContent = userProfile.role === 'EIU' ? 'Member' : userProfile.role || 'EIU';
    document.getElementById('projectCode').textContent = userProfile.projectCode || '-';
    document.getElementById('department').textContent = userProfile.department || 'External Implementing Unit';
    document.getElementById('position').textContent = userProfile.position || 'Member';

    // Update account information
    document.getElementById('loginUsername').textContent = userProfile.username || '-';
    document.getElementById('lastLogin').textContent = userProfile.lastLoginAt ? 
      new Date(userProfile.lastLoginAt).toLocaleString() : 'Never';
    document.getElementById('createdAt').textContent = userProfile.createdAt ? 
      new Date(userProfile.createdAt).toLocaleDateString() : '-';

    // Update profile status
    const profileStatus = document.getElementById('profileStatus');
    profileStatus.innerHTML = `
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      Profile Complete
    `;
    profileStatus.className = 'px-4 py-2 bg-green-100 text-green-700 rounded-lg font-semibold hover:bg-green-200 transition-all flex items-center gap-2';
  }

  // Update projects UI
  function updateProjectsUI() {
    const projectsTable = document.getElementById('projectsTable');
    const projectsTableBody = document.getElementById('projectsTableBody');
    const noProjectsMessage = document.getElementById('noProjectsMessage');

    if (assignedProjects.length === 0) {
      projectsTable.classList.add('hidden');
      noProjectsMessage.classList.remove('hidden');
      return;
    }

    projectsTable.classList.remove('hidden');
    noProjectsMessage.classList.add('hidden');

    // Clear existing rows
    projectsTableBody.innerHTML = '';

    // Add project rows
    assignedProjects.forEach(project => {
      const row = document.createElement('tr');
      row.className = 'border-b hover:bg-gray-50 transition-all';
      
      const statusClass = project.status === 'complete' ? 'bg-green-100 text-green-700' :
                         project.status === 'ongoing' ? 'bg-blue-100 text-blue-700' :
                         project.status === 'pending' ? 'bg-yellow-100 text-yellow-700' :
                         'bg-gray-100 text-gray-700';

      row.innerHTML = `
        <td class="px-6 py-4 font-medium text-gray-800">${project.name}</td>
        <td class="px-6 py-4">${project.implementingOffice?.name || 'Unknown'}</td>
        <td class="px-6 py-4">
          <span class="px-2 py-1 rounded-full text-xs font-semibold ${statusClass}">
            ${project.status}
          </span>
        </td>
        <td class="px-6 py-4 text-gray-800">₱${project.totalBudget?.toLocaleString() || '0'}</td>
        <td class="px-6 py-4">
          <div class="flex items-center gap-2">
            <div class="w-16 bg-gray-200 rounded-full h-2">
              <div class="bg-[#3C9CEB] h-2 rounded-full" style="width: ${project.overallProgress || 0}%"></div>
            </div>
            <span class="text-sm text-gray-600">${project.overallProgress || 0}%</span>
          </div>
        </td>
        <td class="px-6 py-4">
          <button onclick="viewProjectDetails('${project.id}')" class="px-3 py-1 bg-[#3C9CEB] text-white rounded-lg text-sm font-medium hover:bg-[#2a7bb8] transition-all">
            View Details
          </button>
        </td>
      `;
      
      projectsTableBody.appendChild(row);
    });
  }

  // View project details
  function viewProjectDetails(projectId) {
    // TODO: Implement project details view
    console.log('View project details:', projectId);
    alert('Project details view will be implemented soon.');
  }

  // Authentication check and initialization
  document.addEventListener('DOMContentLoaded', function() {
    const token = localStorage.getItem('token');
    
    if (!token) {
      window.location.href = '/login/lgu-pmt';
      return;
    }
    
    // Load profile data
    loadProfileData();
  });

  // Make functions globally available
  window.loadProfileData = loadProfileData;
  window.viewProjectDetails = viewProjectDetails;
</script> 