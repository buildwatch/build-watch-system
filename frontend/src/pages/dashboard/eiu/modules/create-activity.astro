---
export const prerender = false;
import Layout from '../../../../layouts/Layout.astro';
import EIULayout from '../../../../components/EIULayout.astro';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let projects = [];
let loading = true;
let error = '';

// Try to fetch user data and projects
try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    // Fetch user data for authentication
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    // Fetch projects assigned to this EIU user
    const timestamp = new Date().getTime();
    const projectsRes = await fetch(`${API_URL}/projects?_t=${timestamp}`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (projectsRes.ok) {
      const data = await projectsRes.json();
      if (data.success) {
        // Filter projects assigned to this EIU user
        projects = data.projects.filter(project => 
          project.eiuPersonnelId === userData.id || 
          project.eiuPartner === userData.id
        );
      }
    }
  }
} catch (err) {
  console.error('Error fetching data:', err);
  error = 'Failed to fetch data.';
}

loading = false;
---

<Layout title="Create Activity - EIU Dashboard">
  <EIULayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header -->
      <div class="flex items-center justify-between mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">Create Activity</h1>
          <p class="text-gray-600">Submit a new activity report for Implementing Office review</p>
        </div>
      </div>

      {loading ? (
        <div class="flex items-center justify-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#EB3C3C]"></div>
          <span class="ml-3 text-gray-600">Loading...</span>
        </div>
      ) : error ? (
        <div class="text-center py-12">
          <p class="text-red-600 mb-4">{error}</p>
          <button onclick="location.reload()" class="px-4 py-2 bg-[#EB3C3C] text-white rounded-lg hover:bg-[#D63333] transition-all">
            Try Again
          </button>
        </div>
      ) : projects.length === 0 ? (
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
          </svg>
          <h3 class="text-xl font-semibold text-gray-800 mb-2">No Projects Assigned</h3>
          <p class="text-gray-600 mb-6">You don't have any projects assigned to create activities for.</p>
        </div>
      ) : (
        <!-- Activity Creation Form -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <form id="createActivityForm" class="space-y-6">
            <!-- Project Selection -->
            <div>
              <label for="projectId" class="block text-sm font-medium text-gray-700 mb-2">
                Project *
              </label>
              <select id="projectId" name="projectId" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent">
                <option value="">Select a project</option>
                {projects.map(project => (
                  <option value={project.id}>{project.name} ({project.projectCode})</option>
                ))}
              </select>
            </div>

            <!-- Activity Type -->
            <div>
              <label for="activityType" class="block text-sm font-medium text-gray-700 mb-2">
                Activity Type *
              </label>
              <select id="activityType" name="activityType" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent">
                <option value="">Select activity type</option>
                <option value="site_visit">Site Visit</option>
                <option value="document_review">Document Review</option>
                <option value="progress_report">Progress Report</option>
                <option value="issue_identified">Issue Identified</option>
                <option value="quality_check">Quality Check</option>
                <option value="safety_inspection">Safety Inspection</option>
                <option value="material_delivery">Material Delivery</option>
                <option value="construction_update">Construction Update</option>
              </select>
            </div>

            <!-- Title -->
            <div>
              <label for="title" class="block text-sm font-medium text-gray-700 mb-2">
                Activity Title *
              </label>
              <input type="text" id="title" name="title" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent" placeholder="Enter activity title">
            </div>

            <!-- Description -->
            <div>
              <label for="description" class="block text-sm font-medium text-gray-700 mb-2">
                Description *
              </label>
              <textarea id="description" name="description" required rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent" placeholder="Describe the activity in detail"></textarea>
            </div>

            <!-- Priority -->
            <div>
              <label for="priority" class="block text-sm font-medium text-gray-700 mb-2">
                Priority *
              </label>
              <select id="priority" name="priority" required class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent">
                <option value="low">Low</option>
                <option value="medium" selected>Medium</option>
                <option value="high">High</option>
                <option value="urgent">Urgent</option>
              </select>
            </div>

            <!-- Location -->
            <div>
              <label for="location" class="block text-sm font-medium text-gray-700 mb-2">
                Location
              </label>
              <input type="text" id="location" name="location" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent" placeholder="Enter activity location">
            </div>

            <!-- Findings -->
            <div>
              <label for="findings" class="block text-sm font-medium text-gray-700 mb-2">
                Findings/Observations
              </label>
              <textarea id="findings" name="findings" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent" placeholder="Enter any findings or observations"></textarea>
            </div>

            <!-- Recommendations -->
            <div>
              <label for="recommendations" class="block text-sm font-medium text-gray-700 mb-2">
                Recommendations
              </label>
              <textarea id="recommendations" name="recommendations" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent" placeholder="Enter any recommendations or next steps"></textarea>
            </div>

            <!-- File Attachments -->
            <div>
              <label for="attachments" class="block text-sm font-medium text-gray-700 mb-2">
                Attachments
              </label>
              <input type="file" id="attachments" name="attachments" multiple class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#EB3C3C] focus:border-transparent" accept=".pdf,.doc,.docx,.jpg,.jpeg,.png,.gif">
              <p class="text-sm text-gray-500 mt-1">Supported formats: PDF, DOC, DOCX, JPG, PNG, GIF (Max 5 files, 10MB each)</p>
            </div>

            <!-- Submit Button -->
            <div class="flex justify-end gap-4">
              <button type="button" onclick="window.history.back()" class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-all">
                Cancel
              </button>
              <button type="submit" class="px-6 py-2 bg-[#EB3C3C] text-white rounded-lg hover:bg-[#D63333] transition-all flex items-center gap-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Create Activity
              </button>
            </div>
          </form>
        </div>
      )}

      <!-- My Activities Section -->
      <div class="mt-8 bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-xl font-semibold text-gray-800">My Activities</h2>
          <button onclick="refreshMyActivities()" class="px-4 py-2 bg-[#3C9CEB] text-white rounded-lg hover:bg-[#2a7bb8] transition-all flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Refresh
          </button>
        </div>

        <div id="myActivitiesContainer">
          <div class="flex items-center justify-center py-12">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#3C9CEB]"></div>
            <span class="ml-3 text-gray-600">Loading your activities...</span>
          </div>
        </div>
      </div>
    </section>
  </EIULayout>
</Layout>

<script>
  // Authentication check for EIU
  document.addEventListener('DOMContentLoaded', function() {
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (!token || !userData) {
      window.location.href = '/login/lgu-pmt';
      return;
    }
    
    try {
      const user = JSON.parse(userData);
      
      // Check if user is EIU
      if (user.role !== 'EIU') {
        window.location.href = '/login/lgu-pmt';
        return;
      }
      
      console.log('Create Activity module loaded for EIU user:', user.username);
      
    } catch (error) {
      console.error('Error parsing user data:', error);
      window.location.href = '/login/lgu-pmt';
    }
  });

  // Handle form submission
  document.getElementById('createActivityForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const submitButton = this.querySelector('button[type="submit"]');
    const originalText = submitButton.innerHTML;
    
    try {
      // Disable submit button
      submitButton.disabled = true;
      submitButton.innerHTML = `
        <svg class="animate-spin w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
        </svg>
        Creating...
      `;
      
      const token = localStorage.getItem('token');
      
      // Prepare activity data
      const activityData = {
        projectId: formData.get('projectId'),
        activityType: formData.get('activityType'),
        title: formData.get('title'),
        description: formData.get('description'),
        priority: formData.get('priority'),
        location: formData.get('location') || null,
        findings: formData.get('findings') || null,
        recommendations: formData.get('recommendations') || null
      };
      
      // Handle file attachments
      const files = formData.getAll('attachments');
      if (files.length > 0) {
        activityData.attachments = [];
        for (let file of files) {
          if (file.size > 0) {
            // In a real implementation, you would upload files to a file server
            // For now, we'll just store file names
            activityData.attachments.push({
              name: file.name,
              size: file.size,
              type: file.type
            });
          }
        }
      }
      
      const response = await fetch('http://localhost:3000/api/eiu-activities', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify(activityData)
      });
      
      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          alert('Activity created successfully!');
          // Refresh the form and activities list
          document.getElementById('createActivityForm').reset();
          loadMyActivities();
        } else {
          alert('Failed to create activity: ' + (data.error || 'Unknown error'));
        }
      } else {
        const errorData = await response.json();
        alert('Failed to create activity: ' + (errorData.error || 'Server error'));
      }
      
    } catch (error) {
      console.error('Error creating activity:', error);
      alert('Error creating activity. Please try again.');
    } finally {
      // Re-enable submit button
      submitButton.disabled = false;
      submitButton.innerHTML = originalText;
    }
  });

  // Load user's activities on page load
  document.addEventListener('DOMContentLoaded', function() {
    loadMyActivities();
  });

  async function loadMyActivities() {
    try {
      const token = localStorage.getItem('token');
      const response = await fetch('http://localhost:3000/api/eiu-activities/my-activities', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          displayMyActivities(data.activities);
        } else {
          showMyActivitiesError('Failed to load activities');
        }
      } else {
        showMyActivitiesError('Failed to load activities');
      }
    } catch (error) {
      console.error('Error loading activities:', error);
      showMyActivitiesError('Error loading activities');
    }
  }

  function displayMyActivities(activities) {
    const container = document.getElementById('myActivitiesContainer');
    
    if (activities.length === 0) {
      container.innerHTML = `
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
          </svg>
          <p class="text-gray-600">No activities found. Create your first activity above!</p>
        </div>
      `;
      return;
    }

    const activitiesHtml = activities.map(activity => `
      <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-all cursor-pointer" onclick="viewMyActivityDetails('${activity.id}')">
        <div class="flex items-start gap-4">
          <div class="flex-shrink-0">
            <div class="w-12 h-12 rounded-full flex items-center justify-center ${
              (activity.activityType || '') === 'site_visit' ? 'bg-blue-100' :
              (activity.activityType || '') === 'document_review' ? 'bg-green-100' :
              (activity.activityType || '') === 'progress_report' ? 'bg-purple-100' :
              (activity.activityType || '') === 'issue_identified' ? 'bg-red-100' :
              (activity.activityType || '') === 'quality_check' ? 'bg-orange-100' :
              (activity.activityType || '') === 'safety_inspection' ? 'bg-indigo-100' :
              'bg-gray-100'
            }">
              <svg class="w-6 h-6 ${
                (activity.activityType || '') === 'site_visit' ? 'text-blue-600' :
                (activity.activityType || '') === 'document_review' ? 'text-green-600' :
                (activity.activityType || '') === 'progress_report' ? 'text-purple-600' :
                (activity.activityType || '') === 'issue_identified' ? 'text-red-600' :
                (activity.activityType || '') === 'quality_check' ? 'text-orange-600' :
                (activity.activityType || '') === 'safety_inspection' ? 'text-indigo-600' :
                'text-gray-600'
              }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
              </svg>
            </div>
          </div>
          <div class="flex-1">
            <div class="flex items-center justify-between mb-2">
              <h3 class="text-lg font-semibold text-gray-800">${activity.title}</h3>
              <div class="flex items-center gap-2">
                <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                  (activity.priority || '') === 'high' ? 'bg-red-100 text-red-700' :
                  (activity.priority || '') === 'medium' ? 'bg-yellow-100 text-yellow-700' :
                  (activity.priority || '') === 'urgent' ? 'bg-red-100 text-red-700' :
                  'bg-green-100 text-green-700'
                }">${(activity.priority || 'low').toUpperCase()}</span>
                <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                  (activity.reviewStatus || '') === 'approved' ? 'bg-green-100 text-green-700' :
                  (activity.reviewStatus || '') === 'rejected' ? 'bg-red-100 text-red-700' :
                  (activity.reviewStatus || '') === 'requires_revision' ? 'bg-orange-100 text-orange-700' :
                  'bg-yellow-100 text-yellow-700'
                }">${(activity.reviewStatus || 'pending_review').replace(/_/g, ' ').toUpperCase()}</span>
              </div>
            </div>
            <p class="text-gray-600 text-sm mb-2">${activity.description}</p>
            <div class="flex items-center gap-4 text-xs text-gray-500">
              <span>${activity.project?.name || 'N/A'}</span>
              <span>${activity.location || 'N/A'}</span>
              <span>${new Date(activity.activityDate || new Date()).toLocaleDateString()}</span>
              ${activity.attachments && activity.attachments.length > 0 ? `<span>📎 ${activity.attachments.length} attachment(s)</span>` : ''}
            </div>
          </div>
        </div>
      </div>
    `).join('');

    container.innerHTML = `
      <div class="space-y-4">
        ${activitiesHtml}
      </div>
    `;
  }

  function showMyActivitiesError(message) {
    const container = document.getElementById('myActivitiesContainer');
    container.innerHTML = `
      <div class="text-center py-12">
        <p class="text-red-600 mb-4">${message}</p>
        <button onclick="loadMyActivities()" class="px-4 py-2 bg-[#3C9CEB] text-white rounded-lg hover:bg-[#2a7bb8] transition-all">
          Try Again
        </button>
      </div>
    `;
  }

  async function refreshMyActivities() {
    const container = document.getElementById('myActivitiesContainer');
    container.innerHTML = `
      <div class="flex items-center justify-center py-12">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#3C9CEB]"></div>
        <span class="ml-3 text-gray-600">Refreshing activities...</span>
      </div>
    `;
    await loadMyActivities();
  }

  async function viewMyActivityDetails(activityId) {
    try {
      const token = localStorage.getItem('token');
      const response = await fetch(`http://localhost:3000/api/eiu-activities/${activityId}`, {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          showMyActivityDetailsModal(data.activity);
        } else {
          alert('Failed to load activity details.');
        }
      } else {
        alert('Failed to load activity details.');
      }
    } catch (error) {
      console.error('Error loading activity details:', error);
      alert('Error loading activity details.');
    }
  }

  function showMyActivityDetailsModal(activity) {
    // Create and show a modal with activity details (similar to IO version but for EIU)
    const modal = document.createElement('div');
    modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
    
    // Generate attachments HTML
    let attachmentsHtml = '';
    if (activity.attachments && activity.attachments.length > 0) {
      attachmentsHtml = `
        <div class="mt-4">
          <h4 class="font-semibold mb-2">Attachments (${activity.attachments.length})</h4>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
            ${activity.attachments.map(attachment => {
              const isImage = attachment.type && attachment.type.startsWith('image/');
              const isVideo = attachment.type && attachment.type.startsWith('video/');
              
              if (isImage) {
                return `
                  <div class="border rounded-lg p-3">
                    <h5 class="font-medium text-sm mb-2">${attachment.name}</h5>
                    <img src="data:${attachment.type};base64,${attachment.data || ''}" 
                         alt="${attachment.name}" 
                         class="w-full h-32 object-cover rounded cursor-pointer hover:opacity-75 transition-opacity"
                         onclick="openImageViewer('${attachment.name}', 'data:${attachment.type};base64,${attachment.data || ''}')">
                  </div>
                `;
              } else if (isVideo) {
                return `
                  <div class="border rounded-lg p-3">
                    <h5 class="font-medium text-sm mb-2">${attachment.name}</h5>
                    <video controls class="w-full h-32 object-cover rounded">
                      <source src="data:${attachment.type};base64,${attachment.data || ''}" type="${attachment.type}">
                      Your browser does not support the video tag.
                    </video>
                  </div>
                `;
              } else {
                return `
                  <div class="border rounded-lg p-3">
                    <h5 class="font-medium text-sm mb-2">${attachment.name}</h5>
                    <div class="flex items-center gap-2">
                      <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                      </svg>
                      <span class="text-sm text-gray-600">${(attachment.size / 1024 / 1024).toFixed(2)} MB</span>
                    </div>
                  </div>
                `;
              }
            }).join('')}
          </div>
        </div>
      `;
    }
    
    modal.innerHTML = `
      <div class="bg-white rounded-lg p-6 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-semibold">My Activity Details</h2>
          <button onclick="this.closest('.fixed').remove()" class="text-gray-500 hover:text-gray-700">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <div class="space-y-4">
          <div class="border-b pb-4">
            <h3 class="text-xl font-semibold text-gray-800 mb-2">${activity.title}</h3>
            <p class="text-gray-600">${activity.description}</p>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div class="bg-gray-50 p-3 rounded">
              <strong>Activity Type:</strong> ${(activity.activityType || '').replace(/_/g, ' ').toUpperCase()}
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Status:</strong> 
              <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                (activity.status || '') === 'completed' ? 'bg-green-100 text-green-700' :
                (activity.status || '') === 'pending' ? 'bg-yellow-100 text-yellow-700' :
                (activity.status || '') === 'in_progress' ? 'bg-blue-100 text-blue-700' :
                'bg-gray-100 text-gray-700'
              }">${(activity.status || '').replace(/_/g, ' ').toUpperCase()}</span>
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Priority:</strong> 
              <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                (activity.priority || '') === 'high' ? 'bg-red-100 text-red-700' :
                (activity.priority || '') === 'medium' ? 'bg-yellow-100 text-yellow-700' :
                (activity.priority || '') === 'urgent' ? 'bg-red-100 text-red-700' :
                'bg-green-100 text-green-700'
              }">${(activity.priority || 'low').toUpperCase()}</span>
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Review Status:</strong> 
              <span class="px-2 py-1 rounded-full text-xs font-semibold ${
                (activity.reviewStatus || '') === 'approved' ? 'bg-green-100 text-green-700' :
                (activity.reviewStatus || '') === 'rejected' ? 'bg-red-100 text-red-700' :
                (activity.reviewStatus || '') === 'requires_revision' ? 'bg-orange-100 text-orange-700' :
                'bg-yellow-100 text-yellow-700'
              }">${(activity.reviewStatus || 'pending_review').replace(/_/g, ' ').toUpperCase()}</span>
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Project:</strong> ${activity.project?.name || 'N/A'}
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Location:</strong> ${activity.location || 'N/A'}
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Activity Date:</strong> ${new Date(activity.activityDate || new Date()).toLocaleString()}
            </div>
            <div class="bg-gray-50 p-3 rounded">
              <strong>Created:</strong> ${new Date(activity.createdAt || new Date()).toLocaleString()}
            </div>
          </div>
          
          ${activity.findings ? `
            <div class="bg-blue-50 p-4 rounded-lg">
              <h4 class="font-semibold text-blue-800 mb-2">Findings/Observations</h4>
              <p class="text-blue-700">${activity.findings}</p>
            </div>
          ` : ''}
          
          ${activity.recommendations ? `
            <div class="bg-green-50 p-4 rounded-lg">
              <h4 class="font-semibold text-green-800 mb-2">Recommendations</h4>
              <p class="text-green-700">${activity.recommendations}</p>
            </div>
          ` : ''}
          
          ${activity.reviewComments ? `
            <div class="bg-yellow-50 p-4 rounded-lg">
              <h4 class="font-semibold text-yellow-800 mb-2">Review Comments</h4>
              <p class="text-yellow-700">${activity.reviewComments}</p>
            </div>
          ` : ''}
          
          ${attachmentsHtml}
        </div>
      </div>
    `;
    document.body.appendChild(modal);
  }

  function openImageViewer(filename, imageSrc) {
    const viewer = document.createElement('div');
    viewer.className = 'fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-[60]';
    viewer.innerHTML = `
      <div class="relative max-w-4xl max-h-[90vh]">
        <button onclick="this.closest('.fixed').remove()" class="absolute top-4 right-4 text-white hover:text-gray-300 z-10">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        <div class="text-white text-center mb-4">
          <h3 class="text-lg font-semibold">${filename}</h3>
        </div>
        <img src="${imageSrc}" alt="${filename}" class="max-w-full max-h-[80vh] object-contain">
      </div>
    `;
    document.body.appendChild(viewer);
  }
</script> 