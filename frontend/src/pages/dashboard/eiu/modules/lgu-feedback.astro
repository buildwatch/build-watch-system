export const prerender = false;
---
import Layout from '../../../../layouts/Layout.astro';
import EIULayout from '../../../../components/EIULayout.astro';

// LGU Feedback data
let feedbackMessages = [
  {
    id: 1,
    type: 'clarification',
    title: 'Request for Additional Documentation',
    project: 'Santa Cruz Municipal Hall Renovation',
    from: 'LGU-PMT MPMEC',
    date: '2025-01-30',
    status: 'pending',
    priority: 'high',
    content: 'Please provide additional documentation for the structural modifications in Section A. We need detailed engineering drawings and material specifications.',
    attachments: ['Request_Details.pdf']
  },
  {
    id: 2,
    type: 'approval',
    title: 'Progress Report Approved',
    project: 'Barangay Road Network Improvement',
    from: 'LGU-PMT Secretariat',
    date: '2025-01-28',
    status: 'completed',
    priority: 'medium',
    content: 'Your January progress report has been reviewed and approved. Please continue with the scheduled work as planned.',
    attachments: []
  },
  {
    id: 3,
    type: 'update',
    title: 'Schedule Adjustment Request',
    project: 'Public Market Modernization',
    from: 'LGU-IU Administrator',
    date: '2025-01-25',
    status: 'pending',
    priority: 'high',
    content: 'Due to upcoming local events, we request a temporary adjustment to the construction schedule. Please provide alternative timeline options.',
    attachments: ['Event_Schedule.pdf', 'Impact_Analysis.xlsx']
  }
];

let feedbackTypes = [
  { type: 'clarification', label: 'Clarification Requests', count: 1, color: 'blue' },
  { type: 'approval', label: 'Approvals', count: 1, color: 'green' },
  { type: 'update', label: 'Update Requests', count: 1, color: 'orange' }
];
---

<Layout title="LGU Feedback - EIU Personnel">
  <EIULayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header -->
      <div class="flex items-center justify-between mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">LGU Feedback & Communications</h1>
          <p class="text-gray-600">View and respond to messages from LGU-PMT and Secretariat</p>
        </div>
        <div class="flex gap-3">
          <button class="px-4 py-2 bg-red-100 text-red-700 rounded-lg font-semibold hover:bg-red-200 transition-all flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
            {feedbackMessages.filter(f => f.status === 'pending').length} Pending
          </button>
          <button class="px-6 py-2 bg-gradient-to-r from-[#3C9CEB] to-[#2a7bb8] text-white rounded-xl font-semibold shadow-lg hover:from-[#2a7bb8] hover:to-[#3C9CEB] transition-all duration-300">
            Send Response
          </button>
        </div>
      </div>

      <!-- Feedback Type Overview -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Message Categories</h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          {feedbackTypes.map(category => (
            <div class="text-center p-4 bg-gray-50 rounded-lg">
              <div class={`w-12 h-12 bg-${category.color}-100 rounded-full flex items-center justify-center mx-auto mb-3`}>
                <svg class={`w-6 h-6 text-${category.color}-600`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
              </div>
              <h4 class="font-medium text-gray-800 mb-1">{category.label}</h4>
              <p class="text-2xl font-bold text-[#3C9CEB]">{category.count}</p>
              <p class="text-sm text-gray-600">Messages</p>
            </div>
          ))}
        </div>
      </div>

      <!-- Filters -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6 mb-8">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3C9CEB] focus:border-transparent">
            <option value="all">All Types</option>
            <option value="clarification">Clarification</option>
            <option value="approval">Approval</option>
            <option value="update">Update Request</option>
          </select>
          
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3C9CEB] focus:border-transparent">
            <option value="all">All Status</option>
            <option value="pending">Pending</option>
            <option value="completed">Completed</option>
          </select>
          
          <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3C9CEB] focus:border-transparent">
            <option value="all">All Priorities</option>
            <option value="high">High Priority</option>
            <option value="medium">Medium Priority</option>
            <option value="low">Low Priority</option>
          </select>
          
          <input type="text" placeholder="Search messages..." class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#3C9CEB] focus:border-transparent">
        </div>
      </div>

      <!-- Feedback Messages -->
      <div class="space-y-4 mb-8">
        {feedbackMessages.map(message => (
          <div class={`bg-white rounded-2xl shadow-lg border border-gray-100 p-6 hover:shadow-xl transition-all duration-300 ${
            message.status === 'pending' ? 'border-l-4 border-l-[#3C9CEB]' : ''
          }`}>
            <div class="flex items-start justify-between">
              <div class="flex-1">
                <div class="flex items-center gap-3 mb-2">
                  <h3 class="text-lg font-semibold text-gray-800">{message.title}</h3>
                  {message.status === 'pending' && (
                    <span class="w-2 h-2 bg-[#3C9CEB] rounded-full"></span>
                  )}
                  <span class={`px-2 py-1 rounded-full text-xs font-semibold ${
                    message.type === 'clarification' ? 'bg-blue-100 text-blue-700' :
                    message.type === 'approval' ? 'bg-green-100 text-green-700' :
                    'bg-orange-100 text-orange-700'
                  }`}>
                    {message.type}
                  </span>
                  <span class={`px-2 py-1 rounded-full text-xs font-semibold ${
                    message.priority === 'high' ? 'bg-red-100 text-red-700' :
                    message.priority === 'medium' ? 'bg-yellow-100 text-yellow-700' :
                    'bg-green-100 text-green-700'
                  }`}>
                    {message.priority} priority
                  </span>
                  <span class={`px-2 py-1 rounded-full text-xs font-semibold ${
                    message.status === 'pending' ? 'bg-yellow-100 text-yellow-700' :
                    'bg-green-100 text-green-700'
                  }`}>
                    {message.status}
                  </span>
                </div>
                <p class="text-gray-600 mb-3">{message.content}</p>
                <div class="flex items-center gap-6 text-sm text-gray-500 mb-3">
                  <span class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                    {message.from}
                  </span>
                  <span class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    </svg>
                    {message.project}
                  </span>
                  <span class="flex items-center gap-1">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                    {message.date}
                  </span>
                </div>
                
                {message.attachments.length > 0 && (
                  <div class="mb-3">
                    <p class="text-sm font-medium text-gray-700 mb-2">Attachments:</p>
                    <div class="flex gap-2">
                      {message.attachments.map(attachment => (
                        <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs flex items-center gap-1">
                          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                          </svg>
                          {attachment}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
              <div class="flex gap-2">
                <button class="px-4 py-2 bg-[#3C9CEB] text-white rounded-lg text-sm font-medium hover:bg-[#2a7bb8] transition-all">
                  Respond
                </button>
                <button class="px-3 py-2 bg-gray-50 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-100 transition-all">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Quick Actions -->
      <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Communication Actions</h3>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <button class="flex items-center gap-3 p-4 bg-blue-50 hover:bg-blue-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-[#3C9CEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
            </svg>
            <span class="font-medium text-[#3C9CEB]">Send Response</span>
          </button>
          <button class="flex items-center gap-3 p-4 bg-green-50 hover:bg-green-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <span class="font-medium text-green-700">Mark as Read</span>
          </button>
          <button class="flex items-center gap-3 p-4 bg-purple-50 hover:bg-purple-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <span class="font-medium text-purple-700">Export Messages</span>
          </button>
          <button class="flex items-center gap-3 p-4 bg-orange-50 hover:bg-orange-100 rounded-xl transition-all duration-300">
            <svg class="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
            </svg>
            <span class="font-medium text-orange-700">View History</span>
          </button>
        </div>
      </div>
    </section>
  </EIULayout>
</Layout>

<script>
  // Authentication check for EIU Personnel
  document.addEventListener('DOMContentLoaded', function() {
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (!token || !userData) {
      window.location.href = '/login/lgu-pmt';
      return;
    }
    
    try {
      const user = JSON.parse(userData);
      
      // Check if user is EIU Personnel
      if (user.role !== 'EIU') {
        window.location.href = '/login/lgu-pmt';
        return;
      }
      
      console.log('EIU LGU Feedback module loaded for user:', user.username);
      
    } catch (error) {
      console.error('Error parsing user data:', error);
      window.location.href = '/login/lgu-pmt';
    }
  });
</script> 