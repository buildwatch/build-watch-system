---
export const prerender = false;
import Layout from '../../../layouts/Layout.astro';
import SecretariatLayout from '../../../components/SecretariatLayout.astro';

const API_URL = 'http://localhost:3000/api';
let userData = null;
let projects = [];
let stats = {
  totalProjects: 0,
  ongoingProjects: 0,
  completedProjects: 0,
  pendingProjects: 0,
  averageProgress: 0,
  totalBudget: '₱0',
  utilizedBudget: '₱0',
  pendingApprovals: 0
};
let loading = true;
let error = '';

// Try to fetch dashboard data from API
try {
  const token = Astro.cookies.get('token')?.value || '';
  if (token) {
    // Fetch user data for authentication
    const userRes = await fetch(`${API_URL}/auth/profile`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (userRes.ok) {
      const userDataResponse = await userRes.json();
      if (userDataResponse.success && userDataResponse.user) {
        userData = userDataResponse.user;
      }
    }

    // Fetch projects submitted to Secretariat for review
    const projectsRes = await fetch(`${API_URL}/projects?submittedToSecretariat=true`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    if (projectsRes.ok) {
      const data = await projectsRes.json();
      if (data.success) {
        projects = data.projects;
        
        // Calculate statistics for submitted projects only
        stats.totalProjects = projects.length;
        stats.ongoingProjects = projects.filter(p => p.status === 'ongoing').length;
        stats.completedProjects = projects.filter(p => p.status === 'complete').length;
        stats.pendingProjects = projects.filter(p => p.status === 'pending').length;
        stats.pendingApprovals = projects.filter(p => p.workflowStatus === 'submitted').length;
        
        // Fix budget calculation - parse as numbers instead of concatenating strings
        const totalBudget = projects.reduce((sum, p) => {
          const budget = parseFloat(p.totalBudget) || 0;
          return sum + budget;
        }, 0);
        stats.totalBudget = `₱${totalBudget.toLocaleString()}`;
        
        const utilizedBudget = projects.reduce((sum, p) => {
          const budget = parseFloat(p.totalBudget) || 0;
          const progress = parseFloat(p.progress?.overallProgress || p.overallProgress || 0);
          return sum + (budget * progress / 100);
        }, 0);
        stats.utilizedBudget = `₱${utilizedBudget.toLocaleString()}`;
        
        const avgProgress = projects.length > 0 
          ? projects.reduce((sum, p) => sum + (parseFloat(p.progress?.overallProgress || p.overallProgress || 0)), 0) / projects.length
          : 0;
        stats.averageProgress = Math.round(avgProgress);
      }
    }
  }
} catch (err) {
  console.error('Error fetching dashboard data:', err);
  error = 'Failed to fetch dashboard data.';
}

loading = false;
---

<Layout title="Secretariat Dashboard | Build Watch">
  <SecretariatLayout>
    <section class="p-8 bg-gradient-to-br from-gray-50 to-white min-h-screen">
      <!-- Header Section -->
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-800 mb-2">Secretariat Dashboard</h1>
          <p class="text-gray-600">MPMEC Secretariat - Project Review and Approval Overview</p>
        </div>
        <div class="flex items-center gap-3">
          <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec-secretariat/modules/submissions'" class="px-6 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            Review Submissions
          </button>
        </div>
      </div>

      <!-- Statistics Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Total Projects</p>
              <p class="text-2xl font-bold text-gray-800">{stats.totalProjects}</p>
            </div>
            <div class="p-3 bg-blue-100 rounded-full">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Pending Approval</p>
              <p class="text-2xl font-bold text-yellow-600">{stats.pendingApprovals}</p>
            </div>
            <div class="p-3 bg-yellow-100 rounded-full">
              <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Approved</p>
              <p class="text-2xl font-bold text-green-600">{stats.completedProjects}</p>
            </div>
            <div class="p-3 bg-green-100 rounded-full">
              <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between">
            <div>
              <p class="text-sm font-medium text-gray-600">Average Progress</p>
              <p class="text-2xl font-bold text-purple-600">{stats.averageProgress}%</p>
            </div>
            <div class="p-3 bg-purple-100 rounded-full">
              <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Budget Overview -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Budget Overview</h3>
          <div class="space-y-4">
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-600">Total Budget</span>
              <span class="font-semibold text-gray-800">{stats.totalBudget}</span>
            </div>
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-600">Utilized Budget</span>
              <span class="font-semibold text-gray-800">{stats.utilizedBudget}</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div class="bg-[#92751F] h-2 rounded-full" style={`width: ${stats.averageProgress}%`}></div>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Quick Actions</h3>
          <div class="space-y-3">
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec-secretariat/modules/submissions'" class="w-full px-4 py-3 bg-[#92751F] text-white rounded-lg hover:bg-[#7A6219] transition-colors text-left flex items-center gap-3">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
              Review Submissions
            </button>
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec-secretariat/modules/validation'" class="w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-left flex items-center gap-3">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              Validate Reports
            </button>
            <button onclick="window.location.href='/dashboard/lgu-pmt-mpmec-secretariat/modules/compilation'" class="w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-left flex items-center gap-3">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              Compile Reports
            </button>
          </div>
        </div>
      </div>

      {loading ? (
        <div class="flex items-center justify-center py-12">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-[#92751F]"></div>
        </div>
      ) : error ? (
        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
          <p class="text-red-800">{error}</p>
        </div>
      ) : (
        <!-- Recent Submissions -->
        <div class="bg-white rounded-2xl shadow-lg border border-gray-100 p-6">
          <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-800">Recent Submissions</h3>
            <a href="/dashboard/lgu-pmt-mpmec-secretariat/modules/submissions" class="text-[#92751F] hover:text-[#7A6219] text-sm font-medium">
              View All Submissions →
            </a>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {projects.slice(0, 6).map((project) => (
              <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                <div class="flex items-start justify-between mb-3">
                  <h4 class="font-medium text-gray-800 text-sm line-clamp-2">{project.name}</h4>
                  <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                    project.status === 'ongoing' ? 'bg-blue-100 text-blue-800' :
                    project.status === 'complete' ? 'bg-green-100 text-green-800' :
                    project.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :
                    'bg-gray-100 text-gray-800'
                  }`}>
                    {project.status}
                  </span>
                </div>
                
                <div class="space-y-2 text-sm text-gray-600">
                  <div class="flex justify-between">
                    <span>Project ID:</span>
                    <span class="font-mono">{project.projectCode}</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Progress:</span>
                    <span>{(parseFloat(project.progress?.overallProgress || project.overallProgress || 0)).toFixed(2)}%</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Budget:</span>
                    <span>₱{(parseFloat(project.totalBudget) || 0).toLocaleString()}</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Office:</span>
                    <span class="text-xs">{project.implementingOfficeName}</span>
                  </div>
                </div>
                
                <button onclick={`viewProjectDetails('${project.id}')`} class="w-full mt-4 px-3 py-2 bg-[#92751F] text-white text-sm rounded-lg hover:bg-[#7A6219] transition-colors">
                  View Details
                </button>
              </div>
            ))}
          </div>
        </div>
      )}
    </section>
  </SecretariatLayout>
</Layout>

<script>
  import authService from '../../../services/auth.js';
  
  // Authentication check for Secretariat
  document.addEventListener('DOMContentLoaded', function() {
    // Check session validity first
    if (!authService.redirectIfInvalidSession()) {
      return;
    }
    
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    if (!token || !userData) {
      window.location.href = '/';
      return;
    }
    
    try {
      const user = JSON.parse(userData);
      
      // Check if user is Secretariat
      if (user.role !== 'LGU-PMT' || (user.subRole && !user.subRole.toLowerCase().includes('secretariat'))) {
        // Redirect to appropriate dashboard based on role
        authService.redirectToDashboard(user.role, user.subRole);
        return;
      }
      
      console.log('Secretariat Dashboard loaded for user:', user.username);
      
    } catch (error) {
      console.error('Error parsing user data:', error);
      window.location.href = '/';
    }
  });

  function viewProjectDetails(projectId) {
    // Check session validity first
    if (!authService.redirectIfInvalidSession()) {
      return;
    }
    
    // Navigate to project details page or open modal
    window.location.href = `/dashboard/lgu-pmt-mpmec-secretariat/modules/submissions?project=${projectId}`;
  }
</script> 