'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    // Get existing users for seeding
    const secretariatUsers = await queryInterface.sequelize.query(
      "SELECT id FROM users WHERE role = 'LGU-PMT' AND (subRole LIKE '%Secretariat%' OR subRole LIKE '%MPMEC%') LIMIT 3",
      { type: Sequelize.QueryTypes.SELECT }
    );

    if (secretariatUsers.length === 0) {
      console.log('No secretariat users found for seeding templates');
      return;
    }

    const templateData = [
      // RPMES Forms
      {
        id: Sequelize.literal('UUID()'),
        name: 'RPMES Form 1 - Project Profile',
        description: 'Standard project profile form for RPMES reporting',
        category: 'rpmes_forms',
        subCategory: 'project_profile',
        department: 'All Departments',
        fileType: 'pdf',
        filePath: '/templates/rpmes/rpmes-form-1-project-profile.pdf',
        fileName: 'rpmes-form-1-project-profile.pdf',
        fileSize: 245760,
        version: '2.1',
        status: 'active',
        isRequired: true,
        downloadCount: 45,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['rpmes', 'project', 'profile', 'mandatory']),
        metadata: JSON.stringify({ formNumber: 'RPMES-1', year: '2025' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'RPMES Form 2 - Physical Accomplishment',
        description: 'Physical accomplishment reporting form',
        category: 'rpmes_forms',
        subCategory: 'physical_accomplishment',
        department: 'Engineering Office',
        fileType: 'pdf',
        filePath: '/templates/rpmes/rpmes-form-2-physical-accomplishment.pdf',
        fileName: 'rpmes-form-2-physical-accomplishment.pdf',
        fileSize: 198432,
        version: '2.0',
        status: 'active',
        isRequired: true,
        downloadCount: 38,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['rpmes', 'physical', 'accomplishment', 'engineering']),
        metadata: JSON.stringify({ formNumber: 'RPMES-2', year: '2025' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'RPMES Form 3 - Financial Report',
        description: 'Financial reporting and budget utilization form',
        category: 'rpmes_forms',
        subCategory: 'financial_report',
        department: 'Finance Department',
        fileType: 'xlsx',
        filePath: '/templates/rpmes/rpmes-form-3-financial-report.xlsx',
        fileName: 'rpmes-form-3-financial-report.xlsx',
        fileSize: 156789,
        version: '1.8',
        status: 'active',
        isRequired: true,
        downloadCount: 42,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['rpmes', 'financial', 'budget', 'finance']),
        metadata: JSON.stringify({ formNumber: 'RPMES-3', year: '2025' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'RPMES Form 4 - Issues and Concerns',
        description: 'Issues and concerns reporting form',
        category: 'rpmes_forms',
        subCategory: 'issues_concerns',
        department: 'All Departments',
        fileType: 'pdf',
        filePath: '/templates/rpmes/rpmes-form-4-issues-concerns.pdf',
        fileName: 'rpmes-form-4-issues-concerns.pdf',
        fileSize: 123456,
        version: '1.5',
        status: 'active',
        isRequired: true,
        downloadCount: 28,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['rpmes', 'issues', 'concerns', 'problems']),
        metadata: JSON.stringify({ formNumber: 'RPMES-4', year: '2025' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },

      // Progress Reports
      {
        id: Sequelize.literal('UUID()'),
        name: 'Monthly Progress Report Template',
        description: 'Standard monthly progress report template',
        category: 'progress_reports',
        subCategory: 'monthly',
        department: 'All Departments',
        fileType: 'docx',
        filePath: '/templates/progress/monthly-progress-report.docx',
        fileName: 'monthly-progress-report.docx',
        fileSize: 98765,
        version: '1.5',
        status: 'active',
        isRequired: false,
        downloadCount: 32,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['progress', 'monthly', 'report', 'template']),
        metadata: JSON.stringify({ frequency: 'monthly', type: 'progress' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'Quarterly Progress Report Template',
        description: 'Quarterly progress report template with detailed sections',
        category: 'progress_reports',
        subCategory: 'quarterly',
        department: 'Planning Office',
        fileType: 'docx',
        filePath: '/templates/progress/quarterly-progress-report.docx',
        fileName: 'quarterly-progress-report.docx',
        fileSize: 145678,
        version: '1.3',
        status: 'active',
        isRequired: false,
        downloadCount: 25,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['progress', 'quarterly', 'planning', 'report']),
        metadata: JSON.stringify({ frequency: 'quarterly', type: 'progress' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'Annual Progress Report Template',
        description: 'Comprehensive annual progress report template',
        category: 'progress_reports',
        subCategory: 'annual',
        department: 'All Departments',
        fileType: 'docx',
        filePath: '/templates/progress/annual-progress-report.docx',
        fileName: 'annual-progress-report.docx',
        fileSize: 234567,
        version: '2.0',
        status: 'active',
        isRequired: false,
        downloadCount: 18,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['progress', 'annual', 'comprehensive', 'report']),
        metadata: JSON.stringify({ frequency: 'annual', type: 'progress' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },

      // Specialized Forms
      {
        id: Sequelize.literal('UUID()'),
        name: 'Site Visit Report Form',
        description: 'Standardized site visit report form for field inspections',
        category: 'specialized_forms',
        subCategory: 'site_visit',
        department: 'Engineering Office',
        fileType: 'pdf',
        filePath: '/templates/specialized/site-visit-report.pdf',
        fileName: 'site-visit-report.pdf',
        fileSize: 87654,
        version: '1.2',
        status: 'active',
        isRequired: false,
        downloadCount: 18,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['site', 'visit', 'inspection', 'field']),
        metadata: JSON.stringify({ type: 'inspection', category: 'field' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'Quality Assessment Form',
        description: 'Quality assessment and evaluation form',
        category: 'specialized_forms',
        subCategory: 'quality_assessment',
        department: 'Engineering Office',
        fileType: 'pdf',
        filePath: '/templates/specialized/quality-assessment.pdf',
        fileName: 'quality-assessment.pdf',
        fileSize: 65432,
        version: '1.0',
        status: 'active',
        isRequired: false,
        downloadCount: 15,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['quality', 'assessment', 'evaluation']),
        metadata: JSON.stringify({ type: 'assessment', category: 'quality' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'Budget Variance Report',
        description: 'Budget variance analysis and reporting form',
        category: 'specialized_forms',
        subCategory: 'budget_variance',
        department: 'Finance Department',
        fileType: 'xlsx',
        filePath: '/templates/specialized/budget-variance-report.xlsx',
        fileName: 'budget-variance-report.xlsx',
        fileSize: 112233,
        version: '1.0',
        status: 'active',
        isRequired: false,
        downloadCount: 28,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['budget', 'variance', 'financial', 'analysis']),
        metadata: JSON.stringify({ type: 'financial', category: 'budget' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: Sequelize.literal('UUID()'),
        name: 'Risk Assessment Form',
        description: 'Project risk assessment and mitigation form',
        category: 'specialized_forms',
        subCategory: 'risk_assessment',
        department: 'Planning Office',
        fileType: 'pdf',
        filePath: '/templates/specialized/risk-assessment.pdf',
        fileName: 'risk-assessment.pdf',
        fileSize: 78901,
        version: '1.1',
        status: 'draft',
        isRequired: false,
        downloadCount: 8,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['risk', 'assessment', 'mitigation', 'planning']),
        metadata: JSON.stringify({ type: 'assessment', category: 'risk' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: null,
        approvedAt: null,
        createdAt: new Date(),
        updatedAt: new Date()
      },

      // Compliance Forms
      {
        id: Sequelize.literal('UUID()'),
        name: 'Environmental Compliance Report',
        description: 'Environmental compliance and impact assessment form',
        category: 'compliance_forms',
        subCategory: 'environmental',
        department: 'Environment Office',
        fileType: 'pdf',
        filePath: '/templates/compliance/environmental-compliance.pdf',
        fileName: 'environmental-compliance.pdf',
        fileSize: 134567,
        version: '1.3',
        status: 'active',
        isRequired: false,
        downloadCount: 12,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['environmental', 'compliance', 'impact', 'assessment']),
        metadata: JSON.stringify({ type: 'compliance', category: 'environmental' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      },

      // Monitoring Forms
      {
        id: Sequelize.literal('UUID()'),
        name: 'Project Monitoring Checklist',
        description: 'Comprehensive project monitoring checklist',
        category: 'monitoring_forms',
        subCategory: 'checklist',
        department: 'All Departments',
        fileType: 'pdf',
        filePath: '/templates/monitoring/project-monitoring-checklist.pdf',
        fileName: 'project-monitoring-checklist.pdf',
        fileSize: 56789,
        version: '1.4',
        status: 'active',
        isRequired: false,
        downloadCount: 22,
        lastDownloadedAt: new Date(),
        tags: JSON.stringify(['monitoring', 'checklist', 'project', 'inspection']),
        metadata: JSON.stringify({ type: 'monitoring', category: 'checklist' }),
        uploadedBy: secretariatUsers[0].id,
        approvedBy: secretariatUsers[0].id,
        approvedAt: new Date(),
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];

    await queryInterface.bulkInsert('templates', templateData, {});
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('templates', null, {});
  }
}; 